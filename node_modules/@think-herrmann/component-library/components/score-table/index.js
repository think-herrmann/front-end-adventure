import React from "react";
import FontAwesomeIcon from "@fortawesome/react-fontawesome";
import { faSortDown, faSortUp } from "@fortawesome/fontawesome-free-solid";
import PropTypes from "prop-types";
import Markdown from "react-markdown/with-html";
import _ from "lodash";

import styles from "./styles.css";
import { Colors } from "../colors";

export default function ScoreTable(props) {
  let preferenceCode = _.values(props.preferenceCode).map((score) =>
    score == 0 ? 1 : score
  );
  let profileScores = _.values(props.profileScores);
  let underPressure = _.values(props.underPressure);

  let customScores =
    props.scores &&
    props.scores.map((score) => {
      return { title: score.title, scores: _.values(_.omit(score, ["title"])) };
    });

  const scores =
    customScores ||
    [
      { title: props.preferenceCodeTitle, scores: preferenceCode },
      { title: props.profileScoreTitle, scores: profileScores },
      { title: props.underPressureTitle, scores: underPressure },
    ].filter((score) => score.scores != undefined);

  return (
    <table className={styles.scoreTable}>
      <tr>
        <th></th>
        <th className={styles.A}>A</th>
        <th className={styles.B}>B</th>
        <th className={styles.C}>C</th>
        <th className={styles.D}>D</th>
      </tr>
      {scores.map((score) => (
        <tr>
          <td>{score.title}</td>
          {score.scores.map((s, i) => (
            <td key={i}>{s}</td>
          ))}
        </tr>
      ))}
      <tr className={styles.borderRow}>
        <td></td>
        <td className={styles.A}></td>
        <td className={styles.B}></td>
        <td className={styles.C}></td>
        <td className={styles.D}></td>
      </tr>
    </table>
  );
}
