import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import FontAwesomeIcon from '@fortawesome/react-fontawesome';
import _ from 'lodash';
import { pie } from 'arcs';
import '@fortawesome/fontawesome';
import '@fortawesome/fontawesome-free-regular';
import '@fortawesome/fontawesome-free-brands';
import 'react-router-dom';
import Markdown from 'react-markdown/with-html';
import '@fortawesome/fontawesome-free-solid';
import { TimelineMax } from 'gsap';

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ":root {\n  --extra-light-blue: #B3E3F5;\n  --light-blue: #80D3F1;\n  --blue: #2CC3F0;\n  --dark-blue:#0F8FB0;\n  --extra-light-green: #CBE7D3;\n  --light-green: #9FD5B3;\n  --green: #63C084;\n  --dark-green: #28A462;\n  --extra-light-red: #F1BBC3;\n  --light-red: #F38595;\n  --red: #EF354E;\n  --dark-red: #BA2031;\n  --extra-light-yellow: #FCF7CB;\n  --light-yellow: #FBE98E;\n  --yellow: #FDD742;\n  --dark-yellow: #C7A52E;\n  --navy: #214263;\n  --light-navy: #C6D9EC;\n  --light-grey: #CBCBCA;\n  --grey: #9D9D9D;\n  --dark-grey: #4E504F;\n  --black: #000000;\n}\n";
styleInject(css);

var css$1 = ".styles_tile__3xwDE {\n  border: 1px solid #eff2f5;\n  color: var(--dark-grey);\n  border-radius: 6px;\n  box-shadow: 0px 1px 6px 0px rgba(153,153,153,0.2);\n  background-color: white;\n  padding: 10px;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.styles_tileFlexWrapper__3Bljk {\n  display: flex;\n  align-items: flex-start;\n}\n\n.styles_quadWrapper__2Rpy_ {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 20px;\n  margin: 0px 5px 0 -5px;\n}\n\n.styles_quadWrapper__2Rpy_ h3 {\n  margin: 0;\n  padding: 0;\n}\n\n.styles_tileFlexWrapper__3Bljk .styles_content__3B8w2 * {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n.styles_tileFlexWrapper__3Bljk .styles_content__3B8w2 {\n  border-left: 1px solid var(--light-grey);\n  padding-left: 10px;\n}\n\n.styles_content__3B8w2 {\n  width: 100%;\n}\n";
var styles = {"tile":"styles_tile__3xwDE","tileFlexWrapper":"styles_tileFlexWrapper__3Bljk","quadWrapper":"styles_quadWrapper__2Rpy_","content":"styles_content__3B8w2"};
styleInject(css$1);

var css$2 = ".styles_colorHex__3W0PB {\n  display: flex;\n  align-items: center;\n  width: 200px;\n}\n\n.styles_colorHex__3W0PB * {\n  margin: 5px;\n}\n\n.styles_colorHex__3W0PB .styles_color__2QAR6 {\n  height: 40px;\n  width: 40px;\n  background-color: grey;\n}\n\n.styles_colorsWrapper__1Egtk {\n  max-width: 800px;\n  display: flex;\n  flex-wrap: wrap;\n}\n";
styleInject(css$2);

var chart_colors = {
  "EXTRA_LIGHT_BLUE": "B3E3F5",
  "LIGHT_BLUE": "80D3F1",
  "BLUE": "2CC3F0",
  "DARK_BLUE": "0F8FB0",
  "EXTRA_LIGHT_GREEN": "CBE7D3",
  "LIGHT_GREEN": "9FD5B3",
  "GREEN": "63C084",
  "DARK_GREEN": "28A462",
  "EXTRA_LIGHT_RED": "F1BBC3",
  "LIGHT_RED": "F38595",
  "RED": "EF354E",
  "DARK_RED": "BA2031",
  "EXTRA_LIGHT_YELLOW": "FCF7CB",
  "LIGHT_YELLOW": "FBE98E",
  "YELLOW": "FDD742",
  "DARK_YELLOW": "C7A52E",
  "NAVY": "214263",
  "LIGHT_NAVY": "C6D9EC",
  "LIGHT_GREY": "CBCBCA",
  "GREY": "9D9D9D",
  "DARK_GREY": "4E504F",
  "BLACK": "000000"
};
var ChartColors = {
  A: {
    "default": chart_colors.BLUE,
    0: chart_colors.DARK_BLUE,
    1: chart_colors.BLUE,
    2: chart_colors.LIGHT_BLUE,
    3: chart_colors.EXTRA_LIGHT_BLUE
  },
  B: {
    "default": chart_colors.GREEN,
    0: chart_colors.DARK_GREEN,
    1: chart_colors.GREEN,
    2: chart_colors.LIGHT_GREEN,
    3: chart_colors.EXTRA_LIGHT_GREEN
  },
  C: {
    "default": chart_colors.RED,
    0: chart_colors.DARK_RED,
    1: chart_colors.RED,
    2: chart_colors.LIGHT_RED,
    3: chart_colors.EXTRA_LIGHT_RED
  },
  D: {
    "default": chart_colors.YELLOW,
    0: chart_colors.DARK_YELLOW,
    1: chart_colors.YELLOW,
    2: chart_colors.LIGHT_YELLOW,
    3: chart_colors.EXTRA_LIGHT_YELLOW
  }
};
var Colors = {
  green: "#" + chart_colors.GREEN,
  red: "#" + chart_colors.RED,
  blue: '#' + chart_colors.BLUE,
  yellow: "#" + chart_colors.YELLOW,
  navy: "#" + chart_colors.NAVY,
  lightNavy: "#" + chart_colors.LIGHT_NAVY,
  grey: "#" + chart_colors.DARK_GREY,
  white: "#FFF"
};
var ColorsByQuadrant = {
  A: Colors.blue,
  B: Colors.green,
  C: Colors.red,
  D: Colors.yellow
};

function QuadIcon(props) {
  var chart = React.createElement("svg", {
    viewBox: "0 0 50 50"
  }, React.createElement("rect", {
    x: "1.9",
    y: "33.1",
    fill: "#38C3EE",
    width: "10.4",
    height: "10.7"
  }), React.createElement("circle", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    cx: "7",
    cy: "26.4",
    r: "2.6"
  }), React.createElement("rect", {
    x: "13.9",
    y: "25.2",
    fill: "#38C3EE",
    width: "10.4",
    height: "18.6"
  }), React.createElement("circle", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    cx: "19.1",
    cy: "12.1",
    r: "2.6"
  }), React.createElement("rect", {
    x: "25.9",
    y: "34.5",
    fill: "#38C3EE",
    width: "10.4",
    height: "9.3"
  }), React.createElement("circle", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    cx: "31.1",
    cy: "27.9",
    r: "2.6"
  }), React.createElement("rect", {
    x: "37.9",
    y: "23",
    fill: "#38C3EE",
    width: "10.4",
    height: "20.8"
  }), React.createElement("circle", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    cx: "43.1",
    cy: "7.5",
    r: "2.6"
  }), React.createElement("polyline", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    points: "8.7,23.7 17,14.7 15.1,16.8 "
  }), React.createElement("line", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    x1: "21.5",
    y1: "14.3",
    x2: "30.3",
    y2: "25.7"
  }), React.createElement("line", {
    fill: "none",
    stroke: "#38C3EE",
    "stroke-width": "2.4733",
    "stroke-miterlimit": "10",
    x1: "41.9",
    y1: "9.4",
    x2: "31.8",
    y2: "25.8"
  }));
  var hands = React.createElement("svg", {
    viewBox: "0 0 948.4 892.03"
  }, React.createElement("g", {
    id: "Layer_1-2",
    "data-name": "Layer 1"
  }, React.createElement("path", {
    fill: "#ef384f",
    d: "M617.63,485.66c-16.79-17.49-46.21-17.49-63,0L548,492.53c-17.48,18.14-17.47,48.82,0,67l136.46,142c16.72,17.39,46.28,17.44,63,0l6.6-6.89c17.76-18.47,17.76-48.53,0-67Z"
  }), React.createElement("path", {
    fill: "#ef384f",
    d: "M642.73,294.5c-30.72,29.81-110.25,41-160.12-10.23l-47.07-48.2c-24.7-23.32-51.77-16.35-93.88-3.14-47.39,14.89-106.39,33.47-170.88-19.48L187,193.74c53.81,44.2,101.21,29.32,147.06,14.88,40.42-12.71,82.17-25.85,119.39,9.28l47.44,48.58c37.2,38.17,101,32.22,124.14,9.73,9.43-9.16,9.07-18-1.21-28.62L437,54.16C354.85-29,226.78,1.56,181,28.23c-31.67,18.52-63.38,45-91.68,76.65-80.23,89.73-136.88,233-32.49,341.44l57.93,60.17L335.83,265.38l18.79,17.22L114,545c-21.25,23.19-13.79,58.85,6.5,77.59,8.92,8.26,32.73,24.07,61.63-7l121.16-130L322,502.91,313.52,512l.05,0L200.8,633c-26.87,28.87-17.55,56.79.12,73.26,18.26,17.07,48.42,23.69,68.34,2.39l6-6.36q1.69-2,3.55-4a11.57,11.57,0,0,1,1.15-1.07L393.21,576.12l18.61,17.42L294.36,719.09c-21.86,25.83-14.28,50,.71,64.42,17.81,17.12,48.19,22.57,68.16,2.21l48.63-49.63c.59-.67,1.19-1.33,1.81-2l6.63-6.89c1.47-1.54,3-3,4.59-4.41a12.08,12.08,0,0,1,1.22-1c12.49-10.6,28.08-17,44.17-15.92-23.49-28.42-22.3-71.44,3.56-98.34l6.62-6.87a68.75,68.75,0,0,1,49.88-21.35h1.34l-2-2.12c-27.15-28.19-27.16-74.08,0-102.3l6.62-6.89c26.5-27.57,73.28-27.52,99.76,0l17.4,18.12A73.72,73.72,0,0,1,673.75,434l6.59-6.87a68.75,68.75,0,0,1,49.91-21.33h0a68.58,68.58,0,0,1,49.8,21.33l49.49,51.51,60.48-62.83c99.46-103.32,60-246.64-30.45-334.78C775.4-1.1,645.86-38.83,546.45,61.88l-33.3,34.48,129,133.51C662.16,250.65,662.4,275.41,642.73,294.5Z"
  }), React.createElement("path", {
    fill: "#ef384f",
    d: "M730.27,431.31h0a43.4,43.4,0,0,0-31.54,13.52l-6.59,6.86c-17.46,18.17-17.48,48.88,0,67l85.67,89.18c16.69,17.4,46.26,17.45,63,0l6.65-6.89c17.73-18.46,17.73-48.52,0-67l-85.69-89.18A43.34,43.34,0,0,0,730.27,431.31Z"
  }), React.createElement("path", {
    fill: "#ef384f",
    d: "M561.83,618.3a43.32,43.32,0,0,0-31.48-13.54h0a43.41,43.41,0,0,0-31.52,13.54h0l-6.62,6.86c-17.73,18.47-17.73,48.53,0,67l93.57,97.35a43.43,43.43,0,0,0,63,0l6.63-6.9c17.45-18.16,17.45-48.84,0-67Z"
  }), React.createElement("path", {
    fill: "#ef384f",
    d: "M432.06,818.79l57.44,59.75A43.41,43.41,0,0,0,521,892h0a43.36,43.36,0,0,0,31.51-13.49l6.6-6.87c17.47-18.19,17.47-48.87,0-67L501.7,744.88c-15.86-16.47-43-17.42-60.12-2.74L431,753C414.64,771.25,415,801,432.06,818.79Z"
  }), React.createElement("polygon", {
    fill: "#fff",
    points: "313.52 511.97 200.8 632.95 313.57 512.01 313.52 511.97"
  }), React.createElement("polygon", {
    fill: "#fff",
    points: "303.33 485.54 182.16 615.58 294.93 494.64 313.52 511.97 321.97 502.91 303.33 485.54"
  }), React.createElement("path", {
    fill: "#fff",
    d: "M275.22,702.24l4.7-5a11.57,11.57,0,0,0-1.15,1.07Q276.91,700.25,275.22,702.24Z"
  }), React.createElement("path", {
    fill: "#fff",
    d: "M432.06,751.78c-.38.39-.74.8-1.1,1.2l10.62-10.84c-1,.86-2,1.77-2.92,2.74Z"
  }), React.createElement("path", {
    fill: "#fff",
    d: "M413.67,734.11c-.62.65-1.22,1.31-1.81,2L424.68,723l.21-.2c-1.59,1.41-3.12,2.87-4.59,4.41Z"
  }), React.createElement("polygon", {
    fill: "#fff",
    points: "827.92 480.41 846.28 498.08 847.26 497.06 829.59 478.67 827.92 480.41"
  })));
  var alarm = React.createElement("svg", {
    viewBox: "0 0 50 50"
  }, React.createElement("path", {
    fill: "#64C086",
    d: "M23.5,4.7c10.4,0,18.4,5.1,21.6,13.2c3.5,8.7,2.1,16.8-4.3,23.7c-1.3,1.4-1.6,2.2,0,3.4c1.2,0.9,1.5,2,0.3,3.2c-1.2,1.2-2.3,1-3.2-0.2c-1.5-2-3-2-5.3-1.1c-5.2,2.1-10.7,2-15.9-0.4c-1.6-0.7-2.6-0.5-3.6,0.8c-0.2,0.3-0.6,0.6-0.9,0.9c-1,1-2,1.1-3.1,0c-1-1.1-0.9-2.2,0.2-3c1.9-1.4,1.5-2.2,0-3.8c-6.4-7-7.8-15.1-4-23.7 C9.1,9.2,16,5.1,23.5,4.7z"
  }), React.createElement("path", {
    fill: "#64C086",
    d: "M29.7,3.7c2.7-1.9,5.2-2.3,7.8-1.8c1,0.2,1.8,0.4,2.6-0.7c0.7-1,1.7-0.8,2.7-0.2c0.8,0.6,1.3,1.5,0.7,2.4c-0.7,1.1-0.4,1.7,0.3,2.6c1.7,2.3,2.1,4.8,1.5,8.3C41.1,8.9,36.4,5.2,29.7,3.7z"
  }), React.createElement("path", {
    fill: "#64C086",
    d: "M20.9,3.7c-6.7,1.5-11.6,5-15.4,10.5C4.8,10.9,5.3,8.3,7,6c0.6-0.8,1-1.4,0.3-2.4C6.5,2.6,7.1,1.7,8,1c1-0.7,2-0.7,2.6,0.3C11.3,2.3,12,2.2,13,2C15.6,1.4,18.1,1.8,20.9,3.7z"
  }), React.createElement("path", {
    fill: "#FFFFFF",
    d: "M42.8,26.7c-0.1,9.7-8,17.6-17.6,17.6c-9.7,0-17.6-8.1-17.6-17.9c0.1-9.7,8-17.6,17.6-17.5C34.9,8.8,42.8,16.8,42.8,26.7z"
  }), React.createElement("path", {
    fill: "#64C086",
    d: "M29.9,28.8c-2,0-4,0-6,0c-1.1,0-1.5-0.4-1.5-1.5c0-4.1,0-8.2,0-12.3c0-1.3,0.7-2.1,1.9-2.1c1.4,0,2.1,0.8,2.1,2.2c0,2.6,0.1,5.2,0,7.7c-0.1,1.5,0.5,1.9,1.9,1.8c2.5-0.1,5,0,7.5,0c1.3,0,2.3,0.4,2.3,2c0,1.5-0.9,2.1-2.2,2.1C33.9,28.8,31.9,28.8,29.9,28.8C29.9,28.8,29.9,28.8,29.9,28.8z"
  }));
  var light = React.createElement("svg", {
    viewBox: "0 0 50 50"
  }, React.createElement("g", null, React.createElement("path", {
    fill: "#F4BD45",
    d: "M25.6,39.5c-1.2,0-2.5,0.1-3.7,0c-1.2-0.1-2-0.7-0.9-1.9c0.8-0.8,0.2-1.5,0-2.2c-0.8-2.4-2.6-4-4.1-6c-4-5.4-2.7-12.6,3-16.1c4.5-2.8,10.4-2.1,14.1,1.8c3.7,3.9,4.1,9.6,0.9,14.1c-1.3,1.8-3,3.3-3.9,5.4c-0.4,1-1.2,2-0.1,3.2c0.8,1-0.1,1.5-1.1,1.6C28.4,39.5,27,39.5,25.6,39.5z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M42.9,23.4c-0.7,0-1.4,0-2.1,0c-0.6,0-1-0.4-1-1c0-0.6,0.4-1,0.9-1c1.4-0.1,2.9-0.1,4.3,0c0.6,0,1.1,0.4,1.1,1.1c0,0.7-0.6,1-1.2,1C44.2,23.4,43.6,23.4,42.9,23.4C42.9,23.4,42.9,23.4,42.9,23.4z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M12.2,7.7c0.7,0,4.1,3.4,4,4.1c0,0.4-0.2,0.8-0.6,0.9c-0.5,0.2-0.9,0.1-1.3-0.2c-1-1-2-1.9-2.9-2.9c-0.3-0.3-0.5-0.8-0.2-1.2C11.5,7.9,11.8,7.7,12.2,7.7z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M36.4,31.9c0.7,0,4.1,3.3,4.1,4c-0.1,1-0.9,1.4-1.7,0.8c-1.2-0.9-2.2-2-3.2-3.1C35,32.9,35.6,31.9,36.4,31.9z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M15.3,31.9c0.4,0,0.7,0.2,0.9,0.6c0.2,0.5,0.1,0.9-0.2,1.2c-1,1-1.9,1.9-2.9,2.9c-0.4,0.3-0.8,0.4-1.3,0.2c-0.4-0.2-0.6-0.5-0.6-0.9C11.2,35.3,14.6,31.9,15.3,31.9z"
  }), React.createElement("path", {
    fill: "#FBF9F4",
    d: "M23.7,14.7c-0.2,0.5-0.6,0.8-1,1c-1.9,1-3.2,2.5-3.9,4.5c-0.2,0.6-0.4,1.3-1.2,1c-0.9-0.3-0.5-1.1-0.3-1.7c0.9-2.4,2.5-4.1,4.7-5.3C22.8,13.8,23.4,13.7,23.7,14.7z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M39.1,11.7c-0.5,0.5-1.1,1-1.7,1.4c-0.5,0.3-1,0.3-1.4-0.1c-0.4-0.5-0.4-1,0.1-1.4c1-1,2.1-1.9,3.3-2.8c0.5-0.4,1.1-0.4,1.5,0.2c0.4,0.6,0.2,1.1-0.3,1.5C40.1,10.9,39.6,11.3,39.1,11.7C39.1,11.8,39.1,11.8,39.1,11.7z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M26.6,5.3c0,0.7,0.1,1.4,0,2.1c0,0.6-0.4,1-1,1c-0.6,0-1-0.4-1.1-0.9c-0.1-1.4-0.1-2.9-0.1-4.3c0-0.6,0.4-1.1,1.1-1.1c0.7,0,1,0.5,1,1.2C26.7,4,26.6,4.6,26.6,5.3C26.6,5.3,26.6,5.3,26.6,5.3z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M8.8,23.4c-0.7,0-1.4,0-2.1,0c-0.6,0-1-0.4-1-1c0-0.6,0.4-1,0.9-1c1.4-0.1,2.9-0.1,4.3,0c0.6,0,1.1,0.4,1.1,1.1c0,0.7-0.6,1-1.2,1C10.1,23.4,9.5,23.4,8.8,23.4C8.8,23.4,8.8,23.4,8.8,23.4z"
  })), React.createElement("path", {
    fill: "#F4BD45",
    d: "M30.2,42.9h-8.8c-0.6,0-1-0.5-1-1v-0.1c0-0.6,0.5-1,1-1h8.8c0.6,0,1,0.5,1,1v0.1C31.3,42.4,30.8,42.9,30.2,42.9z"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M29.7,46.2c0,1.4-1.7,2.5-3.8,2.5s-3.8-1.1-3.8-2.5"
  }), React.createElement("path", {
    fill: "#F4BD45",
    d: "M30.2,46.2h-8.8c-0.6,0-1-0.5-1-1v-0.1c0-0.6,0.5-1,1-1h8.8c0.6,0,1,0.5,1,1v0.1C31.3,45.8,30.8,46.2,30.2,46.2z"
  }));
  var icons = {
    A: chart,
    B: alarm,
    C: hands,
    D: light
  };
  var maxWidth = {
    maxWidth: props.maxWidth + 'px',
    width: '100%'
  };
  return React.createElement("div", {
    style: maxWidth
  }, icons[props.quad]);
}
QuadIcon.propTypes = {
  quad: PropTypes.oneOf(['A', 'B', 'C', 'D']).isRequired,
  maxWidth: PropTypes.number
};

function Tile(props) {
  var tileStyles = {
    borderColor: ColorsByQuadrant[props.quad],
    maxWidth: props.maxWidth + "px"
  };
  return React.createElement("div", {
    className: cx(styles.tile, props.className),
    style: tileStyles
  }, props.quad && React.createElement("div", {
    className: styles.tileFlexWrapper
  }, React.createElement("div", {
    className: styles.quadWrapper
  }, React.createElement("h3", null, props.quad), React.createElement(QuadIcon, {
    quad: props.quad,
    maxWidth: 20
  })), React.createElement("div", {
    className: styles.content
  }, props.children)), !props.quad && React.createElement("div", null, props.children));
}
Tile.propTypes = {
  maxWidth: PropTypes.number,
  quad: PropTypes.oneOf(['A', 'B', 'C', 'D'])
};

var css$3 = ".styles_wrapper__2yF7i {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.styles_wrapper__2yF7i img {\n  width: 100%;\n}\n";
styleInject(css$3);

function Logo(props) {
  var mark = React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 418.17 418.35"
  }, React.createElement("title", null, "Herrmann Logo"), React.createElement("g", {
    id: "Layer_2",
    "data-name": "Layer 2"
  }, React.createElement("g", {
    id: "Layer_1-2",
    "data-name": "Layer 1"
  }, React.createElement("path", {
    fill: "#fdd641",
    d: "M403.55,198.93h-.07l-101.86-.43a14.63,14.63,0,0,1-14.57-14.63V110.28a14.63,14.63,0,0,1,29.25,0v59l70.13.3c-4.39-20.05-16.17-56.15-47-88.09-31.13-32.27-68.28-44.84-88.88-49.59V163.56a14.63,14.63,0,1,1-29.25,0V14.62A14.63,14.63,0,0,1,237.08,0c2.84.22,70.22,6,123.43,61.18S418,180.75,418.15,183.46a14.63,14.63,0,0,1-14.6,15.47Z"
  }), React.createElement("path", {
    fill: "#ee374f",
    d: "M236,418.35a14.64,14.64,0,0,1-14.62-14.63V254.78a14.63,14.63,0,0,1,29.25,0V386.35c20.67-4.81,57.95-17.46,88.88-49.53a184.32,184.32,0,0,0,47-88.08l-70.19.3v59a14.63,14.63,0,1,1-29.25,0V234.47a14.62,14.62,0,0,1,14.57-14.62l101.86-.44h.07a14.64,14.64,0,0,1,14.6,15.47c-.16,2.72-4.46,67.12-57.64,122.25S239.92,418.08,237.08,418.3C236.7,418.33,236.33,418.35,236,418.35Z"
  }), React.createElement("path", {
    fill: "#2dc2ee",
    d: "M14.63,198.93A14.63,14.63,0,0,1,0,183.46c.16-2.71,4.47-67.12,57.64-122.24S178.25.26,181.1,0a14.63,14.63,0,0,1,15.75,14.58V163.56a14.63,14.63,0,1,1-29.25,0V32c-20.67,4.81-58,17.46-88.89,49.53a184.47,184.47,0,0,0-47,88.09l70.19-.3v-59a14.63,14.63,0,0,1,29.25,0v73.59a14.63,14.63,0,0,1-14.56,14.63l-101.87.43Z"
  }), React.createElement("path", {
    fill: "#63bf83",
    d: "M182.22,418.35c-.37,0-.75,0-1.12-.05-2.85-.22-70.23-6-123.44-61.17S.18,237.6,0,234.88a14.64,14.64,0,0,1,14.61-15.47h.06l101.87.44a14.62,14.62,0,0,1,14.56,14.62v73.59a14.63,14.63,0,1,1-29.25,0V249l-70.13-.3c4.4,20.05,16.17,56.15,47,88.08,31.14,32.28,68.28,44.85,88.89,49.59V254.78a14.63,14.63,0,0,1,29.25,0V403.72a14.64,14.64,0,0,1-14.63,14.63Z"
  }))));
  var full = React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 1504.94 418.35"
  }, React.createElement("title", null, "Herrmann Logotype"), React.createElement("g", {
    id: "Layer_2",
    "data-name": "Layer 2"
  }, React.createElement("g", {
    id: "Layer_1-2",
    "data-name": "Layer 1"
  }, React.createElement("path", {
    fill: "#fdd641",
    d: "M403.55,198.93h-.07l-101.86-.43a14.63,14.63,0,0,1-14.57-14.63V110.28a14.63,14.63,0,0,1,29.25,0v59l70.13.3c-4.39-20.05-16.17-56.15-47-88.09-31.13-32.27-68.28-44.84-88.88-49.59V163.56a14.63,14.63,0,1,1-29.25,0V14.62A14.63,14.63,0,0,1,237.08,0c2.84.22,70.22,6,123.43,61.18S418,180.75,418.15,183.46a14.63,14.63,0,0,1-14.6,15.47Z"
  }), React.createElement("path", {
    fill: "#ee374f",
    d: "M236,418.35a14.64,14.64,0,0,1-14.62-14.63V254.78a14.63,14.63,0,0,1,29.25,0V386.35c20.67-4.81,57.95-17.46,88.88-49.53a184.32,184.32,0,0,0,47-88.08l-70.19.3v59a14.63,14.63,0,1,1-29.25,0V234.47a14.62,14.62,0,0,1,14.57-14.62l101.86-.44h.07a14.64,14.64,0,0,1,14.6,15.47c-.16,2.72-4.46,67.12-57.64,122.25S239.92,418.08,237.08,418.3C236.7,418.33,236.33,418.35,236,418.35Z"
  }), React.createElement("path", {
    fill: "#2dc2ee",
    d: "M14.63,198.93A14.63,14.63,0,0,1,0,183.46c.16-2.71,4.47-67.12,57.64-122.24S178.25.26,181.1,0a14.63,14.63,0,0,1,15.75,14.58V163.56a14.63,14.63,0,1,1-29.25,0V32c-20.67,4.81-58,17.46-88.89,49.53a184.47,184.47,0,0,0-47,88.09l70.19-.3v-59a14.63,14.63,0,0,1,29.25,0v73.59a14.63,14.63,0,0,1-14.56,14.63l-101.87.43Z"
  }), React.createElement("path", {
    fill: "#63bf83",
    d: "M182.22,418.35c-.37,0-.75,0-1.12-.05-2.85-.22-70.23-6-123.44-61.17S.18,237.6,0,234.88a14.64,14.64,0,0,1,14.61-15.47h.06l101.87.44a14.62,14.62,0,0,1,14.56,14.62v73.59a14.63,14.63,0,1,1-29.25,0V249l-70.13-.3c4.4,20.05,16.17,56.15,47,88.08,31.14,32.28,68.28,44.85,88.89,49.59V254.78a14.63,14.63,0,0,1,29.25,0V403.72a14.64,14.64,0,0,1-14.63,14.63Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M578.81,299.37V223.66h-90v75.71H458.5V126.43h30.34V196.7h90V126.43h30.34V299.37Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M690.3,302.48A72.34,72.34,0,0,1,664,297.82a59.08,59.08,0,0,1-20.74-13.36,61.83,61.83,0,0,1-13.61-20.87,71.2,71.2,0,0,1-4.93-27,70.11,70.11,0,0,1,4.67-25.53,64,64,0,0,1,84.26-35,56,56,0,0,1,19.45,14.13,63.12,63.12,0,0,1,12.32,21.52A83.37,83.37,0,0,1,749.67,239v6.74H653.22A40.75,40.75,0,0,0,657,258.92a37.22,37.22,0,0,0,8,11,36.39,36.39,0,0,0,12.06,7.52,43.18,43.18,0,0,0,15.81,2.73,55.15,55.15,0,0,0,19.19-3.64,44.89,44.89,0,0,0,16.59-10.37l12.45,17.89a63.5,63.5,0,0,1-22.82,13.75A83.52,83.52,0,0,1,690.3,302.48Zm33.19-76.23A37,37,0,0,0,721,215a33.34,33.34,0,0,0-17.24-18.54q-6.48-3.12-15.81-3.11a35.6,35.6,0,0,0-15,3,32.23,32.23,0,0,0-10.76,7.78,35.64,35.64,0,0,0-6.61,10.63,35.14,35.14,0,0,0-2.6,11.53Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M763.67,299.37V174.14H790.9v18.15a62.1,62.1,0,0,1,17.89-15.17A45.12,45.12,0,0,1,831.6,171v27a39.71,39.71,0,0,0-8.29-.77,35.47,35.47,0,0,0-9.21,1.29,47.92,47.92,0,0,0-9.33,3.63,41.83,41.83,0,0,0-8.17,5.45,27.7,27.7,0,0,0-5.7,6.48v85.3Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M840.68,299.37V174.14H867.9v18.15a62.23,62.23,0,0,1,17.89-15.17A45.13,45.13,0,0,1,908.61,171v27a39.87,39.87,0,0,0-8.3-.77,35.34,35.34,0,0,0-9.2,1.29,47.77,47.77,0,0,0-9.34,3.63,42.13,42.13,0,0,0-8.17,5.45,27.7,27.7,0,0,0-5.7,6.48v85.3Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M1071.43,299.37V217.7q0-10.11-4.8-16.34t-15.94-6.22a30.37,30.37,0,0,0-17,5.19,41.52,41.52,0,0,0-12.06,11.4v87.64H994.42V217.7q0-10.11-4.66-16.34t-15.82-6.22a29.22,29.22,0,0,0-16.85,5.32,50,50,0,0,0-12.19,11.27v87.64H917.68V174.14H944.9V191a42.3,42.3,0,0,1,6-6.35,49.37,49.37,0,0,1,9.33-6.48,67.91,67.91,0,0,1,11.93-5.06A44.89,44.89,0,0,1,985.87,171q14,0,22.56,6.35a31.6,31.6,0,0,1,11.66,16.46,44.54,44.54,0,0,1,6.88-8.29,50.21,50.21,0,0,1,9.85-7.39A55.22,55.22,0,0,1,1049,173a48.27,48.27,0,0,1,13.62-1.94q17.1,0,26.57,9.33t9.47,28.52v90.49Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M1209.11,299.37V282.26a54.32,54.32,0,0,1-17.5,14.78,47.57,47.57,0,0,1-22.69,5.44,55.47,55.47,0,0,1-22.17-4.41,48.05,48.05,0,0,1-17.63-13,61.69,61.69,0,0,1-11.54-20.74,86,86,0,0,1-4.15-27.75,84.3,84.3,0,0,1,4.15-27.22,61.79,61.79,0,0,1,11.54-20.74,50,50,0,0,1,17.5-13.1,53.91,53.91,0,0,1,22.3-4.53,49.29,49.29,0,0,1,22.3,5.18,50.31,50.31,0,0,1,17.89,15.3V174.14h27.22V299.37Zm-32.15-21a35.92,35.92,0,0,0,9.46-1.3,41,41,0,0,0,9.08-3.63,45.07,45.07,0,0,0,7.77-5.31,30,30,0,0,0,5.84-6.61V212a37,37,0,0,0-5.84-6.48,41.54,41.54,0,0,0-7.77-5.44,41,41,0,0,0-9.08-3.63,36.34,36.34,0,0,0-9.46-1.3A32.87,32.87,0,0,0,1151,206.81a37.57,37.57,0,0,0-7.13,13.09,58.08,58.08,0,0,0,0,33.45,38.83,38.83,0,0,0,7.13,13.22,33.08,33.08,0,0,0,11.15,8.69A33.78,33.78,0,0,0,1177,278.37Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M1343.42,299.37v-78.3q0-14.77-6.88-20.35T1318,195.14a35.1,35.1,0,0,0-18.8,5.19,50.88,50.88,0,0,0-13.36,11.4v87.64h-27.22V174.14h27.22V191a58.08,58.08,0,0,1,17.9-13.74,61.4,61.4,0,0,1,12.31-4.54,57.24,57.24,0,0,1,14.13-1.68q20.22,0,30.34,10.37t10.11,29.82v88.15Z"
  }), React.createElement("path", {
    fill: "#4d4f4e",
    d: "M1477.72,299.37v-78.3q0-14.77-6.87-20.35t-18.54-5.58a35.15,35.15,0,0,0-18.8,5.19,50.66,50.66,0,0,0-13.35,11.4v87.64h-27.22V174.14h27.22V191a58.19,58.19,0,0,1,17.89-13.74,61.72,61.72,0,0,1,12.32-4.54A57.12,57.12,0,0,1,1464.5,171q20.22,0,30.33,10.37t10.11,29.82v88.15Z"
  }))));
  var maxWidth;

  if (props.maxWidth) {
    maxWidth = {
      maxWidth: props.maxWidth + 'px'
    };
  } else {
    maxWidth = {
      maxWidth: '100%'
    };
  }

  if (props.type == 'icon') {
    return React.createElement("div", {
      style: maxWidth
    }, mark);
  } else {
    return React.createElement("div", {
      style: maxWidth
    }, full);
  }
}
Logo.propTypes = {
  type: PropTypes.oneOf(['full', 'icon']).isRequired,
  maxWidth: PropTypes.number
};

var css$4 = "\n.styles_header__2sFna {\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: center;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientUnits='userSpaceOnUse' x1='0' x2='0' y1='0' y2='100%25' gradientTransform='rotate(240)'%3E%3Cstop offset='0' stop-color='%23336699'/%3E%3Cstop offset='1' stop-color='%23214263'/%3E%3C/linearGradient%3E%3Cpattern patternUnits='userSpaceOnUse' id='b' width='540' height='450' x='0' y='0' viewBox='0 0 1080 900'%3E%3Cg fill-opacity='0.1'%3E%3Cpolygon fill='%23444' points='90 150 0 300 180 300'/%3E%3Cpolygon points='90 150 180 0 0 0'/%3E%3Cpolygon fill='%23AAA' points='270 150 360 0 180 0'/%3E%3Cpolygon fill='%23DDD' points='450 150 360 300 540 300'/%3E%3Cpolygon fill='%23999' points='450 150 540 0 360 0'/%3E%3Cpolygon points='630 150 540 300 720 300'/%3E%3Cpolygon fill='%23DDD' points='630 150 720 0 540 0'/%3E%3Cpolygon fill='%23444' points='810 150 720 300 900 300'/%3E%3Cpolygon fill='%23FFF' points='810 150 900 0 720 0'/%3E%3Cpolygon fill='%23DDD' points='990 150 900 300 1080 300'/%3E%3Cpolygon fill='%23444' points='990 150 1080 0 900 0'/%3E%3Cpolygon fill='%23DDD' points='90 450 0 600 180 600'/%3E%3Cpolygon points='90 450 180 300 0 300'/%3E%3Cpolygon fill='%23666' points='270 450 180 600 360 600'/%3E%3Cpolygon fill='%23AAA' points='270 450 360 300 180 300'/%3E%3Cpolygon fill='%23DDD' points='450 450 360 600 540 600'/%3E%3Cpolygon fill='%23999' points='450 450 540 300 360 300'/%3E%3Cpolygon fill='%23999' points='630 450 540 600 720 600'/%3E%3Cpolygon fill='%23FFF' points='630 450 720 300 540 300'/%3E%3Cpolygon points='810 450 720 600 900 600'/%3E%3Cpolygon fill='%23DDD' points='810 450 900 300 720 300'/%3E%3Cpolygon fill='%23AAA' points='990 450 900 600 1080 600'/%3E%3Cpolygon fill='%23444' points='990 450 1080 300 900 300'/%3E%3Cpolygon fill='%23222' points='90 750 0 900 180 900'/%3E%3Cpolygon points='270 750 180 900 360 900'/%3E%3Cpolygon fill='%23DDD' points='270 750 360 600 180 600'/%3E%3Cpolygon points='450 750 540 600 360 600'/%3E%3Cpolygon points='630 750 540 900 720 900'/%3E%3Cpolygon fill='%23444' points='630 750 720 600 540 600'/%3E%3Cpolygon fill='%23AAA' points='810 750 720 900 900 900'/%3E%3Cpolygon fill='%23666' points='810 750 900 600 720 600'/%3E%3Cpolygon fill='%23999' points='990 750 900 900 1080 900'/%3E%3Cpolygon fill='%23999' points='180 0 90 150 270 150'/%3E%3Cpolygon fill='%23444' points='360 0 270 150 450 150'/%3E%3Cpolygon fill='%23FFF' points='540 0 450 150 630 150'/%3E%3Cpolygon points='900 0 810 150 990 150'/%3E%3Cpolygon fill='%23222' points='0 300 -90 450 90 450'/%3E%3Cpolygon fill='%23FFF' points='0 300 90 150 -90 150'/%3E%3Cpolygon fill='%23FFF' points='180 300 90 450 270 450'/%3E%3Cpolygon fill='%23666' points='180 300 270 150 90 150'/%3E%3Cpolygon fill='%23222' points='360 300 270 450 450 450'/%3E%3Cpolygon fill='%23FFF' points='360 300 450 150 270 150'/%3E%3Cpolygon fill='%23444' points='540 300 450 450 630 450'/%3E%3Cpolygon fill='%23222' points='540 300 630 150 450 150'/%3E%3Cpolygon fill='%23AAA' points='720 300 630 450 810 450'/%3E%3Cpolygon fill='%23666' points='720 300 810 150 630 150'/%3E%3Cpolygon fill='%23FFF' points='900 300 810 450 990 450'/%3E%3Cpolygon fill='%23999' points='900 300 990 150 810 150'/%3E%3Cpolygon points='0 600 -90 750 90 750'/%3E%3Cpolygon fill='%23666' points='0 600 90 450 -90 450'/%3E%3Cpolygon fill='%23AAA' points='180 600 90 750 270 750'/%3E%3Cpolygon fill='%23444' points='180 600 270 450 90 450'/%3E%3Cpolygon fill='%23444' points='360 600 270 750 450 750'/%3E%3Cpolygon fill='%23999' points='360 600 450 450 270 450'/%3E%3Cpolygon fill='%23666' points='540 600 630 450 450 450'/%3E%3Cpolygon fill='%23222' points='720 600 630 750 810 750'/%3E%3Cpolygon fill='%23FFF' points='900 600 810 750 990 750'/%3E%3Cpolygon fill='%23222' points='900 600 990 450 810 450'/%3E%3Cpolygon fill='%23DDD' points='0 900 90 750 -90 750'/%3E%3Cpolygon fill='%23444' points='180 900 270 750 90 750'/%3E%3Cpolygon fill='%23FFF' points='360 900 450 750 270 750'/%3E%3Cpolygon fill='%23AAA' points='540 900 630 750 450 750'/%3E%3Cpolygon fill='%23FFF' points='720 900 810 750 630 750'/%3E%3Cpolygon fill='%23222' points='900 900 990 750 810 750'/%3E%3Cpolygon fill='%23222' points='1080 300 990 450 1170 450'/%3E%3Cpolygon fill='%23FFF' points='1080 300 1170 150 990 150'/%3E%3Cpolygon points='1080 600 990 750 1170 750'/%3E%3Cpolygon fill='%23666' points='1080 600 1170 450 990 450'/%3E%3Cpolygon fill='%23DDD' points='1080 900 1170 750 990 750'/%3E%3C/g%3E%3C/pattern%3E%3C/defs%3E%3Crect x='0' y='0' fill='url(%23a)' width='100%25' height='100%25'/%3E%3Crect x='0' y='0' fill='url(%23b)' width='100%25' height='100%25'/%3E%3C/svg%3E\");\n}\n/* background by SVGBackgrounds.com – code looks gross but it workssss */\n";
var styles$3 = {"header":"styles_header__2sFna"};
styleInject(css$4);

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

var css$5 = "button a {\n  text-decoration: none;\n}\n\n.styles_ghostButton__2-QVh {\n  background-color: transparent;\n  border: 1px solid transparent;\n  font-size: 0.8rem;\n  padding: 2px 3px;\n  min-width: 65px;\n}\n\n.styles_ghostButton__2-QVh:hover {\n  color: var(--navy);\n  background-color: var(--light-navy);\n  /*the following styles are to prevent conflict with Axon styles. i can't wait to delete these*/\n  background-image: none !important;\n  text-shadow: none;\n  box-shadow: none;\n}\n";
var styles$4 = {"ghostButton":"styles_ghostButton__2-QVh"};
styleInject(css$5);

var Buttons = function Buttons(props) {
  var textColor = props.textColor,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["textColor", "buttonText"]);

  var text = {
    navy: Colors['navy'],
    white: "#FFFFFF",
    grey: Colors['grey']
  };
  var color = {
    color: text[props.textColor],
    borderColor: text[props.textColor]
  };
  return React.createElement("button", _extends({
    className: styles$4.ghostButton,
    style: color
  }, passThrough), props.buttonText);
};

function GhostButton(props) {
  var color = props.color,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["color", "buttonText"]);

  return React.createElement(Buttons, _extends({
    buttonText: buttonText,
    color: color
  }, passThrough));
}

function index (props) {
  var headerHeight;

  if (props.tileOverlap == true) {
    headerHeight = {
      height: "59px"
    };
  } else {
    headerHeight = {
      height: "0px"
    };
  }

  return React.createElement("div", {
    className: styles$3.header,
    style: headerHeight
  });
}

var css$6 = ".styles_tileMenu__3YTW2 {\n  color: var(--navy);\n  border-bottom: 1px solid var(--navy);\n  padding: 0 6px 6px 6px;\n  text-align: left;\n  letter-spacing: 1px;\n  font-weight: 500;\n  margin: 0px;\n  font-size: 0.9rem;\n}\n";
var styles$5 = {"tileMenu":"styles_tileMenu__3YTW2"};
styleInject(css$6);

function Subheader(props) {
  return React.createElement("h5", {
    id: props.id,
    className: styles$5.tileMenu
  }, props.title);
}
Subheader.propTypes = {
  title: PropTypes.string
};

var css$7 = "button {\n  font-family: \"Proxima Nova\", sans-serif;\n  font-size: 1rem;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  font-weight: 300;\n  text-align: center;\n  color: #214263;\n  border: 1px solid #214263;\n  background-color: white;\n  border-radius: 6px;\n  padding: 3px 10px;\n  cursor: pointer;\n  min-width: 65px;\n  /*the following styles are to prevent conflict with Axon styles. i can't wait to delete these*/\n  background-image: none;\n  text-shadow: none;\n  box-shadow: none;\n}\n\nbutton a {\n  text-decoration: none;\n}\n\n.styles_standard__3ygV0:hover {\n  color: #214263 !important;\n  background-color: #C6D9EC !important;\n  transition: background-color 0.2s;\n  /*the following styles are to prevent conflict with Axon styles. i can't wait to delete these*/\n  background-image: none !important;\n  text-shadow: none;\n  box-shadow: none;\n}\n\n.styles_disabled__2ZAaW {\n  opacity: 0.5;\n  pointer-events: none;\n}\n";
var styles$6 = {"standard":"styles_standard__3ygV0","disabled":"styles_disabled__2ZAaW"};
styleInject(css$7);

var background = {
  primary: "#FFF",
  secondary: Colors['navy'],
  hovered: Colors['lightNavy']
};
var text = {
  primary: Colors['navy'],
  secondary: "#FFF",
  hovered: Colors['lightNavy']
};
var border = {
  primary: Colors['navy'],
  secondary: "#FFF",
  hovered: Colors['lightNavy']
};

var Buttons$1 = function Buttons(props) {
  var _props$variant = props.variant,
      variant = _props$variant === void 0 ? "primary" : _props$variant,
      isLocked = props.isLocked,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["variant", "isLocked", "buttonText"]);

  var variantColor = {
    backgroundColor: background[variant],
    color: text[variant],
    borderColor: border[variant]
  };
  return React.createElement("button", _extends({
    className: cx(styles$6.standard, _defineProperty({}, styles$6.disabled, isLocked)),
    style: variantColor
  }, passThrough), buttonText);
};

function Button(props) {
  var isLocked = props.isLocked,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["isLocked", "buttonText"]);

  return React.createElement(Buttons$1, _extends({
    isLocked: isLocked,
    buttonText: buttonText
  }, passThrough));
}
Button.propTypes = {
  variant: PropTypes.oneOf(['primary', 'secondary', 'disabled']),
  buttonText: PropTypes.node,
  isLocked: PropTypes.bool,
  onClick: PropTypes.func,
  type: PropTypes.oneOf(['submit', 'number', 'date', 'password', 'email', 'text', 'radio', 'checkbox', 'range', 'url', 'tel', 'time'])
};

var css$8 = ".styles_colorButton__1Qt2c {\n  font-family: \"Proxima Nova\", sans-serif;\n  font-size: 1rem;\n  line-height: normal;\n  letter-spacing: 0.3px;\n  font-weight: 300;\n  text-align: center;\n  color: white;\n  border: 1px solid #214263;\n  background-color: white;\n  border-radius: 6px;\n  padding: 3px 10px;\n  cursor: pointer;\n  min-width: 65px;\n  /*the following styles are to prevent conflict with Axon styles. i can't wait to delete these*/\n  background-image: none;\n  text-shadow: none;\n  box-shadow: none;\n}\n\nbutton a {\n  text-decoration: none;\n}\n\n.styles_colorButton__1Qt2c:hover {\n  -webkit-filter: brightness(110%) !important;\n          filter: brightness(110%) !important;\n  transition: -webkit-filter 0.2s;\n  transition: filter 0.2s;\n  transition: filter 0.2s, -webkit-filter 0.2s;\n  /*the following styles are to prevent conflict with Axon styles. i can't wait to delete these*/\n  background-image: none !important;\n  text-shadow: none;\n  box-shadow: none;\n}\n\n.styles_disabled__NcUp7 {\n  opacity: 0.5;\n  pointer-events: none;\n}\n";
var styles$7 = {"colorButton":"styles_colorButton__1Qt2c","disabled":"styles_disabled__NcUp7"};
styleInject(css$8);

var background$1 = {
  green: Colors['green'],
  blue: Colors['blue'],
  yellow: Colors['yellow'],
  red: Colors['red']
};

var Buttons$2 = function Buttons(props) {
  var _props$variant = props.variant,
      variant = _props$variant === void 0 ? "primary" : _props$variant,
      isLocked = props.isLocked,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["variant", "isLocked", "buttonText"]);

  var variantColor = {
    backgroundColor: background$1[variant],
    borderColor: background$1[variant]
  };
  return React.createElement("button", _extends({
    className: cx(styles$7.colorButton, _defineProperty({}, styles$7.disabled, isLocked)),
    style: variantColor
  }, passThrough), buttonText);
};

function ColorButton(props) {
  var isLocked = props.isLocked,
      buttonText = props.buttonText,
      passThrough = _objectWithoutProperties(props, ["isLocked", "buttonText"]);

  return React.createElement(Buttons$2, _extends({
    isLocked: isLocked,
    buttonText: buttonText
  }, passThrough));
}

var css$9 = ".styles_wrapper__2gGoU {\n  display: flex;\n  max-width: 1000px;\n  margin: 0 auto 30px auto;\n  align-items: center;\n  padding: 5px;\n}\n\n.styles_wrapper__2gGoU:hover {\n  cursor: pointer;\n}\n\n.styles_wrapper__2gGoU p {\n  margin: 0;\n}\n";
styleInject(css$9);

function index$1 (props) {
  return React.createElement(Button, {
    variant: "primary",
    buttonText: "Return to Home"
  });
}

/**
  Renders the basic profile graphic with properly cacluated tick marks and axis.
  It's basically a glorified svg builder, but done in code to ensure the graphics
  match up with math done in profile drawing components like ProfilePolygon
*/

var Background =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Background, _React$Component);

  _createClass(Background, [{
    key: "_axis",
    value: function _axis() {
      return React.createElement("g", null, React.createElement("line", {
        strokeWidth: ".25",
        stroke: "black",
        x1: "0",
        x2: "0",
        y1: "130",
        y2: "-130"
      }), React.createElement("line", {
        strokeWidth: ".25",
        stroke: "black",
        y1: "0",
        y2: "0",
        x1: "130",
        x2: "-130"
      }));
    }
  }, {
    key: "_circles",
    value: function _circles() {
      var circles = [];

      if (this.props.type != "preference") {
        for (var i = 0; i < 130; i += 33) {
          circles.push(React.createElement("circle", {
            key: "".concat(i, "_cir"),
            cx: "0",
            cy: "0",
            r: i,
            stroke: "white",
            opacity: "0.50",
            fill: "none"
          }));
        }

        return circles;
      } else {
        circles.push(React.createElement("circle", {
          cx: "0",
          cy: "0",
          r: 33,
          stroke: "white",
          opacity: "0.50",
          fill: "none"
        }), React.createElement("circle", {
          cx: "0",
          cy: "0",
          r: 99,
          stroke: "white",
          opacity: "0.50",
          fill: "none"
        }));
        return circles;
      }
    }
  }, {
    key: "_ticks",
    value: function _ticks() {
      var horTicks = [];
      var verTicks = [];

      for (var i = -130; i <= 130; i += 10) {
        horTicks.push(React.createElement("line", {
          key: "".concat(i, "_hor"),
          x1: "-2",
          y1: i,
          x2: "2",
          y2: i,
          strokeWidth: ".25",
          stroke: "black"
        }));
        verTicks.push(React.createElement("line", {
          key: "".concat(i, "_ver"),
          x1: "-2",
          y1: i,
          x2: "2",
          y2: i,
          strokeWidth: ".25",
          stroke: "black"
        }));
      }

      return React.createElement("g", {
        transform: "rotate(-45)"
      }, horTicks, this._tickLabels(), React.createElement("g", {
        transform: "rotate(90)"
      }, verTicks), this._axis());
    }
  }, {
    key: "_tickLabels",
    value: function _tickLabels() {
      var tickLabels = [];

      for (var i = -130; i < 0; i += 10) {
        var x = -10;
        var y = i + 2;
        tickLabels.push(React.createElement("text", {
          key: "".concat(i, "_lab"),
          style: {
            fontWeight: "bold"
          },
          transform: "rotate(45, ".concat(x, ", ").concat(y, ")"),
          x: x,
          y: y,
          fontSize: "6.5",
          fill: "black"
        }, i * -1));
      }

      return tickLabels;
    }
  }]);

  function Background(props) {
    var _this;

    _classCallCheck(this, Background);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Background).call(this));
    _this.showTicks = props.showTicks == undefined ? true : props.showTicks;
    return _this;
  }

  _createClass(Background, [{
    key: "render",
    value: function render() {
      var ticks = this._ticks();

      return React.createElement("svg", {
        viewBox: "-130 -130 260 260",
        width: "100",
        height: "100",
        fill: "lightgray"
      }, React.createElement("svg", {
        width: "100%",
        x: "-130",
        y: "-130",
        viewBox: "0 0 700 700"
      }, React.createElement("g", null, React.createElement("path", {
        fill: "#2AC0F0",
        d: "M350.5,351.6L0.5,353c0-0.5,0-0.9,0-1.4c0-192,158-350,350-350c0.5,0,1,0,1.4,0L350.5,351.6z"
      }), React.createElement("path", {
        fill: "#FDD431",
        d: "M350.5,353l350,1.4c0-0.5,0-0.9,0-1.4c0-191.6-157.4-349.5-349.1-350L350.5,353z"
      }), React.createElement("path", {
        fill: "#56BC7A",
        d: "M350.5,351.1l-350-1.4c0,0.5,0,0.9,0,1.4c0,192,158,350,350,350c0.5,0,1,0,1.4,0L350.5,351.1z"
      }), React.createElement("path", {
        fill: "#EF3C50",
        d: "M350.5,351.1l350-1.4c0,0.5,0,0.9,0,1.4c0,191.6-157.4,349.5-349.1,350L350.5,351.1z"
      }))), this._circles(), this.showTicks && this.props.type != "preference" && this._ticks(), React.createElement("svg", {
        x: "-130",
        y: "-130",
        viewBox: "-100 -100 200 200",
        width: "100%"
      }, this.props.children));
    }
  }]);

  return Background;
}(React.Component);

function Circle(props) {
  var stroke = props.stroke || "rgba(0,0,0,0.25)";
  var strokeWidth = props.strokeWidth || 1;
  var opacity = props.opacity || "0.6";
  var strokeDasharray = props.strokeDasharray;
  return React.createElement("svg", {
    x: props.x,
    y: props.y,
    viewBox: "0 0 100 100",
    width: props.width,
    height: props.width
  }, React.createElement("circle", {
    cx: "50",
    cy: "50",
    r: 50 - strokeWidth,
    strokeWidth: strokeWidth,
    fill: "white",
    strokeDasharray: strokeDasharray,
    opacity: opacity,
    stroke: stroke
  }), props.children);
}

function Element(props) {
  return React.createElement("svg", {
    x: props.x,
    y: props.y,
    viewBox: props.viewBox,
    width: props.width,
    height: props.height
  }, props.children);
}

var Profile =
/*#__PURE__*/
function (_React$Component2) {
  _inherits(Profile, _React$Component2);

  function Profile() {
    _classCallCheck(this, Profile);

    return _possibleConstructorReturn(this, _getPrototypeOf(Profile).apply(this, arguments));
  }

  _createClass(Profile, [{
    key: "render",
    value: function render(props) {
      var maxWidth;

      if (this.props.maxWidth) {
        maxWidth = {
          maxWidth: this.props.maxWidth + 'px',
          width: '100%'
        };
      } else {
        maxWidth = {
          maxWidth: '100%',
          width: '100%'
        };
      }

      return React.createElement("div", {
        style: maxWidth
      }, React.createElement("svg", {
        viewBox: "0 0 100 100",
        width: "100%"
      }, React.createElement(Background, {
        type: this.props.type
      }, this.props.children)));
    }
  }]);

  return Profile;
}(React.Component);
Object.defineProperty(Profile, "Background", {
  enumerable: true,
  writable: true,
  value: Background
});
Object.defineProperty(Profile, "Circle", {
  enumerable: true,
  writable: true,
  value: Circle
});
Object.defineProperty(Profile, "Element", {
  enumerable: true,
  writable: true,
  value: Element
});

var numericalValidator = function numericalValidator(props, propName) {
  return parseInt(props[propName]) != NaN ? null : new Error("Prop`" + propName + "`suppplied to`" + componentName + "`must be numerical");
};

var ProfilePolygon =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ProfilePolygon, _React$Component);

  function ProfilePolygon() {
    _classCallCheck(this, ProfilePolygon);

    return _possibleConstructorReturn(this, _getPrototypeOf(ProfilePolygon).apply(this, arguments));
  }

  _createClass(ProfilePolygon, [{
    key: "_percentages",
    value: function _percentages() {
      return {
        A: this.props.scores.A / 130 * 100,
        B: this.props.scores.B / 130 * 100,
        C: this.props.scores.C / 130 * 100,
        D: this.props.scores.D / 130 * 100
      };
    }
  }, {
    key: "_pointsString",
    value: function _pointsString() {
      var points = this._points();

      return "".concat(points.B, " ").concat(points.C, " ").concat(points.D, " ").concat(points.A);
    }
  }, {
    key: "_points",
    value: function _points() {
      var percents = this._percentages();

      return {
        A: [-percents.A, 0],
        B: [0, percents.B],
        C: [percents.C, 0],
        D: [0, -percents.D]
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var circles = _.toPairs(this._points()).map(function (p) {
        var key = p[0];
        var xy = p[1];
        var dot_fill = _this.props.circleFill || "black";
        return React.createElement("circle", {
          key: key,
          cx: xy[0],
          cy: xy[1],
          r: "5",
          stroke: "black",
          fill: dot_fill
        });
      });

      return React.createElement("svg", {
        viewBox: "-100 -100 200 200",
        width: "100",
        height: "100"
      }, React.createElement("g", {
        transform: "rotate(45)"
      }, React.createElement("polygon", {
        points: this._pointsString(),
        stroke: this.props.strokeColor || "black",
        strokeWidth: this.props.strokeWidth || "1",
        strokeDasharray: this.props.strokeDasharray || "0",
        fill: "none"
      }), this.props.drawCircles && circles), this.props.children);
    }
  }]);

  return ProfilePolygon;
}(React.Component);
Object.defineProperty(ProfilePolygon, "propTypes", {
  enumerable: true,
  writable: true,
  value: {
    /**
      Raw scores on 130pt scale
    */
    scores: PropTypes.shape({
      A: numericalValidator,
      B: numericalValidator,
      C: numericalValidator,
      D: numericalValidator
    }),
    strokeWidth: PropTypes.number,
    strokeColor: PropTypes.string,
    strokeDasharray: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    drawCircles: PropTypes.bool,
    circleFill: PropTypes.string
  }
});

var css$a = ".styles_blur__Ss8tk {\n  opacity: 0.5;\n  -webkit-filter: blur(8px);\n          filter: blur(8px);\n}\n\n.styles_profileMapWrapper__Vg2Wr {\n  max-width: 300px;\n}\n";
var styles$9 = {"blur":"styles_blur__Ss8tk","profileMapWrapper":"styles_profileMapWrapper__Vg2Wr"};
styleInject(css$a);

function ProfileMap(props) {
  return React.createElement("div", {
    className: cx(styles$9.profileMapWrapper, props.isLocked && styles$9.blur)
  }, React.createElement(Profile, {
    maxWidth: 500
  }, !props.isLocked && React.createElement(Profile.Element, {
    x: -100,
    y: -100,
    width: 1000,
    height: 1000,
    viewBox: "0 0 500 500"
  }, props.profileScores && React.createElement(ProfilePolygon, {
    strokeWidth: props.strokeWidth,
    scores: props.profileScores
  }), props.stressScores && React.createElement(ProfilePolygon, {
    strokeWidth: props.strokeWidth,
    strokeDasharray: 5,
    scores: props.stressScores
  }))));
}
ProfileMap.propTypes = {
  profileScores: PropTypes.object,
  strokeWidth: PropTypes.number,
  isLocked: PropTypes.bool
};

/**
  Renders a "radar chart" style graphic where each quadrant has a value of 1,2,3,4 correspoinding
  to the number of circles filled in for that quadrant
*/

var color$1 = "black";
var dash = "2,2";
var angles = {
  A: [-90, 0],
  B: [-180, -90],
  C: [90, 180],
  D: [0, 90]
};

var RadarChart =
/*#__PURE__*/
function (_React$Component) {
  _inherits(RadarChart, _React$Component);

  function RadarChart() {
    _classCallCheck(this, RadarChart);

    return _possibleConstructorReturn(this, _getPrototypeOf(RadarChart).apply(this, arguments));
  }

  _createClass(RadarChart, [{
    key: "_axis",
    value: function _axis() {
      return React.createElement("g", null, React.createElement("line", {
        stroke: color$1,
        strokeDasharray: dash,
        x1: "0",
        x2: "0",
        y1: "130",
        y2: "-130"
      }), React.createElement("line", {
        stroke: color$1,
        strokeDasharray: dash,
        y1: "0",
        y2: "0",
        x1: "130",
        x2: "-130"
      }));
    }
  }, {
    key: "_circles",
    value: function _circles() {
      var circles = [];

      for (var i = 0; i <= 135; i += 33) {
        circles.push(React.createElement("circle", {
          key: "".concat(i, "_cir"),
          cx: "0",
          cy: "0",
          r: i,
          stroke: color$1,
          strokeDasharray: dash,
          fill: "none"
        }));
      }

      return circles;
    }
  }, {
    key: "_quadrants",
    value: function _quadrants() {
      var _this = this;

      var quadrants = _.chain(this.props.values).toPairs().map(function (kv) {
        return _.rangeRight(kv[1] + 1).map(function (i) {
          var code = 4 - i;
          var radius = i * 33.3;
          var angle = angles[kv[0]];
          var colorKey = _this.props.useGradients ? code : "default";
          var color = "#".concat(ChartColors[kv[0]][colorKey]);
          return React.createElement("path", {
            key: "".concat(kv[0], " ").concat(i),
            d: pie(0, 0, radius, angle[0], angle[1]),
            fill: color
          });
        });
      }).value();

      return quadrants;
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement("svg", {
        viewBox: "-134 -134 268 268",
        width: "100",
        height: "100",
        fill: "lightgray"
      }, !this.props.useGradients && this._quadrants(), this.props.showBorders && this._circles(), this.props.showBorders && this._axis(), this.props.useGradients && this._quadrants(), React.createElement("svg", {
        x: "-130",
        y: "-130",
        viewBox: "-100 -100 200 200",
        width: "100%"
      }, this.props.children));
    }
  }]);

  return RadarChart;
}(React.Component);

Object.defineProperty(RadarChart, "propTypes", {
  enumerable: true,
  writable: true,
  value: {
    values: PropTypes.shape({
      A: PropTypes.oneOf([0, 1, 2, 3, 4]),
      B: PropTypes.oneOf([0, 1, 2, 3, 4]),
      C: PropTypes.oneOf([0, 1, 2, 3, 4]),
      D: PropTypes.oneOf([0, 1, 2, 3, 4])
    }),
    showBorders: PropTypes.bool,
    useGradients: PropTypes.bool
  }
});
Object.defineProperty(RadarChart, "defaultProps", {
  enumerable: true,
  writable: true,
  value: {
    showBorders: true
  }
});

var css$b = "\n\n.mixins-module_bannerTitle__3NKyS{\n  font-size: 3.3vh;;\n  font-weight: bold;\n  text-align: center;\n  padding: 2% 0%;\n}\n\n.mixins-module_red__3U_K9{\n  color: RGB(239, 55, 79);\n}\n.mixins-module_green__1v-ZH{\n  color: RGB(99, 192, 132);\n}\n.mixins-module_yellow__3V98C{\n  color: RGB(253, 215, 66);\n}\n.mixins-module_blue__34Mef{\n  color: RGB(44, 195, 240);\n}\n\n.mixins-module_instructionsContent__3bB6V{\n  width: 100%;\n  font-size: 2.4vh;\n  padding: 5%;\n  box-sizing: border-box;\n}\n\n.mixins-module_instructionsContent__3bB6V h3{\n  margin-bottom: 0px;\n}\n\n.mixins-module_instructionsContent__3bB6V p{\n  margin: 0px;\n}\n\n.mixins-module_button__3T9C-{\n  margin-bottom: 10px;\n  border-radius: 30px;\n  border: solid 3px RGB(203,205,202);\n  font-size: 1.5em;\n  font-weight: 600;\n  font-family: proxima-nova;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: white;\n  color: RGB(203,205,202);\n  text-decoration: none;\n  box-sizing: border-box;\n}\n";
var mixins = {"bannerTitle":"mixins-module_bannerTitle__3NKyS","red":"mixins-module_red__3U_K9","green":"mixins-module_green__1v-ZH","yellow":"mixins-module_yellow__3V98C","blue":"mixins-module_blue__34Mef","instructionsContent":"mixins-module_instructionsContent__3bB6V","button":"mixins-module_button__3T9C-"};
styleInject(css$b);

var css$c = "\n";
var variables = {"hmRed":"RGB(239, 55, 79)","hmGreen":"RGB(99, 192, 132)","hmYellow":"RGB(253, 215, 66)","hmBlue":"RGB(44, 195, 240)","hmGrey":"RGB(203,205,202)"};
styleInject(css$c);

var css$d = "\n.quadrants_A__3tYr5{ color: RGB(44, 195, 240);}\n.quadrants_B__1oRT3{ color: RGB(99, 192, 132);}\n.quadrants_C__1eIt9{ color: RGB(239, 55, 79);}\n.quadrants_D__1BIRG{ color: RGB(253, 215, 66);}\n\n.quadrants_fill-A__3ikhp{ fill: RGB(44, 195, 240);}\n.quadrants_fill-B__hz2Fm{ fill: RGB(99, 192, 132);}\n.quadrants_fill-C__2UhdD{ fill: RGB(239, 55, 79);}\n.quadrants_fill-D__xN735{ fill: RGB(253, 215, 66);}\n\n.quadrants_background-A__5PJmv{ background-color: RGB(44, 195, 240)}\n.quadrants_background-B__2d9Wm{ background-color: RGB(99, 192, 132)}\n.quadrants_background-C__1VeES{ background-color: RGB(239, 55, 79); }\n.quadrants_background-D__2_KGH{ background-color: RGB(253, 215, 66)}\n\n.quadrants_border-A__2dXtQ{ border-color: RGB(44, 195, 240)}\n.quadrants_border-B__jivO7{ border-color: RGB(99, 192, 132)}\n.quadrants_border-C__1f1qf{ border-color: RGB(239, 55, 79); }\n.quadrants_border-D__131h7{ border-color: RGB(253, 215, 66)}\n";
var quadrants = {"A":"quadrants_A__3tYr5","B":"quadrants_B__1oRT3","C":"quadrants_C__1eIt9","D":"quadrants_D__1BIRG","fill-A":"quadrants_fill-A__3ikhp","fill-B":"quadrants_fill-B__hz2Fm","fill-C":"quadrants_fill-C__2UhdD","fill-D":"quadrants_fill-D__xN735","background-A":"quadrants_background-A__5PJmv","background-B":"quadrants_background-B__2d9Wm","background-C":"quadrants_background-C__1VeES","background-D":"quadrants_background-D__2_KGH","border-A":"quadrants_border-A__2dXtQ","border-B":"quadrants_border-B__jivO7","border-C":"quadrants_border-C__1f1qf","border-D":"quadrants_border-D__131h7","fill$_$A":"quadrants_fill-A__3ikhp","fill$_$B":"quadrants_fill-B__hz2Fm","fill$_$C":"quadrants_fill-C__2UhdD","fill$_$D":"quadrants_fill-D__xN735","background$_$A":"quadrants_background-A__5PJmv","background$_$B":"quadrants_background-B__2d9Wm","background$_$C":"quadrants_background-C__1VeES","background$_$D":"quadrants_background-D__2_KGH","border$_$A":"quadrants_border-A__2dXtQ","border$_$B":"quadrants_border-B__jivO7","border$_$C":"quadrants_border-C__1f1qf","border$_$D":"quadrants_border-D__131h7"};
styleInject(css$d);

var lincoln = "c4ea61686af0e69f.svg";

var aristotle = "3b6671f5eb9c91cf.svg";

var armstrong = "2ef03a94c958f882.svg";

var bach = "2cb132e8f26f23e0.svg";

var bigge = "09ea4e0ac44063e9.png";

var seattle = "42f565d2a300eb7e.svg";

var carter = "e7bc6b2a112379a0.png";

var churchill = "aed882d26b0998d1.svg";

var chopin = "7219fb6a0ca1fb77.svg";

var confucius = "c822e1752036646d.svg";

var corbusier = "1eb0862db78f98f0.png";

var curie = "ab0820e65dde6fc2.svg";

var einstein = "47506cbcc41ee080.svg";

var gates = "1d59b7e89d01af28.png";

var geronimo = "f206c5495b0d69f3.svg";

var gandhi = "eb36a69272691b7b.svg";

var henson = "2f82a8f080724030.svg";

var hoover = "9f8cc5c9aa2461cb.svg";

var jackson = "ec953b49567c56a7.png";

var kant = "9dbb1a5e74c350af.svg";

var lagarde = "21b57e09c2688aa7.svg";

var lamb = "5e90741957469d07.png";

var lee = "dae95f9480ecdc23.svg";

var teresa = "509b740187fb8c3e.svg";

var obama = "7d3cff40947365ce.png";

var oprah = "8ed1822fc0761079.svg";

var picasso = "9cf1886b4f2c7a54.svg";

var queen = "cba5af7a3ddf8c06.svg";

var ramanujan = "9cc2d521072a4247.png";

var sousa = "04e0f5b14001e30a.png";

var thatcher = "8696caa369938e41.svg";

var vonnegut = "0b8e56977db4da6f.png";

var walensa = "3da4712c02838ec8.svg";

/**
  Each brain is defined in the following
  {
    id: unique id used throughout programatically,
    img: link to the image asset,
    x: x position on a standard whole brain model,
    y: y position on a standard whole brain model,
    name: display name,
    link: link to wikipedia page/more info link,
    profile: [a,b,c,d] profile ranks using the following scale (number=> code)
      1=>3, 2=>2, 3=>1, 4=>1+
  }
*/

var brains = [{
  id: "aristotle",
  img: aristotle,
  x: -63,
  y: -20,
  link: "https://en.wikipedia.org/wiki/Aristotle",
  profile: {
    A: 3,
    B: 3,
    C: 2,
    D: 2
  },
  traits: ["artistic", "innovative", "breaks_rules", "visual", "implements", "expressive"]
}, {
  id: "armstrong",
  img: armstrong,
  x: 75,
  y: 35,
  name: "Louis Armstrong",
  link: "https://en.wikipedia.org/wiki/Louis_Armstrong",
  profile: {
    A: 1,
    B: 2,
    C: 4,
    D: 3
  },
  traits: ["musical", "intuitive_emotionally", "artistic", "innovative", "implements"]
}, {
  id: "bach",
  img: bach,
  x: -3,
  y: -25,
  link: "https://en.wikipedia.org/wiki/Johann_Sebastian_Bach",
  traits: ["precise", "prolific", "independently_minded", "critical", "knows_the_basis_of_things", "technical"],
  profile: {
    A: 4,
    B: 3,
    C: 3,
    D: 3
  }
}, {
  id: "bigge",
  img: bigge,
  x: -3,
  y: -25,
  link: "https://en.wikipedia.org/wiki/John_Bigge",
  traits: ["controlled", "detailed", "dominant", "organized", "preventitive", "critical"],
  profile: {
    A: 2,
    B: 4,
    C: 2,
    D: 2
  }
}, {
  id: "carter",
  img: carter,
  x: -3,
  y: -25,
  link: "https://en.wikipedia.org/wiki/Jimmy_Carter",
  traits: ["implements", "preventitive", "people_oriented", "spiritual", "strategic"],
  profile: {
    A: 2,
    B: 3,
    C: 3,
    D: 3
  }
}, {
  id: "chopin",
  img: chopin,
  x: 0,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Frédéric_Chopin",
  profile: {
    A: 2,
    B: 3,
    C: 3,
    D: 3
  },
  traits: ["empathetic", "innovative", "musical", "prolific", "writer", "expressive"]
}, {
  id: "churchill",
  img: churchill,
  x: 25,
  y: -29,
  link: "https://en.wikipedia.org/wiki/Winston_Churchill",
  profile: {
    A: 3,
    B: 3,
    C: 3,
    D: 4
  },
  traits: ["synthesizing", "future_oriented", "strategic", "technical", "breaks_rules", "logical", "writer"]
}, {
  id: "confucius",
  img: confucius,
  x: -7,
  y: 75,
  link: "https://en.wikipedia.org/wiki/Confucius",
  profile: {
    A: 2,
    B: 4,
    C: 4,
    D: 2
  },
  traits: ["teaching", "friendly", "musical", "artistic", "curious", "playful"]
}, {
  id: "corbusier",
  img: corbusier,
  x: -7,
  y: 75,
  link: "https://en.wikipedia.org/wiki/Le_Corbusier",
  profile: {
    A: 2,
    B: 3,
    C: 2,
    D: 3
  },
  traits: ["prolific", "future_oriented", "artistic", "detailed", "implements"]
}, {
  id: "curie",
  img: curie,
  x: 20,
  y: -60,
  link: "https://en.wikipedia.org/wiki/Marie_Curie",
  traits: ["synthesizing", "future_oriented", "strategic", "technical", "breaks_rules", "logical"],
  profile: {
    A: 3,
    B: 2,
    C: 2,
    D: 3
  }
}, {
  id: "einstein",
  img: einstein,
  x: 38,
  y: -80,
  link: "https://en.wikipedia.org/wiki/Albert_Einstein",
  profile: {
    A: 3,
    B: 1,
    C: 2,
    D: 4
  },
  traits: ["independently_minded", "talker", "innovative", "intellectual_thinking", "writer", "synthesizing"]
}, {
  id: "gates",
  img: gates,
  x: -25,
  y: -63,
  link: "https://en.wikipedia.org/wiki/Bill_Gates",
  profile: {
    A: 4,
    B: 3,
    C: 2,
    D: 3
  },
  traits: ["precise", "detailed", "prolific", "independently_minded", "critical", "knows_the_basis_of_things", "technical"]
}, {
  id: "geronimo",
  img: geronimo,
  x: -40,
  y: 75,
  link: "https://en.wikipedia.org/wiki/Geronimo",
  profile: {
    A: 2,
    B: 4,
    C: 3,
    D: 1
  },
  traits: ["spiritual", "empathetic", "organized", "preventitive", "people_oriented", "dominant"]
}, {
  id: "gandhi",
  img: gandhi,
  x: 55,
  y: 65,
  link: "https://en.wikipedia.org/wiki/Mahatma_Gandhi",
  profile: {
    A: 2,
    B: 2,
    C: 4,
    D: 2
  },
  traits: ["empathetic", "sensitive_to_others", "spiritual", "teaching", "independently_minded", "future_oriented"]
}, {
  id: "henson",
  img: henson,
  x: 85,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Jim_Henson",
  traits: ["teaching", "friendly", "musical", "artistic", "curious", "playful"],
  profile: {
    A: 1,
    B: 1,
    C: 4,
    D: 4
  }
}, {
  id: "hoover",
  img: hoover,
  x: -65,
  y: 15,
  link: "https://en.wikipedia.org/wiki/J._Edgar_Hoover",
  traits: ["factual", "problem_solving", "detailed", "organized", "controlled", "dominant"],
  profile: {
    A: 3,
    B: 4,
    C: 1,
    D: 1
  }
}, {
  id: "jackson",
  img: jackson,
  x: -65,
  y: 15,
  link: "https://en.wikipedia.org/wiki/Mary_Jackson_(engineer)",
  traits: ["intellectual_thinking", "knows_the_basis_of_things", "people_oriented", "mathematical", "technical", "empathetic"],
  profile: {
    A: 4,
    B: 2,
    C: 3,
    D: 2
  }
}, {
  id: "kant",
  img: kant,
  x: 0,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Immanuel_Kant",
  traits: ["factual", "problem_solving", "detailed", "dominant", "logical", "critical"],
  profile: {
    A: 3,
    B: 3,
    C: 2,
    D: 2
  }
}, {
  id: "lagarde",
  img: lagarde,
  x: -30,
  y: -35,
  link: "https://en.wikipedia.org/wiki/Christine_Lagarde",
  profile: {
    A: 4,
    B: 3,
    C: 2,
    D: 3
  },
  traits: ["factual", "detailed", "financial", "logical", "synthesizing", "implements", "speaker"]
}, {
  id: "lamb",
  img: lamb,
  x: -30,
  y: -35,
  link: "https://en.wikipedia.org/wiki/William_Kaye_Lamb",
  profile: {
    A: 2,
    B: 4,
    C: 2,
    D: 2
  },
  traits: ["detailed", "organized", "controlled", "historian"]
}, {
  id: "lee",
  img: lee,
  x: 50,
  y: -20,
  profile: {
    A: 2,
    B: 2,
    C: 3,
    D: 4
  },
  traits: ["writer", "sensitive_to_others", "artistic", "visual", "independently_minded", "breaks_rules"]
}, {
  id: "lincoln",
  img: lincoln,
  x: 0,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Abraham_Lincoln",
  profile: {
    A: 3,
    B: 3,
    C: 3,
    D: 3
  },
  traits: ["problem_solving", "implements", "preventitive", "people_oriented", "expressive", "future_oriented", "strategic"]
}, {
  id: "obama",
  img: obama,
  x: 0,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Barack_Obama",
  profile: {
    A: 3,
    B: 2,
    C: 3,
    D: 3
  },
  traits: ["financial", "intellectual_thinking", "expressive", "people_oriented", "visionary"]
}, {
  id: "oprah",
  img: oprah,
  x: 33,
  y: 0,
  link: "https://en.wikipedia.org/wiki/Oprah_Winfrey",
  traits: ["intuitive_emotionally", "talker", "expressive", "intellectual_thinking", "writer", "synthesizing"],
  profile: {
    A: 3,
    B: 3,
    C: 4,
    D: 4
  }
}, {
  id: "picasso",
  img: picasso,
  x: 70,
  y: -40,
  link: "https://en.wikipedia.org/wiki/Pablo_Picasso",
  traits: ["artistic", "innovative", "breaks_rules", "visual", "implements", "expressive"],
  profile: {
    A: 2,
    B: 2,
    C: 2,
    D: 4
  }
}, {
  id: "queen",
  img: queen,
  x: -5,
  y: 35,
  link: "https://en.wikipedia.org/wiki/Elizabeth_II",
  profile: {
    A: 2,
    B: 3,
    C: 3,
    D: 2
  },
  traits: ["controlled", "dominant", "expressive", "people_oriented", "preventitive"]
}, {
  id: "ramanujan",
  img: ramanujan,
  x: -5,
  y: 35,
  link: "https://en.wikipedia.org/wiki/Srinivasa_Ramanujan",
  profile: {
    A: 4,
    B: 2,
    C: 2,
    D: 2
  },
  traits: ["intellectual_thinking", "factual", "mathematical", "logical", "scientific"]
}, {
  id: "sousa",
  img: sousa,
  x: -5,
  y: 35,
  link: "https://en.wikipedia.org/wiki/John_Philip_Sousa",
  profile: {
    A: 3,
    B: 4,
    C: 3,
    D: 2
  },
  traits: ["musical", "writer", "sensitive_to_others", "logical", "reliable"]
}, {
  id: "teresa",
  img: teresa,
  x: 25,
  y: 85,
  link: "https://en.wikipedia.org/wiki/Mother_Teresa",
  traits: ["spiritual", "empathetic", "organized", "preventitive", "people_oriented", "sensitive_to_others"],
  profile: {
    A: 2,
    B: 3,
    C: 4,
    D: 2
  }
}, {
  id: "thatcher",
  img: thatcher,
  x: -20,
  y: 15,
  link: "https://en.wikipedia.org/wiki/Margaret_Thatcher",
  profile: {
    A: 3,
    B: 4,
    C: 3,
    D: 3
  },
  traits: ["logical", "detailed", "organized", "future_oriented", "strategic", "expressive"]
}, {
  id: "seattle",
  img: seattle,
  x: 58,
  y: -65,
  profile: {
    A: 3,
    B: 1,
    C: 2,
    D: 4
  },
  traits: ["future_oriented", "dominant", "strategic", "problem_solving", "expressive", "independently_minded"]
}, {
  id: "vonnegut",
  img: vonnegut,
  x: 58,
  y: -65,
  link: "https://en.wikipedia.org/wiki/Kurt_Vonnegut",
  profile: {
    A: 2,
    B: 4,
    C: 2,
    D: 4
  },
  traits: ["prolific", "detailed", "dominant", "imaginative", "independently_minded"]
}, {
  id: "walensa",
  img: walensa,
  x: 10,
  y: 55,
  link: "https://en.wikipedia.org/wiki/Lech_Wa%C5%82%C4%99sa",
  profile: {
    A: 2,
    B: 3,
    C: 3,
    D: 2
  },
  traits: ["dominant", "speaker", "problem_solving", "people_oriented", "organized", "expressive", "breaks_rules"]
}];
var list = brains.map(function (b) {
  return _.defaults(b, {
    traits: ["lorem", "ipsum", "dolor", "sit", "amet", "interdum", "tortor"]
  });
});
var map = _.fromPairs(brains.map(function (b) {
  return [b.id, b];
}));
var traitClasses = {
  administrative: quadrants.B,
  artistic: quadrants.D,
  breaks_rules: quadrants.D,
  controlled: quadrants.B,
  critical: quadrants.A,
  curious: quadrants.D,
  detailed: quadrants.B,
  dominant: quadrants.B,
  empathetic: quadrants.C,
  expressive: quadrants.C,
  factual: quadrants.A,
  financial: quadrants.A,
  friendly: quadrants.C,
  future_oriented: quadrants.D,
  "implements": quadrants.B,
  historian: quadrants.B,
  imaginative: quadrants.D,
  independently_minded: quadrants.D,
  innovative: quadrants.D,
  intellectual_thinking: quadrants.A,
  intuitive_emotionally: quadrants.C,
  knows_the_basis_of_things: quadrants.A,
  logical: quadrants.A,
  musical: quadrants.C,
  mathematical: quadrants.A,
  organized: quadrants.B,
  people_oriented: quadrants.C,
  playful: quadrants.D,
  practical: quadrants.B,
  precise: quadrants.A,
  preventitive: quadrants.B,
  problem_solving: quadrants.A,
  prolific: quadrants.D,
  writer: quadrants.C,
  reliable: quadrants.B,
  scientific: quadrants.A,
  sensitive_to_others: quadrants.C,
  social_activist: quadrants.C,
  speaker: quadrants.B,
  spiritual: quadrants.C,
  strategic: quadrants.D,
  synthesizing: quadrants.D,
  talker: quadrants.C,
  technical: quadrants.A,
  teaching: quadrants.C,
  visual: quadrants.D,
  visionary: quadrants.D
};

var css$e = ".portrait_bgStyle__1PlX4 {\n  width: 60%;\n  height: 60%;\n  position: absolute;\n  background-color: white;\n  border-radius: 100%;\n  padding: 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.portrait_bgStyle__1PlX4 div {\n  width: 100%;\n  height: 100%;\n}\n";
var styles$a = {"bgStyle":"portrait_bgStyle__1PlX4"};
styleInject(css$e);

function quadrantPieChart(x, y, radius, scores) {
  return _.chain(scores).toPairs().reduce(function (paths, kv) {
    var percentage = kv[1] / _.chain(scores).values().sum().value();

    var angleSize = percentage * 360;
    var startAngle = _.last(paths) ? _.last(paths).endAngle : 0;
    var endAngle = startAngle - angleSize;
    paths.push({
      path: pie(x, y, radius, endAngle, startAngle),
      startAngle: startAngle,
      endAngle: endAngle,
      quadrant: kv[0]
    });
    return paths;
  }, []).map(function (p) {
    return React.createElement("path", {
      key: p.path,
      d: p.path,
      fill: ColorsByQuadrant[p.quadrant.toUpperCase()]
    });
  }).value();
}

function ProfilePercentagePhoto(props) {
  var brain;
  var portraitUrl;
  var profile;

  if (props.profileScores != undefined) {
    profile = props.profileScores;
  } else {
    brain = map[props.name];
    profile = brain.profile;
    portraitUrl = props.assetsUrl ? props.assetsUrl + "/" + brain.img : brain.img;
  }

  var maxWidth = {
    maxWidth: props.maxWidth + 'px',
    position: 'relative',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center'
  };
  var fontSize = {
    fontSize: props.maxWidth / 3 + 'px'
  };
  return React.createElement("div", {
    style: maxWidth
  }, React.createElement("svg", {
    className: styles$a.svg,
    width: props.maxWidth + 'px',
    viewBox: "0 0 100 100"
  }, quadrantPieChart(50, 50, 50, profile), props.profileScores == undefined && React.createElement("image", {
    x: "10",
    y: "10",
    xlinkHref: portraitUrl,
    width: "80",
    height: "80"
  })), props.name == "custom" && React.createElement("div", {
    className: styles$a.bgStyle
  }, props.initials && React.createElement("h2", {
    style: fontSize
  }, props.initials), !props.initials && React.createElement(Logo, {
    type: "icon"
  })));
}
ProfilePercentagePhoto.propTypes = {
  name: PropTypes.string
};

var css$f = "\n.styles_socialWrapper__1zZ5I {\n  padding: 10px 0;\n  font-size: 1.8rem;\n  max-width: 500px;\n  margin: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.styles_socialIcons__7VAB0 {\n  color: #214263;\n  width: 30px;\n  height: 30px;\n  margin: 10px;\n}\n";
var styles$b = {"socialWrapper":"styles_socialWrapper__1zZ5I","socialIcons":"styles_socialIcons__7VAB0"};
styleInject(css$f);

function index$2 () {
  return React.createElement("div", {
    className: styles$b.socialWrapper
  }, React.createElement("div", {
    className: styles$b.socialIcons
  }, React.createElement(FontAwesomeIcon, {
    icon: ["far", "arrow-alt-circle-down"]
  })), React.createElement("div", {
    className: styles$b.socialIcons
  }, React.createElement(FontAwesomeIcon, {
    icon: ["far", "envelope"]
  })), React.createElement("div", {
    className: styles$b.socialIcons
  }, React.createElement(FontAwesomeIcon, {
    icon: ["fab", "linkedin"]
  })), React.createElement("div", {
    className: styles$b.socialIcons
  }, React.createElement(FontAwesomeIcon, {
    icon: ["fab", "facebook-square"]
  })), React.createElement("div", {
    className: styles$b.socialIcons
  }, React.createElement(FontAwesomeIcon, {
    icon: ["fab", "twitter-square"]
  })));
}

function index$3 () {
  return React.createElement("span", null, React.createElement("h1", null, "h1 Header"), React.createElement("p", null, "For top-of-page navigation use."), React.createElement("h2", null, "h2 Header"), React.createElement("p", null, "For content headers."), React.createElement("h3", null, "h3 Header"), React.createElement("p", null, "For content subheaders."), React.createElement("h4", null, "h4 Header"), React.createElement("p", null, "For navigation subheaders."), React.createElement("h5", null, "h5 Header"), React.createElement("p", null, "For body text content subheaders."), React.createElement("hr", null), React.createElement("p", null, "Body text."), React.createElement("p", null, "Body text with an ", React.createElement("a", null, "in-text link")), React.createElement("ul", null, React.createElement("li", null, "Bulleted text."), React.createElement("li", null, "More bullets.")), React.createElement("p", {
    className: "innerText"
  }, "Placeholder Text"));
}

var css$g = ".styles_modalWrapper__ToFUW {\n  display: block;\n  position: fixed;\n  z-index: 801;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0,0,0,0.5);\n  left: 0;\n  top: 0;\n  display: flex;\n  align-content: center;\n}\n\n.styles_modal__1fpGQ {\n  border: 1px solid var(--grey);\n  max-width: 400px;\n  max-height: 800px;\n  width: 100%;\n  margin: auto;\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.styles_closeWrapper__2Btn- {\n  display: flex;\n  justify-content: flex-end;\n  margin: -8px -8px 0 0;\n}\n\n.styles_close__11Ggf {\n  cursor: pointer;\n}\n\n.styles_modal__1fpGQ button {\n  margin: 0 5px;\n}\n\n.styles_dismissed__34chu {\n  display: none !important;\n}\n";
var styles$c = {"modalWrapper":"styles_modalWrapper__ToFUW","modal":"styles_modal__1fpGQ","closeWrapper":"styles_closeWrapper__2Btn-","close":"styles_close__11Ggf","dismissed":"styles_dismissed__34chu"};
styleInject(css$g);

var Modal =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Modal, _React$Component);

  function Modal(props) {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this));
    _this.state = {
      modalVisible: true
    };
    return _this;
  }

  _createClass(Modal, [{
    key: "_toggleModal",
    value: function _toggleModal(viewModal) {
      this.setState({
        modalVisible: !viewModal
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var border = {
        borderColor: Colors[this.props.color]
      };
      return React.createElement(React.Fragment, null, React.createElement("div", {
        className: cx(styles$c.modalWrapper, _defineProperty({}, styles$c.dismissed, this.state.modalVisible == false))
      }, React.createElement("div", {
        className: styles$c.modal,
        style: border
      }, this.props.close == true && React.createElement("div", {
        className: styles$c.closeWrapper
      }, React.createElement("a", {
        onClick: function onClick() {
          return _this2._toggleModal(_this2.state.modalVisible);
        },
        className: styles$c.close
      }, " X ")), React.createElement("div", {
        className: styles$c.content
      }, this.props.children))));
    }
  }]);

  return Modal;
}(React.Component);
Modal.propTypes = {
  title: PropTypes.string,
  description: PropTypes.string,
  color: PropTypes.oneOf(['red', 'green', 'blue', 'yellow', 'navy']),
  buttonText: PropTypes.string,
  buttonLink: PropTypes.string
};

var css$h = ".styles_circle__2KMJ8 {\n  stroke-dasharray: 3000;\n  animation: styles_stroke__1iLvw 3s ease-in-out reverse infinite;\n  transform: rotate(-90deg);\n  transform-origin: center;\n}\n\n.styles_container__smYdS {\n  position: relative;\n}\n\n.styles_nested1__L7z04 {\n  max-width: 75%;\n  position: absolute;\n  top: 12%;\n  left: 12%;\n}\n\n.styles_nested1__L7z04 .styles_circle__2KMJ8 {\n  -webkit-animation-delay: 0.5s;\n          animation-delay: 0.5s;\n}\n\n.styles_nested2__jeczk {\n  max-width: 48%;\n  position: absolute;\n  top: 25%;\n  left: 26%;\n}\n\n.styles_nested2__jeczk .styles_circle__2KMJ8 {\n  -webkit-animation-delay: 1s;\n          animation-delay: 1s;\n}\n\n.styles_container__smYdS svg {\n  width: 100%;\n}\n\n@-webkit-keyframes styles_stroke__1iLvw {\n  from {\n    stroke-dashoffset: 6000;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes styles_stroke__1iLvw {\n  from {\n    stroke-dashoffset: 6000;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n";
var styles$d = {"circle":"styles_circle__2KMJ8","stroke":"styles_stroke__1iLvw","container":"styles_container__smYdS","nested1":"styles_nested1__L7z04","nested2":"styles_nested2__jeczk"};
styleInject(css$h);

function Loading(props) {
  var maxWidth = {
    maxWidth: props.maxWidth + 'px'
  };

  if (props.backgroundColor != undefined) {
    var _backgroundColor = props.backgroundColor;
  }

  return React.createElement(React.Fragment, null, React.createElement("div", {
    style: maxWidth,
    className: styles$d.container
  }, React.createElement("svg", {
    viewBox: "0 0 1028 1028"
  }, React.createElement("title", null, "Loading"), React.createElement("g", {
    id: "Layer_2",
    "data-name": "Layer 2"
  }, React.createElement("g", {
    id: "Layer_1_copy_16",
    "data-name": "Layer 1 copy 16"
  }, React.createElement("path", {
    stroke: "#63c084",
    fill: "none",
    strokeWidth: "4%",
    d: "M514,988C252.22,988,40,775.78,40,514"
  }), React.createElement("path", {
    stroke: "#ef354e",
    fill: "none",
    strokeWidth: "4%",
    d: "M988,514c0,261.78-212.22,474-474,474"
  }), React.createElement("path", {
    stroke: "#fdd742",
    fill: "none",
    strokeWidth: "4%",
    d: "M514,40c261.78,0,474,212.22,474,474"
  }), React.createElement("path", {
    stroke: "#3fa9f5",
    fill: "none",
    strokeWidth: "4%",
    d: "M40,514C40,252.22,252.22,40,514,40"
  })), React.createElement("circle", {
    className: styles$d.circle,
    cx: "515",
    cy: "514",
    r: "473",
    stroke: "#FFF",
    strokeWidth: "10%",
    fillOpacity: "0"
  }))), React.createElement("div", {
    className: styles$d.nested1
  }, React.createElement("svg", {
    viewBox: "0 0 1028 1028"
  }, React.createElement("title", null, "Loading"), React.createElement("g", {
    id: "Layer_2",
    "data-name": "Layer 2"
  }, React.createElement("g", {
    id: "Layer_1_copy_16",
    "data-name": "Layer 1 copy 16"
  }, React.createElement("path", {
    stroke: "#63c084",
    fill: "none",
    strokeWidth: "5%",
    d: "M514,988C252.22,988,40,775.78,40,514"
  }), React.createElement("path", {
    stroke: "#ef354e",
    fill: "none",
    strokeWidth: "5%",
    d: "M988,514c0,261.78-212.22,474-474,474"
  }), React.createElement("path", {
    stroke: "#fdd742",
    fill: "none",
    strokeWidth: "5%",
    d: "M514,40c261.78,0,474,212.22,474,474"
  }), React.createElement("path", {
    stroke: "#3fa9f5",
    fill: "none",
    strokeWidth: "5%",
    d: "M40,514C40,252.22,252.22,40,514,40"
  })), React.createElement("circle", {
    className: styles$d.circle,
    cx: "515",
    cy: "514",
    r: "473",
    stroke: "white",
    strokeWidth: "10%",
    fillOpacity: "0"
  })))), React.createElement("div", {
    className: styles$d.nested2
  }, React.createElement("svg", {
    viewBox: "0 0 1028 1028"
  }, React.createElement("title", null, "Loading"), React.createElement("g", {
    id: "Layer_2",
    "data-name": "Layer 2"
  }, React.createElement("g", {
    id: "Layer_1_copy_16",
    "data-name": "Layer 1 copy 16"
  }, React.createElement("path", {
    stroke: "#63c084",
    fill: "none",
    strokeWidth: "8%",
    d: "M514,988C252.22,988,40,775.78,40,514"
  }), React.createElement("path", {
    stroke: "#ef354e",
    fill: "none",
    strokeWidth: "8%",
    d: "M988,514c0,261.78-212.22,474-474,474"
  }), React.createElement("path", {
    stroke: "#fdd742",
    fill: "none",
    strokeWidth: "8%",
    d: "M514,40c261.78,0,474,212.22,474,474"
  }), React.createElement("path", {
    stroke: "#3fa9f5",
    fill: "none",
    strokeWidth: "8%",
    d: "M40,514C40,252.22,252.22,40,514,40"
  })), React.createElement("circle", {
    className: styles$d.circle,
    cx: "515",
    cy: "514",
    r: "473",
    stroke: "white",
    strokeWidth: "10%",
    fillOpacity: "0"
  }))))));
}

var css$i = ".styles_textarea__Ee4QS {\n  font-family: \"Proxima Nova\", sans-serif;\n  width: 100%;\n  border: 0.5px solid var(--light-grey);\n  border-bottom: 1px solid var(--navy);\n  border-radius: 3px 3px 0 0;\n  background-color: white;\n  padding: 10px;\n  outline: none;\n  font-size: 0.9rem;\n  line-height: 1.3rem;\n  resize: none;\n  height: 18px;\n  font-weight: 300;\n}\n\n.styles_textarea__Ee4QS::-webkit-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_textarea__Ee4QS::-moz-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_textarea__Ee4QS:-ms-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_textarea__Ee4QS::-ms-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.textarea::-webkit-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.textarea::-moz-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.textarea:-ms-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.textarea::-ms-input-placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_textarea__Ee4QS::placeholder{\n  color: var(--grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_textarea__Ee4QS:focus {\n  box-shadow: 0px 2px 12px #CBCBCA;\n}\n";
var styles$e = {"textarea":"styles_textarea__Ee4QS"};
styleInject(css$i);

function TextArea(props) {
  var maxWidth = props.maxWidth,
      height = props.height,
      placeholder = props.placeholder,
      value = props.value,
      passThrough = _objectWithoutProperties(props, ["maxWidth", "height", "placeholder", "value"]);

  var dimensions = {
    maxWidth: maxWidth + "px",
    height: height + "px"
  };
  return React.createElement("textarea", _extends({
    className: styles$e.textarea,
    style: dimensions,
    value: value,
    placeholder: placeholder
  }, passThrough), props.children);
}
TextArea.propTypes = {
  maxHeight: PropTypes.number,
  maxWidth: PropTypes.number,
  placeholder: PropTypes.string
};

var css$j = ".styles_flex__14KsU {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.styles_flex__14KsU button {\n  margin: 0;\n  margin-left: 5px;\n}\n\n.styles_search__1cpjM {\n  width: 100%;\n  border: 0.5px solid var(--light-grey);\n  border-bottom: 1px solid var(--navy);\n  background-color: white;\n  padding: 10px;\n  outline: none;\n\n  resize: none;\n  height: 18px;\n  font-weight: 300;\n}\n\n.styles_search__1cpjM::-webkit-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_search__1cpjM::-moz-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_search__1cpjM:-ms-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_search__1cpjM::-ms-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.search::-webkit-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.search::-moz-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.search:-ms-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.search::-ms-input-placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_search__1cpjM::placeholder{\n  color: var(--light-grey);\n  font-family: \"Proxima Nova\", sans-serif;\n}\n\n.styles_search__1cpjM:focus {\n  box-shadow: 0px 2px 12px var(--light-grey);\n}\n";
var styles$f = {"flex":"styles_flex__14KsU","search":"styles_search__1cpjM"};
styleInject(css$j);

var Search =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Search, _React$Component);

  function Search(props) {
    var _this;

    _classCallCheck(this, Search);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));
    _this.state = {
      inputContent: ""
    };
    _this._updateInput = _this._updateInput.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Search, [{
    key: "_updateInput",
    value: function _updateInput(e) {
      this.setState({
        inputContent: e.target.value
      });
    }
  }, {
    key: "_handleKeyPress",
    value: function _handleKeyPress(e, props) {
      if (e.key == 'Enter') {
        props.onSearch(this.state.inputContent);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var dimensions = {
        maxWidth: this.props.maxWidth + "px"
      };
      return React.createElement("div", {
        className: styles$f.flex
      }, React.createElement("input", {
        type: "text",
        disabled: this.props.disabled,
        "aria-label": this.props.placeholder,
        className: styles$f.search,
        style: dimensions,
        placeholder: this.props.placeholder,
        onChange: this._updateInput,
        onKeyPress: function onKeyPress(e) {
          return _this2._handleKeyPress(e, _this2.props);
        }
      }), React.createElement(Button, {
        "aria-label": this.props.placeholder,
        type: "submit",
        buttonText: this.props.buttonText,
        onClick: function onClick(e) {
          return _this2.props.onSearch(_this2.state.inputContent);
        }
      }));
    }
  }]);

  return Search;
}(React.Component);
Search.propTypes = {
  buttonText: PropTypes.node,
  maxWidth: PropTypes.number,
  placeholder: PropTypes.string
};

var css$k = ".styles_form__3RVay{\n  display: inline-block;\n}\n\n.styles_horizontal__3FX8h {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.styles_horizontal__3FX8h button {\n  margin: 0;\n  margin-left: 5px;\n}\n\n.styles_actions__T9TtR{\n  justify-content: center\n}\n\n.styles_input__3-_kY {\n  font-family: \"Proxima Nova\", sans-serif;\n  width: 100%;\n  border: 0.5px solid var(--light-grey);\n  border-bottom: 1px solid var(--navy);\n  background-color: white;\n  padding: 10px;\n  outline: none;\n  font-size: 0.9rem;\n  resize: none;\n  height: 18px;\n  margin: 5px 0;\n  font-weight: 300;\n}\n\n.styles_errors__23GVF{\n  padding: 10px;\n}\n\n.styles_form__3RVay select {\n  font-family: \"Proxima Nova\", sans-serif;\n  color: var(--grey);\n  line-height: 1.4rem;\n  letter-spacing: 0.1px;\n  font-weight: 300;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  border: 1px solid var(--navy);\n  border-radius: 6px;\n  margin: 20px 0;\n  overflow: hidden;\n  padding: 2px 10px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 90%;\n  height: 30px;\n  background-color: white;\n}\n\n.styles_input__3-_kY::-webkit-input-placeholder{\n  color: var(--grey);\n}\n\n.styles_input__3-_kY::-moz-placeholder{\n  color: var(--grey);\n}\n\n.styles_input__3-_kY:-ms-input-placeholder{\n  color: var(--grey);\n}\n\n.styles_input__3-_kY::-ms-input-placeholder{\n  color: var(--grey);\n}\n\n.input::-webkit-input-placeholder{\n  color: var(--grey);\n}\n\n.input::-moz-placeholder{\n  color: var(--grey);\n}\n\n.input:-ms-input-placeholder{\n  color: var(--grey);\n}\n\n.input::-ms-input-placeholder{\n  color: var(--grey);\n}\n\n.styles_input__3-_kY::placeholder{\n  color: var(--grey);\n}\n\n.styles_input__3-_kY:focus {\n  box-shadow: 0px 2px 12px var(--light-grey);\n}\n\n.styles_input__3-_kY[type=radio]:focus,\n.styles_input__3-_kY[type=checkbox]:focus {\n  box-shadow: none;\n}\n\n.styles_input__3-_kY[type=date] {\n  color: var(--light-grey);\n}\n";
var styles$g = {"form":"styles_form__3RVay","horizontal":"styles_horizontal__3FX8h","actions":"styles_actions__T9TtR","input":"styles_input__3-_kY","errors":"styles_errors__23GVF"};
styleInject(css$k);

var css$l = ".styles_errorWrapper__1t-HW {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: white;\n  border: 3px solid black;\n  padding: 10px;\n  border-radius: 6px;\n}\n\n.styles_errorCopy__2jrFn {\n  display: flex;\n  align-items: center;\n  margin: auto;\n}\n\n.styles_errorWrapper__1t-HW p, .styles_errorWrapper__1t-HW a {\n  padding-left: 10px;\n  font-weight: bold;\n  margin: 0;\n  color: inherit;\n}\n\n.styles_errorWrapper__1t-HW a {\n  cursor: pointer;\n}\n\n.styles_errorWrapper__1t-HW .styles_icon__1uQ2a {\n  font-size: 1.7rem;\n}\n\n.styles_errorWrapper__1t-HW button {\n  margin: 0px 15px;\n  padding: 5px 8px;\n  font-size: 0.9rem;\n}\n";
var styles$h = {"errorWrapper":"styles_errorWrapper__1t-HW","errorCopy":"styles_errorCopy__2jrFn","icon":"styles_icon__1uQ2a"};
styleInject(css$l);

function AlertDisplay(props) {
  var variant = props.type;
  var colorOptions = {
    error: "#db5757",
    warning: "#f68b55",
    confirmation: "#88cc00"
  };
  var icon$$1 = {
    error: "exclamation-circle",
    warning: "exclamation-triangle",
    confirmation: "check-circle"
  };
  var color = {
    borderColor: colorOptions[variant],
    color: colorOptions[variant]
  };
  return React.createElement("div", {
    className: styles$h.errorWrapper,
    style: color
  }, React.createElement("div", {
    className: styles$h.errorCopy
  }, React.createElement(FontAwesomeIcon, {
    icon: ["fas", icon$$1[variant]],
    className: styles$h.icon
  }), React.createElement("p", null, props.message, " ", props.code), props.button && React.createElement(Button, {
    variant: "secondary",
    buttonText: props.button.text,
    onClick: props.button.action
  })), props.xAction && React.createElement("a", {
    onClick: props.xAction
  }, "x"));
}
AlertDisplay.propTypes = {
  message: PropTypes.string,
  type: PropTypes.oneOf(["error", "warning", "confirmation"])
};

function Input(props) {
  var name = props.name,
      placeholder = props.placeholder,
      types = props.types,
      min = props.min,
      max = props.max,
      maxWidth = props.maxWidth,
      errors$$1 = props.errors,
      className = props.className,
      inputProps = _objectWithoutProperties(props, ["name", "placeholder", "types", "min", "max", "maxWidth", "errors", "className"]);

  var dimensions = {
    maxWidth: props.maxWidth + "px"
  };
  errors$$1 = errors$$1 || [];
  return React.createElement("div", {
    className: className
  }, React.createElement("input", _extends({
    "aria-invalid": errors$$1.length > 0 ? true : false,
    "aria-errormessage": errors$$1.length > 0 ? "".concat(name, "-errors") : "",
    name: name,
    className: styles$g.input,
    style: dimensions,
    placeholder: props.placeholder,
    type: props.type,
    min: props.min,
    max: props.max
  }, inputProps)), React.createElement("div", {
    className: styles$g.errors,
    "aria-live": "polite",
    id: "".concat(name, "-errors"),
    style: dimensions
  }, errors$$1.map(function (e) {
    return React.createElement(AlertDisplay, {
      key: e.message,
      message: e.message,
      type: e.type
    });
  })));
}

function Fields(props) {
  var _props$arrangement = props.arrangement,
      arrangement = _props$arrangement === void 0 ? "vertical" : _props$arrangement;
  return React.createElement("div", {
    className: styles$g[arrangement]
  }, props.children);
}

function Actions(props) {
  return React.createElement("div", {
    className: cx(styles$g.horizontal, styles$g.actions)
  }, props.children);
}

var Form =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Form, _React$Component);

  function Form() {
    _classCallCheck(this, Form);

    return _possibleConstructorReturn(this, _getPrototypeOf(Form).apply(this, arguments));
  }

  _createClass(Form, [{
    key: "render",
    value: function render(props) {
      return React.createElement("form", {
        className: styles$g.form
      }, this.props.children, React.createElement("div", {
        className: styles$g.actions
      }));
    }
  }]);

  return Form;
}(React.Component);

Object.defineProperty(Form, "Input", {
  enumerable: true,
  writable: true,
  value: Input
});
Object.defineProperty(Form, "Fields", {
  enumerable: true,
  writable: true,
  value: Fields
});
Object.defineProperty(Form, "Actions", {
  enumerable: true,
  writable: true,
  value: Actions
});
Input.propTypes = {
  type: PropTypes.oneOf(["number", "date", "password", "email", "text", "radio", "checkbox", "range", "url", "tel", "time"]),
  errors: PropTypes.arrayOf(PropTypes.shape(AlertDisplay.propTypes)),
  min: PropTypes.number,
  max: PropTypes.number,
  maxWidth: PropTypes.number,
  placeholder: PropTypes.string
};

var css$m = ".styles_table__28ySo {\n  border-collapse: collapse;\n  font-weight: 300;\n}\n\n.styles_table__28ySo td, .styles_table__28ySo th {\n    padding: 10px 5px;\n    border-bottom: 1px solid var(--navy);\n}\n\n.styles_table__28ySo tr:nth-child(even) {\n  background-color: var(--light-navy);\n}\n\n.styles_table__28ySo th {\n  font-weight: bold;\n  letter-spacing: 0.1px;\n  color: var(--navy);\n  padding: 15px 50px 15px 0;\n}\n\n.styles_tableHeader__5zQpN {\n  margin: 0;\n}\n";
var styles$i = {"table":"styles_table__28ySo","tableHeader":"styles_tableHeader__5zQpN"};
styleInject(css$m);

function index$4 (props) {
  var data = [{
    id: 1,
    name: 'Dave',
    age: 50
  }, {
    id: 2,
    name: 'Kellie',
    age: 42
  }, {
    id: 3,
    name: 'Max',
    age: 12
  }, {
    id: 2,
    name: 'Jack',
    age: 12
  }];
  var listItems = data.map(function (d) {
    return React.createElement("tr", null, React.createElement("td", null, d.id), React.createElement("td", null, d.name), React.createElement("td", null, d.age));
  });
  return React.createElement("table", {
    className: styles$i.table
  }, React.createElement("tbody", null, listItems));
}

var css$n = ".styles_progressBarWrapper__2JOxr {\n  width: 100%;\n  display: flex;\n  justify-content: right;\n  align-items: center;\n  overflow: hidden;\n  max-height: 40px;\n  border: 1px solid var(--light-grey);\n  border-radius: 6px;\n}\n\n.styles_skills__3_UXB {\n  z-index: 2;\n  color: black;\n  padding: 10px;\n  margin: 3px 0;\n  position: relative;\n  box-sizing: border-box;\n  border-radius: 6px;\n  font-size: 0.9rem;\n}\n\n.styles_tooltip__3edCg span {\n  z-index: -1;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: var(--light-navy);\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n}\n\n.styles_tooltip__3edCg {\n  width: 100%;\n}\n\n.styles_tooltip__3edCg .styles_tooltiptext__1PXWJ {\n  visibility: hidden;\n  text-align: left;\n  font-weight: bold;\n  padding: 3px;\n  padding-left: 10px;\n  z-index: 1;\n}\n\n.styles_tooltip__3edCg:hover .styles_tooltiptext__1PXWJ {\n  visibility: visible;\n  border-radius: 6px;\n  background-color: white;\n  width: 100%\n}\n";
var styles$j = {"progressBarWrapper":"styles_progressBarWrapper__2JOxr","skills":"styles_skills__3_UXB","tooltip":"styles_tooltip__3edCg","tooltiptext":"styles_tooltiptext__1PXWJ"};
styleInject(css$n);

function ProgressBar(props) {
  var barWidth = {
    width: props.percentage + '%'
  };
  var dimensions = {
    maxWidth: props.maxWidth + 'px',
    maxHeight: props.maxHeight + 'px'
  };
  var hover = {
    visibility: props.hoverVisibility
  };
  return React.createElement("div", {
    className: styles$j.progressBarWrapper,
    style: dimensions
  }, React.createElement("div", {
    className: styles$j.tooltip
  }, React.createElement("p", {
    className: styles$j.skills
  }, props.title, React.createElement("span", {
    style: barWidth
  }), React.createElement("span", {
    className: styles$j.tooltiptext,
    style: hover
  }, props.percentage, "%"))));
}
ProgressBar.propTypes = {
  percentage: PropTypes.number.isRequired,
  maxWidth: PropTypes.number,
  maxHeight: PropTypes.number,
  visibility: PropTypes.string,
  title: PropTypes.string
};

var css$o = ".styles_quad__Xg1yI {\n  height: 80px;\n  border: 2px solid white;\n  margin: 5px 5px 0 0;\n  opacity: 0.3;\n}\n\n.styles_content__Dcpan span{\n  min-height: 420px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 0px;\n  text-align: center;\n}\n\n.styles_content__Dcpan {\n  min-width: 0%;\n}\n\n.styles_clustersWrapper__2k5Nk {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.styles_labels__c7vEi {\n  text-align: center;\n  min-height: 178px;\n  min-width: 178px;\n  height: 178px;\n  width: 178px;\n  margin: 0 40px 20px;\n}\n\n.styles_labels__c7vEi div {\n  float: left;\n}\n\n.styles_traits__3nPq- {\n  margin: 10px;\n  min-height: 0;\n  max-width: 200px;\n}\n\n.styles_traits__3nPq- p{\n  text-align: center;\n  margin: 0;\n  opacity: 0.5;\n}\n\n.styles_trait__BKBXL{\n  text-transform: capitalize;\n}\n\n.styles_selected__24Ynr {\n  font-weight: bold;\n  opacity: 1 !important;\n}\n\n.styles_implied__3SYYc {\n  font-style: italic;\n  opacity: 1 !important;\n}\n\n.styles_flexCenter__JRJJT {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  align-items: center;\n  max-width: 300px;\n  text-align: center;\n  margin: 20px;\n}\n\n.styles_flexCenter__JRJJT .styles_traits__3nPq- {\n  max-width: 250px;\n}\n\n.styles_traits__3nPq- .styles_normal__2e2o- {\n  margin-bottom: 5px;\n  opacity: 1\n}\n\n.styles_clustersIcon__3D6Ds{\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n}\n\n@media only screen and (max-width: 800px) {\n\n  .styles_flexCenter__JRJJT {\n    max-width: 100%;\n    flex-direction: column-reverse;\n  }\n\n  .styles_clustersWrapper__2k5Nk {\n    flex-wrap: wrap;\n  }\n\n  .styles_content__Dcpan {\n    max-width: 90%\n  }\n}\n";
var styles$k = {"quad":"styles_quad__Xg1yI","content":"styles_content__Dcpan","clustersWrapper":"styles_clustersWrapper__2k5Nk","labels":"styles_labels__c7vEi","traits":"styles_traits__3nPq-","trait":"styles_trait__BKBXL","selected":"styles_selected__24Ynr","implied":"styles_implied__3SYYc","flexCenter":"styles_flexCenter__JRJJT","normal":"styles_normal__2e2o-","clustersIcon":"styles_clustersIcon__3D6Ds"};
styleInject(css$o);

var demoStringDictionary = {
  "instructions": "Select a quadrant on the model to explore the associated clusters.",
  "selected": "Traits you selected",
  "implied": "Implied traits",
  "unselected": "Unselected traits"
};

var Clusters =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Clusters, _React$Component);

  function Clusters(props) {
    var _this;

    _classCallCheck(this, Clusters);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clusters).call(this, props));
    _this.renderLabels = _this.renderLabels.bind(_assertThisInitialized(_this));
    _this.t = _this.t.bind(_assertThisInitialized(_this));
    _this._internalt = _this._internalt.bind(_assertThisInitialized(_this));
    _this.tabsList = {
      A: {
        label: 'blue',
        content: React.createElement("span", null, React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "book"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['blue']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("factual")
        }, " ", _this.t("factual"), " "), React.createElement("p", {
          className: _this._traitClasses("critical")
        }, " ", _this.t("critical"), " "), React.createElement("p", {
          className: _this._traitClasses("rational")
        }, " ", _this.t("rational"), " "), React.createElement("p", {
          className: _this._traitClasses("realistic")
        }, " ", _this.t("realistic"), " "), React.createElement("p", {
          className: _this._traitClasses("rigorous_thinking")
        }, " ", _this.t("rigorous thinking"), " "), React.createElement("p", {
          className: _this._traitClasses("knows_the_basis")
        }, " ", _this.t("knows_the_basis"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "calculator"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['blue']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("financial")
        }, " ", _this.t("financial"), " "), React.createElement("p", {
          className: _this._traitClasses("numerical")
        }, " ", _this.t("numerical"), " "), React.createElement("p", {
          className: _this._traitClasses("quantitative")
        }, " ", _this.t("quantitative"), " "), React.createElement("p", {
          className: _this._traitClasses("mathematical")
        }, " ", _this.t("mathematical"), " "), React.createElement("p", {
          className: _this._traitClasses("knows_about_money")
        }, " ", _this.t("knows_about_money"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "cogs"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['blue']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("technical")
        }, " ", _this.t("technical"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "list-ol"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['blue']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("logical")
        }, " ", _this.t("logical"), " "), React.createElement("p", {
          className: _this._traitClasses("analytical")
        }, " ", _this.t("analytical"), " "), React.createElement("p", {
          className: _this._traitClasses("problem_solving")
        }, " ", _this.t("problem solving"), " "), React.createElement("p", {
          className: _this._traitClasses("test_and_prove")
        }, " ", _this.t("test_and_prove"), " "), React.createElement("p", {
          className: _this._traitClasses("knows_how_things_work")
        }, " ", _this.t("knows_how_things_work"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "glasses"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['blue']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("intellectual_thinking")
        }, " ", _this.t("intellectual_thinking"), " "))),
        quad: React.createElement("svg", {
          width: "80",
          height: "80",
          viewBox: "0 0 130 130"
        }, React.createElement("path", {
          d: "M0,129.35A129.35,129.35,0,0,1,129.35,0V129.48",
          style: {
            fill: Colors['blue']
          }
        }))
      },
      D: {
        label: 'yellow',
        content: React.createElement("span", null, React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "lightbulb"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("originates")
        }, " ", _this.t("originates"), " "), React.createElement("p", {
          className: _this._traitClasses("imaginative")
        }, " ", _this.t("imaginative"), " "), React.createElement("p", {
          className: _this._traitClasses("innovative")
        }, " ", _this.t("innovative"), " "), React.createElement("p", {
          className: _this._traitClasses("creative")
        }, " ", _this.t("creative"), " "), React.createElement("p", {
          className: _this._traitClasses("curious")
        }, " ", _this.t("curious"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "paper-plane"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("playful")
        }, " ", _this.t("playful"), " "), React.createElement("p", {
          className: _this._traitClasses("breaks_rules")
        }, " ", _this.t("breaks_rules"), " "), React.createElement("p", {
          className: _this._traitClasses("risk_taking")
        }, " ", _this.t("risk_taking"), " "), React.createElement("p", {
          className: _this._traitClasses("original")
        }, " ", _this.t("original"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "palette"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("artistic")
        }, " ", _this.t("artistic"), " "), React.createElement("p", {
          className: _this._traitClasses("spatial")
        }, " ", _this.t("spatial"), " "), React.createElement("p", {
          className: _this._traitClasses("visual")
        }, " ", _this.t("visual"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "puzzle-piece"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("integration")
        }, " ", _this.t("integration"), " "), React.createElement("p", {
          className: _this._traitClasses("synthesizing")
        }, " ", _this.t("synthesizing"), " "), React.createElement("p", {
          className: _this._traitClasses("holistic")
        }, " ", _this.t("holistic"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "eye"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("conceptual")
        }, " ", _this.t("conceptual"), " "), React.createElement("p", {
          className: _this._traitClasses("metaphorical")
        }, " ", _this.t("metaphorical"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "exclamation"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("likes_surprises")
        }, " ", _this.t("likes_surprises"), " "), React.createElement("p", {
          className: _this._traitClasses("simultaneous")
        }, " ", _this.t("simultaneous"), " "), React.createElement("p", {
          className: _this._traitClasses("impetuous")
        }, " ", _this.t("impetuous"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "arrow-up"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['yellow']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("strategic")
        }, " ", _this.t("strategic"), " "), React.createElement("p", {
          className: _this._traitClasses("future_oriented")
        }, " ", _this.t("future_oriented"), " "), React.createElement("p", {
          className: _this._traitClasses("imaginative")
        }, " ", _this.t("imaginative"), " "), React.createElement("p", {
          className: _this._traitClasses("intuitive_solutions")
        }, " ", _this.t("intuitive_solutions"), " "))),
        quad: React.createElement("svg", {
          width: "80",
          height: "80",
          viewBox: "0 0 130 130"
        }, React.createElement("path", {
          d: "M0,129.22V0A129.35,129.35,0,0,1,129.35,129.35",
          style: {
            fill: Colors['yellow']
          }
        }))
      },
      B: {
        label: 'green',
        content: React.createElement("span", null, React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "lock"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("traditional")
        }, " ", _this.t("traditional"), " "), React.createElement("p", {
          className: _this._traitClasses("conservative")
        }, " ", _this.t("conservative"), " "), React.createElement("p", {
          className: _this._traitClasses("safekeeping")
        }, " ", _this.t("safekeeping"), " "), React.createElement("p", {
          className: _this._traitClasses("controlled")
        }, " ", _this.t("controlled"), " "), React.createElement("p", {
          className: _this._traitClasses("dominant")
        }, " ", _this.t("dominant"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "book-open"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("speaker")
        }, " ", _this.t("speaker"), " "), React.createElement("p", {
          className: _this._traitClasses("reader")
        }, " ", _this.t("reader"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "check-circle"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("reliable")
        }, " ", _this.t("reliable"), " "), React.createElement("p", {
          className: _this._traitClasses("implementation")
        }, " ", _this.t("implementation"), " "), React.createElement("p", {
          className: _this._traitClasses("gets_things_done")
        }, " ", _this.t("gets_things_done"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "asterisk"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("detailed")
        }, " ", _this.t("detailed"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "clipboard-list"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("on_time")
        }, " ", _this.t("on_time"), " "), React.createElement("p", {
          className: _this._traitClasses("linear")
        }, " ", _this.t("linear"), " "), React.createElement("p", {
          className: _this._traitClasses("sequential")
        }, " ", _this.t("sequential"), " "), React.createElement("p", {
          className: _this._traitClasses("step_by_step")
        }, " ", _this.t("step_by_step"), " "), React.createElement("p", {
          className: _this._traitClasses("procedural")
        }, " ", _this.t("procedural"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "edit"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['green']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("neat")
        }, " ", _this.t("neat"), " "), React.createElement("p", {
          className: _this._traitClasses("organized")
        }, " ", _this.t("organized"), " "), React.createElement("p", {
          className: _this._traitClasses("administrative")
        }, " ", _this.t("administrative"), " "), React.createElement("p", {
          className: _this._traitClasses("preventative")
        }, " ", _this.t("preventative"), " "), React.createElement("p", {
          className: _this._traitClasses("planning")
        }, " ", _this.t("planning"), " "))),
        quad: React.createElement("svg", {
          width: "80",
          height: "80",
          viewBox: "0 0 130 130"
        }, React.createElement("path", {
          d: "M129.35.13V129.35A129.35,129.35,0,0,1,0,0",
          style: {
            fill: Colors['green']
          }
        }))
      },
      C: {
        label: 'red',
        content: React.createElement("span", null, React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "heart"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("emotional")
        }, " ", _this.t("emotional"), " "), React.createElement("p", {
          className: _this._traitClasses("feeling")
        }, " ", _this.t("feeling"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "cloud"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("spiritual")
        }, " ", _this.t("spiritual"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "comments"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("talker")
        }, " ", _this.t("talker"), " "), React.createElement("p", {
          className: _this._traitClasses("expressive")
        }, " ", _this.t("expressive"), " "), React.createElement("p", {
          className: _this._traitClasses("communicator")
        }, " ", _this.t("communicator"), " "), React.createElement("p", {
          className: _this._traitClasses("teacher_trainer")
        }, " ", _this.t("teacher_trainer"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "smile"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("symbolic")
        }, " ", _this.t("symbolic"), " "), React.createElement("p", {
          className: _this._traitClasses("intuitive_people")
        }, " ", _this.t("intuitive_people"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "pencil-alt"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("writer")
        }, " ", _this.t("writer"), " "), React.createElement("p", {
          className: _this._traitClasses("reader")
        }, " ", _this.t("reader"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "users"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("friendly")
        }, " ", _this.t("friendly"), " "), React.createElement("p", {
          className: _this._traitClasses("empathetic")
        }, " ", _this.t("empathetic"), " "), React.createElement("p", {
          className: _this._traitClasses("interpersonal")
        }, " ", _this.t("interpersonal"), " "), React.createElement("p", {
          className: _this._traitClasses("intuitive_people")
        }, " ", _this.t("intuitive_people"), " "), React.createElement("p", {
          className: _this._traitClasses("sensitive_to_others")
        }, " ", _this.t("sensitive_to_others"), " "), React.createElement("p", {
          className: _this._traitClasses("people_oriented")
        }, " ", _this.t("people_oriented"), " "), React.createElement("p", {
          className: _this._traitClasses("supportive")
        }, " ", _this.t("supportive"), " ")), React.createElement(Tile, {
          className: styles$k.traits
        }, React.createElement(FontAwesomeIcon, {
          icon: ["fas", "music"],
          className: styles$k.clustersIcon,
          style: {
            color: Colors['red']
          }
        }), React.createElement("p", {
          className: _this._traitClasses("musical")
        }, " ", _this.t("musical"), " "))),
        quad: React.createElement("span", null, React.createElement("svg", {
          width: "80",
          height: "80",
          viewBox: "0 0 130 130"
        }, React.createElement("path", {
          d: "M129.35.13A129.35,129.35,0,0,1,0,129.48V0",
          style: {
            fill: Colors['red']
          }
        })))
      }
    };
    var activeTabs = "A";
    _this.state = {
      tabsItem: _this.tabsList[activeTabs],
      active: activeTabs
    };
    return _this;
  }

  _createClass(Clusters, [{
    key: "changeTab",
    value: function changeTab(item, activeTabs) {
      this.setState({
        tabsItem: item,
        active: activeTabs
      });
    }
  }, {
    key: "_traitClasses",
    value: function _traitClasses(trait$$1) {
      var _cx;

      var traits$$1 = this.props.traits[0];
      return cx(styles$k.trait, (_cx = {}, _defineProperty(_cx, styles$k.selected, _.includes(traits$$1.selected, trait$$1)), _defineProperty(_cx, styles$k.implied, _.includes(traits$$1.implied, trait$$1)), _cx));
    }
  }, {
    key: "_internalt",
    value: function _internalt(key) {
      var defined_value = demoStringDictionary[key];

      if (defined_value) {
        return defined_value;
      } else {
        return _.startCase(key);
      }
    }
  }, {
    key: "renderLabels",
    value: function renderLabels(props) {
      var _this2 = this;

      var label = Object.keys(this.tabsList).map(function (value, index) {
        if (value === _this2.state.active) {
          var active = {
            opacity: '1'
          };
        }

        return React.createElement("span", null, React.createElement("div", {
          style: active,
          className: styles$k.quad,
          onClick: _this2.changeTab.bind(_this2, _this2.tabsList[value], value),
          key: _this2.tabsList[value].label
        }, _this2.tabsList[value].quad));
      });
      return label;
    }
  }, {
    key: "t",
    value: function t(key) {
      if (this.props.t) {
        return this.props.t(key);
      } else {
        return this._internalt(key);
      }
    }
  }, {
    key: "render",
    value: function render(props) {
      return React.createElement("span", null, React.createElement("div", {
        className: styles$k.clustersWrapper
      }, React.createElement("div", {
        className: styles$k.flexCenter
      }, React.createElement("div", {
        className: styles$k.labels
      }, this.renderLabels()), React.createElement(Tile, {
        className: styles$k.traits
      }, React.createElement("p", {
        className: styles$k.normal
      }, this.t("instructions")), React.createElement("hr", null), React.createElement("p", {
        className: styles$k.selected
      }, this.t("selected")), React.createElement("p", {
        className: styles$k.implied
      }, " ", this.t("implied")), React.createElement("p", null, this.t("unselected")))), React.createElement(Tile, {
        border: this.state.tabsItem.label,
        className: styles$k.content
      }, this.state.tabsItem.content)));
    }
  }]);

  return Clusters;
}(React.Component);

var css$p = ".styles_accordion__lUnVt {\n  width: 100%;\n  border: 1px solid var(--grey);\n  border-radius: 6px;\n  display: flex;\n  flex-wrap: wrap;\n  text-align: left;\n  height: auto;\n  transition: height 0.5s;\n}\n\n.styles_accordion__lUnVt h5 {\n  margin: 0px;\n  padding: 0px;\n}\n\n.styles_accordionHeader__1D-Eg {\n  width: 100%;\n  border: 0px;\n  text-align: center;\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.styles_iconUp__2mBOd {\n  transition: transform 0.4s;\n  margin: -7px 5px 0 0;\n}\n\n.styles_iconDown__1DoeY {\n  transform: scaleY(-1);\n  margin-top: 6px;\n}\n\n.styles_accordion__lUnVt span {\n  display: flex;\n}\n\n.styles_contentWrapper__229n6 {\n  width: 100%;\n  padding: 0 10px 10px;\n}\n\n.styles_contentWrapper__229n6 hr {\n  margin-top: 0px;\n  border-color: var(--light-grey);\n}\n";
var styles$l = {"accordion":"styles_accordion__lUnVt","accordionHeader":"styles_accordionHeader__1D-Eg","iconUp":"styles_iconUp__2mBOd","iconDown":"styles_iconDown__1DoeY","contentWrapper":"styles_contentWrapper__229n6"};
styleInject(css$p);

var CreateAccordion =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CreateAccordion, _React$Component);

  function CreateAccordion(props) {
    var _this;

    _classCallCheck(this, CreateAccordion);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAccordion).call(this));
    _this.state = {
      contentVisible: props.startOpen
    };
    return _this;
  }

  _createClass(CreateAccordion, [{
    key: "_toggleContent",
    value: function _toggleContent(viewContent) {
      this.setState({
        contentVisible: !viewContent
      });
    }
  }, {
    key: "_renderContent",
    value: function _renderContent(props) {
      return React.createElement("div", {
        className: styles$l.contentWrapper
      }, this.props.content != undefined && React.createElement(Markdown, {
        escapeHtml: false,
        source: this.props.content
      }), this.props.jsx != undefined && React.createElement("div", null, this.props.jsx));
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      var divStyle = {
        maxWidth: this.props.maxWidth,
        borderColor: Colors[this.props.borderColor]
      };
      var color = {
        color: Colors[this.props.textColor]
      };

      var accesibilityProps = _defineProperty({}, "aria-hidden", true);

      if (this.props.toggleLabels && !this.state.contentVisible) {
        accesibilityProps["aria-hidden"] = false;
        accesibilityProps["aria-label"] = this.props.toggleLabels[0];
      } else if (this.props.toggleLabels && this.state.contentVisible) {
        accesibilityProps["aria-hidden"] = false;
        accesibilityProps["aria-label"] = this.props.toggleLabels[1];
      }

      return React.createElement("span", {
        role: "group",
        "aria-labelledby": this.props["aria-labelledby"],
        "aria-describedby": this.props["aria-describedby"]
      }, React.createElement("div", {
        className: styles$l.accordion,
        style: divStyle
      }, React.createElement("button", {
        disabled: this.props.locked,
        "aria-labelledby": "".concat(this.props["aria-labelledby"], "_toggle ").concat(this.props["aria-labelledby"]),
        "aria-expanded": this.state.contentVisible,
        className: styles$l.accordionHeader,
        onClick: function onClick() {
          return _this2._toggleContent(_this2.state.contentVisible);
        }
      }, React.createElement(FontAwesomeIcon, _extends({
        id: "".concat(this.props["aria-labelledby"], "_toggle")
      }, accesibilityProps, {
        icon: ["fas", "sort-down"],
        className: cx(styles$l.iconUp, this.state.contentVisible && styles$l.iconDown)
      })), React.createElement("h5", {
        style: color
      }, this.props.title)), this.state.contentVisible && this._renderContent()));
    }
  }]);

  return CreateAccordion;
}(React.Component);

function Accordion(props) {
  var _React$createElement;

  return React.createElement(CreateAccordion, (_React$createElement = {
    maxWidth: props.maxWidth,
    "aria-labelledby": props["aria-labelledby"],
    "aria-describedby": props["aria-describedby"],
    locked: props.locked
  }, _defineProperty(_React$createElement, "maxWidth", props.maxWidth), _defineProperty(_React$createElement, "borderColor", props.borderColor), _defineProperty(_React$createElement, "textColor", props.textColor), _defineProperty(_React$createElement, "title", props.title), _defineProperty(_React$createElement, "content", props.content), _defineProperty(_React$createElement, "toggleLabels", props.toggleLabels), _defineProperty(_React$createElement, "jsx", props.jsx), _defineProperty(_React$createElement, "startOpen", props.startOpen), _React$createElement));
}
Accordion.propTypes = {
  maxWidth: PropTypes.number,
  borderColor: PropTypes.oneOf(['red', 'green', 'blue', 'yellow', 'navy', 'white']),
  textColor: PropTypes.oneOf(['red', 'green', 'blue', 'yellow', 'navy', 'white']),
  title: PropTypes.node,
  content: PropTypes.node
};

var css$q = "/* table option*/\n\n.styles_scoreTable__dTn-S {\n  border-collapse: separate;\n  border-spacing: 2px 0px;\n  border-radius: 6px;\n}\n\n.styles_scoreTable__dTn-S td {\n  padding: 3px 3px 1px 3px;\n  min-width: 30px;\n  text-align: center;\n}\n\n.styles_borderRow__2mDke td {\n  padding: 1px;\n}\n\n.styles_scoreTable__dTn-S td:first-child {\n  text-align: right;\n}\n\n.styles_scoreTable__dTn-S th:nth-child(2) {\n  background-color: var(--light-blue);\n  border-radius: 6px 6px 0 0;\n}\n\n.styles_scoreTable__dTn-S th:nth-child(3) {\n  background-color: var(--light-green);\n  border-radius: 6px 6px 0 0;\n}\n\n.styles_scoreTable__dTn-S th:nth-child(4) {\n  background-color: var(--light-red);\n  border-radius: 6px 6px 0 0;\n}\n\n.styles_scoreTable__dTn-S th:nth-child(5) {\n  background-color: var(--light-yellow);\n  border-radius: 6px 6px 0 0;\n}\n\n.styles_scoreTable__dTn-S td:nth-child(2) {\n  border-left: 1px solid var(--light-blue);\n  border-right: 1px solid var(--light-blue);\n}\n\n.styles_scoreTable__dTn-S td:nth-child(3) {\n  border-left: 1px solid var(--light-green);\n  border-right: 1px solid var(--light-green);\n}\n\n.styles_scoreTable__dTn-S td:nth-child(4) {\n  border-left: 1px solid var(--light-red);\n  border-right: 1px solid var(--light-red);\n}\n\n.styles_scoreTable__dTn-S td:nth-child(5) {\n  border-left: 1px solid var(--light-yellow);\n  border-right: 1px solid var(--light-yellow);\n}\n\n.styles_borderRow__2mDke .styles_A__3WH8B {\n  border-left: 1px solid var(--light-blue);\n  border-right: 1px solid var(--light-blue);\n  border-bottom: 1px solid var(--light-blue);\n  border-radius: 0 0 6px 6px;\n}\n\n.styles_borderRow__2mDke .styles_B__34SRj {\n  border-left: 1px solid var(--light-green);\n  border-right: 1px solid var(--light-green);\n  border-bottom: 1px solid var(--light-green);\n  border-radius: 0 0 6px 6px;\n}\n\n.styles_borderRow__2mDke .styles_C__35udV {\n  border-left: 1px solid var(--light-red);\n  border-right: 1px solid var(--light-red);\n  border-bottom: 1px solid var(--light-red);\n  border-radius: 0 0 6px 6px;\n}\n\n.styles_borderRow__2mDke .styles_D__2-rtj {\n  border-left: 1px solid var(--light-yellow);\n  border-right: 1px solid var(--light-yellow);\n  border-bottom: 1px solid var(--light-yellow);\n  border-radius: 0 0 6px 6px;\n}\n";
var styles$m = {"scoreTable":"styles_scoreTable__dTn-S","borderRow":"styles_borderRow__2mDke","A":"styles_A__3WH8B","B":"styles_B__34SRj","C":"styles_C__35udV","D":"styles_D__2-rtj"};
styleInject(css$q);

function ScoreTable(props) {
  var preferenceCode = _.values(props.preferenceCode).map(function (score) {
    return score == 0 ? 1 : score;
  });

  var profileScores = _.values(props.profileScores);

  var underPressure = _.values(props.underPressure);

  var customScores = props.scores && props.scores.map(function (score) {
    return {
      title: score.title,
      scores: _.values(_.omit(score, ["title"]))
    };
  });
  var scores = customScores || [{
    title: props.preferenceCodeTitle,
    scores: preferenceCode
  }, {
    title: props.profileScoreTitle,
    scores: profileScores
  }, {
    title: props.underPressureTitle,
    scores: underPressure
  }].filter(function (score) {
    return score.scores != undefined;
  });
  return React.createElement("table", {
    className: styles$m.scoreTable
  }, React.createElement("tr", null, React.createElement("th", null), React.createElement("th", {
    className: styles$m.A
  }, "A"), React.createElement("th", {
    className: styles$m.B
  }, "B"), React.createElement("th", {
    className: styles$m.C
  }, "C"), React.createElement("th", {
    className: styles$m.D
  }, "D")), scores.map(function (score) {
    return React.createElement("tr", null, React.createElement("td", null, score.title), score.scores.map(function (s, i) {
      return React.createElement("td", {
        key: i
      }, s);
    }));
  }), React.createElement("tr", {
    className: styles$m.borderRow
  }, React.createElement("td", null), React.createElement("td", {
    className: styles$m.A
  }), React.createElement("td", {
    className: styles$m.B
  }), React.createElement("td", {
    className: styles$m.C
  }), React.createElement("td", {
    className: styles$m.D
  })));
}

var css$r = ".styles_copyright__uVFQp {\n  font-size: 0.8rem;\n  padding: 10px;\n}\n";
var styles$n = {"copyright":"styles_copyright__uVFQp"};
styleInject(css$r);

function index$5 () {
  var year = new Date().getFullYear();
  return React.createElement("p", {
    className: styles$n.copyright
  }, "\xA9 ", year, " Herrmann Global, LLC");
}

var css$s = ".styles_quadLabelContainer__1Nyv8{\n  display: flex;\n  align-items: center;\n  max-width: 300px;\n  width: 100%;\n  flex-direction: row;\n  border: 3px solid black\n}\n\n.styles_smallSize__14Ix0 {\n  width: 73px;\n}\n\n.styles_quadLabel__31P5C{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n\n.styles_quadLabel__31P5C h4 {\n  font-size: 1rem;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n}\n\n.styles_letter__2YHms {\n  font-weight: bold;\n  color: white;\n  margin: 0px;\n  text-align: center;\n  font-size: 1.6rem;\n  padding: 5px 10px;\n}\n\n.styles_A__1qNeC.styles_quadLabelContainer__1Nyv8 { border-color: var(--blue); }\n.styles_B__2dV4v.styles_quadLabelContainer__1Nyv8 { border-color: var(--green); }\n.styles_C__2TDVX.styles_quadLabelContainer__1Nyv8 { border-color: var(--red); }\n.styles_D__2UszA.styles_quadLabelContainer__1Nyv8 { border-color: var(--yellow); }\n\n.styles_A__1qNeC .styles_letter__2YHms { background-color: var(--blue); }\n.styles_B__2dV4v .styles_letter__2YHms { background-color: var(--green); }\n.styles_C__2TDVX .styles_letter__2YHms { background-color: var(--red); }\n.styles_D__2UszA .styles_letter__2YHms { background-color: var(--yellow); }\n\n.styles_A__1qNeC h4 { color: var(--blue); }\n.styles_B__2dV4v h4 { color: var(--green); }\n.styles_C__2TDVX h4 { color: var(--red); }\n.styles_D__2UszA h4 { color: var(--yellow); }\n\n.styles_quadLabelContainer__1Nyv8 svg {\n  width: 25px;\n  padding: 0 5px;\n}\n\n.styles_quadLabelContainer__1Nyv8.styles_quadLast__2mhXK {\n  flex-direction: row-reverse;\n}\n\n@media only screen and (max-width: 500px)   {\n  .styles_quadLabel__31P5C h4 {\n    font-size: 0.8rem;\n    padding: 0;\n  }\n}\n";
var styles$o = {"quadLabelContainer":"styles_quadLabelContainer__1Nyv8","smallSize":"styles_smallSize__14Ix0","quadLabel":"styles_quadLabel__31P5C","letter":"styles_letter__2YHms","A":"styles_A__1qNeC","B":"styles_B__2dV4v","C":"styles_C__2TDVX","D":"styles_D__2UszA","quadLast":"styles_quadLast__2mhXK"};
styleInject(css$s);

var QuadrantLabel =
/*#__PURE__*/
function (_React$Component) {
  _inherits(QuadrantLabel, _React$Component);

  function QuadrantLabel() {
    _classCallCheck(this, QuadrantLabel);

    return _possibleConstructorReturn(this, _getPrototypeOf(QuadrantLabel).apply(this, arguments));
  }

  _createClass(QuadrantLabel, [{
    key: "render",
    value: function render() {
      var letterOnRight = this.props.letterOnRight;
      var letter$$1 = this.props.letter;
      return React.createElement("div", {
        className: cx(this.props.content == undefined && styles$o.smallSize, styles$o.quadLabelContainer, styles$o[letter$$1], this.props.letter == true && styles$o.quadLast),
        key: letter$$1
      }, React.createElement("h3", {
        className: cx(styles$o.letter, styles$o[letter$$1])
      }, letter$$1), React.createElement("div", {
        "class": styles$o.iconWrapper
      }, React.createElement(QuadIcon, {
        quad: this.props.letter,
        maxwidth: "30"
      })), this.props.content && React.createElement("div", {
        className: cx(styles$o.quadLabel, styles$o[letter$$1])
      }, React.createElement("h4", null, " ", this.props.content, " ")));
    }
  }]);

  return QuadrantLabel;
}(React.Component);

var css$t = ".styles_grid__11W6V {\n  display: grid;\n  width: 100%;\n  grid-template-columns: 50% 50%;\n  grid-gap: 5px;\n}\n\n.styles_grid__11W6V div {\n  width: auto;\n}\n\n.styles_D__NYykl {\n  grid-column: 2;\n  grid-row: 1;\n}\n\n@media (max-width: 600px) {\n  .styles_grid__11W6V {\n    grid-template-columns: 100%;\n  }\n\n  .styles_D__NYykl {\n    grid-column: 1;\n    grid-row: 4;\n  }\n}\n";
var styles$p = {"grid":"styles_grid__11W6V","D":"styles_D__NYykl"};
styleInject(css$t);

function Walkaround(props) {
  var maxWidth = {
    maxWidth: props.maxWidth + 'px'
  };
  return React.createElement("div", {
    className: styles$p.grid,
    style: maxWidth
  }, React.createElement(Tile, {
    quad: "A"
  }, typeof props.A == 'string' ? React.createElement(Markdown, {
    escapeHtml: false,
    source: props.A
  }) : React.createElement("div", null, props.A)), React.createElement(Tile, {
    quad: "B"
  }, typeof props.B == 'string' ? React.createElement(Markdown, {
    escapeHtml: false,
    source: props.B
  }) : React.createElement("div", null, props.B)), React.createElement(Tile, {
    quad: "C"
  }, typeof props.C == 'string' ? React.createElement(Markdown, {
    escapeHtml: false,
    source: props.C
  }) : React.createElement("div", null, props.C)), React.createElement(Tile, {
    quad: "D",
    className: styles$p.D
  }, typeof props.D == 'string' ? React.createElement(Markdown, {
    escapeHtml: false,
    source: props.D
  }) : React.createElement("div", null, props.D)));
}

var css$u = ".styles_switch__38oL_ {\n\tposition: relative;\n  display: block;\n\twidth: 75px !important;\n\theight: 20px;\n\tpadding: 3px;\n\tmargin: 0;\n\tbackground: FFF;\n\tborder-radius: 6px;\n\tcursor: pointer;\n  border: 1px solid var(--light-grey);\n}\n.styles_switchInput__2Y8bZ {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\topacity: 0;\n}\n.styles_switchLabel__23Kge {\n\tposition: relative;\n\tdisplay: block;\n\theight: inherit;\n  font-family: \"Proxima Nova\", sans-serif;\n\tfont-size: 0.9rem;\n  letter-spacing: 0.1px;\n  font-weight: 300;\n\tbackground: white;\n}\n.styles_switchLabel__23Kge:before, .styles_switchLabel__23Kge:after {\n\tposition: absolute;\n\ttop: 50%;\n\tmargin-top: -.5em;\n\tline-height: 1;\n\ttransition: inherit;\n}\n.styles_switchLabel__23Kge:before {\n\tcontent: attr(data-off);\n\tright: 5px;\n\tcolor: var(--dark-grey);\n}\n.styles_switchLabel__23Kge:after {\n\tcontent: attr(data-on);\n\tleft: 5px;\n\tcolor: var(--dark-grey);\n\topacity: 0;\n}\n.styles_switchInput__2Y8bZ:checked ~ .styles_switchLabel__23Kge {\n\tbackground: white;\n}\n.styles_switchInput__2Y8bZ:checked ~ .styles_switchLabel__23Kge:before {\n\topacity: 0;\n}\n.styles_switchInput__2Y8bZ:checked ~ .styles_switchLabel__23Kge:after {\n\topacity: 1;\n}\n.styles_switchHandle__3Anwd {\n\tposition: absolute;\n\ttop: 3px;\n\tleft: 3px;\n\twidth: 20px;\n\theight: 20px;\n\tbackground: var(--green);\n\tborder-radius: 6px;\n}\n\n.styles_switchInput__2Y8bZ:checked ~ .styles_switchHandle__3Anwd {\n\tleft: 58px;\n}\n\n.styles_switchLabel__23Kge, .styles_switchHandle__3Anwd {\n\ttransition: All 0.3s ease;\n\t-webkit-transition: All 0.3s ease;\n\t-moz-transition: All 0.3s ease;\n\t-o-transition: All 0.3s ease;\n}\n";
var styles$q = {"switch":"styles_switch__38oL_","switchInput":"styles_switchInput__2Y8bZ","switchLabel":"styles_switchLabel__23Kge","switchHandle":"styles_switchHandle__3Anwd","$switch$":"styles_switch__38oL_"};
styleInject(css$u);

var Switch =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Switch, _React$Component);

  function Switch(props) {
    var _this;

    _classCallCheck(this, Switch);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Switch).call(this));
    _this.state = {
      isChecked: props.checked
    };
    return _this;
  }

  _createClass(Switch, [{
    key: "check",
    value: function check(e) {
      this.setState({
        isChecked: !this.state.isChecked
      });
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      return React.createElement("label", {
        className: styles$q["switch"]
      }, this.state.isChecked && React.createElement("input", {
        className: styles$q.switchInput,
        type: "checkbox",
        onClick: function onClick(e) {
          return _this2.check();
        },
        onChange: this.props.onChange,
        checked: true
      }), !this.state.isChecked && React.createElement("input", {
        className: styles$q.switchInput,
        type: "checkbox",
        onClick: function onClick(e) {
          return _this2.check();
        },
        onChange: this.props.onChange
      }), React.createElement("span", {
        className: styles$q.switchLabel,
        "data-on": this.props.pos1Label,
        "data-off": this.props.pos2Label
      }), React.createElement("span", {
        className: styles$q.switchHandle
      }));
    }
  }]);

  return Switch;
}(React.Component);
Switch.propTypes = {
  pos1Label: PropTypes.string,
  pos2Label: PropTypes.string
};

var DecoderRings =
/*#__PURE__*/
function (_Component) {
  _inherits(DecoderRings, _Component);

  function DecoderRings(props) {
    var _this;

    _classCallCheck(this, DecoderRings);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DecoderRings).call(this, props));
    _this.ring1 = null;
    _this.ring2 = null;
    _this.ring3 = null;
    _this.ring4 = null;
    _this.logoTween = null;
    return _this;
  }

  _createClass(DecoderRings, [{
    key: "componentDidMount",
    value: function componentDidMount(props) {
      this.logoTween = new TimelineMax({
        repeat: this.props.repeat
      }).to(this.ring1, .5, {
        rotation: -60,
        ease: 'power1.easeInOut',
        repeat: 1,
        yoyo: true,
        transformOrigin: 'center'
      }, 0.5).to(this.ring2, 0.75, {
        rotation: 90,
        ease: 'back.easeInOut',
        repeat: 1,
        yoyo: true,
        transformOrigin: 'center'
      }, 0.5).to(this.ring3, 0.75, {
        rotation: -180,
        ease: 'back.easeInOut',
        repeat: 1,
        yoyo: true,
        transformOrigin: 'center'
      }, 0.5).to(this.ring4, .90, {
        rotation: 360,
        ease: 'power0.easeInOut',
        repeat: 1,
        transformOrigin: 'center'
      }, 0.5).to(this.ring1, 0.2, {
        ease: 'power0.easeInOut',
        scaleX: 0.5,
        scaleY: 0.5
      }, 2.5).to(this.ring2, 0.2, {
        ease: 'power0.easeInOut',
        scaleX: 0.6,
        scaleY: 0.6
      }, 2.5).to(this.ring3, 0.2, {
        ease: 'power0.easeInOut',
        scaleX: 0.7,
        scaleY: 0.7
      }, 2.5).to(this.ring4, 0.5, {
        ease: 'back.easeInOut',
        scaleX: 1,
        scaleY: 1
      }, 2.7).to(this.ring3, 0.5, {
        ease: 'back.easeInOut',
        scaleX: 1,
        scaleY: 1
      }, 2.7).to(this.ring2, 0.5, {
        ease: 'back.easeInOut',
        scaleX: 1,
        scaleY: 1
      }, 2.7).to(this.ring1, 0.5, {
        ease: 'back.easeInOut',
        scaleX: 1,
        scaleY: 1
      }, 2.7);
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      var maxWidth = {
        maxWidth: this.props.maxWidth + 'px',
        width: '100%'
      };
      return React.createElement("svg", {
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg",
        x: "0px",
        y: "0px",
        viewBox: "0 0 1366 768",
        style: maxWidth
      }, React.createElement("g", null, React.createElement("g", {
        ref: function ref(x) {
          return _this2.ring1 = x;
        }
      }, React.createElement("path", {
        fill: "#02C2F4",
        d: "M687.5,114.8l0-77.8C499.4,37,347,189.4,347,377.5h73.8C423,232,541.5,114.8,687.5,114.8 C687.5,114.8,687.5,114.8,687.5,114.8z"
      }), React.createElement("path", {
        fill: "#FED903",
        d: "M687.5,37l0,77.8c0,0,0,0,0,0c146,0,264.5,117.2,266.7,262.7h73.8C1028,189.4,875.5,37,687.5,37z"
      }), React.createElement("path", {
        fill: "#FD023C",
        d: "M954.2,377.5c0,1.3,0.1,2.7,0.1,4c0,147.3-119.4,266.7-266.7,266.7c0,0,0,0,0,0l0,69.7 c188.1,0,340.5-152.4,340.5-340.5H954.2z"
      }), React.createElement("path", {
        fill: "#3AC581",
        d: "M687.5,648.3c-147.3,0-266.7-119.4-266.7-266.7c0-1.4,0-2.7,0.1-4H347C347,565.6,499.5,718,687.5,718 L687.5,648.3C687.5,648.3,687.5,648.3,687.5,648.3z"
      })), React.createElement("g", {
        ref: function ref(x) {
          return _this2.ring2 = x;
        }
      }, React.createElement("path", {
        fill: "#02C2F4",
        d: "M688,207.5l0-74.5c0,0,0,0,0,0c-136.3,0-246.9,109.5-249,245.2h75C515.8,283.6,593,207.5,688,207.5 C688,207.5,688,207.5,688,207.5z"
      }), React.createElement("path", {
        fill: "#FED903",
        d: "M688,133C688,133,688,133,688,133l0,74.5c0,0,0,0,0,0c95,0,172.2,76.1,174,170.7h75 C934.9,242.5,824.3,133,688,133z"
      }), React.createElement("path", {
        fill: "#FD023C",
        d: "M937,378.2h-75c0,1.1,0,2.2,0,3.3c0,96.1-77.9,174-174,174c0,0,0,0,0,0l0,75.5c0,0,0,0,0,0 c137.5,0,249-111.5,249-249C937,380.7,937,379.5,937,378.2z"
      }), React.createElement("path", {
        fill: "#3AC581",
        d: "M688,555.5c-96.1,0-174-77.9-174-174c0-1.1,0-2.2,0-3.3h-75c0,1.3,0,2.5,0,3.8c0,137.5,111.5,249,249,249 c0,0,0,0,0,0L688,555.5C688,555.5,688,555.5,688,555.5z"
      })), React.createElement("g", {
        ref: function ref(x) {
          return _this2.ring3 = x;
        }
      }, React.createElement("path", {
        fill: "#02C2F4",
        d: "M688,296c0.1,0,0.2,0,0.3,0l0-72c0,0,0,0,0,0c-86.1,0-156.1,69-157.7,154.8H604C604.7,333,642,296,688,296z"
      }), React.createElement("path", {
        fill: "#FED903",
        d: "M772,378.8h74C844.4,293,774.4,224,688.2,224c0,0,0,0,0,0l0,72C734.1,296.1,771.3,333,772,378.8z"
      }), React.createElement("path", {
        fill: "#FD023C",
        d: "M846,378.8h-74c0,0.4,0,0.8,0,1.2c0,46.3-37.5,83.9-83.8,84l0,75.5c0,0,0,0,0,0 c87.1,0,157.8-70.6,157.8-157.8C846,380.8,846,379.8,846,378.8z"
      }), React.createElement("path", {
        fill: "#3AC581",
        d: "M604,380c0-0.4,0-0.8,0-1.2h-73.5c0,1,0,2,0,3c0,87.1,70.6,157.8,157.8,157.8c0,0,0,0,0,0l0-75.5 c-0.1,0-0.2,0-0.3,0C641.6,464,604,426.4,604,380z"
      })), React.createElement("g", {
        ref: function ref(x) {
          return _this2.ring4 = x;
        }
      }, React.createElement("path", {
        fill: "#02C2F4",
        d: "M688.2,312c-0.1,0-0.1,0-0.2,0c-37.2,0-67.4,29.9-68,67h68.2L688.2,312z"
      }), React.createElement("path", {
        fill: "#FED903",
        d: "M756,379c-0.5-37-30.6-66.9-67.8-67l0,67H756z"
      }), React.createElement("path", {
        fill: "#FD023C",
        d: "M756,380c0-0.3,0-0.7,0-1h-67.8l0,69C725.7,447.9,756,417.5,756,380z"
      }), React.createElement("path", {
        fill: "#3AC581",
        d: "M620,379c0,0.3,0,0.7,0,1c0,37.6,30.4,68,68,68c0.1,0,0.1,0,0.2,0l0-69H620z"
      }))));
    }
  }]);

  return DecoderRings;
}(Component);

var Sparkle =
/*#__PURE__*/
function (_Component) {
  _inherits(Sparkle, _Component);

  function Sparkle(props) {
    var _this;

    _classCallCheck(this, Sparkle);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sparkle).call(this, props));
    _this.group1red = null;
    _this.group1blue = null;
    _this.group1green = null;
    _this.group1yellow = null;
    _this.group2red = null;
    _this.group2blue = null;
    _this.group2green = null;
    _this.group2yellow = null;
    _this.sparkleTween = null;
    return _this;
  }

  _createClass(Sparkle, [{
    key: "componentDidMount",
    value: function componentDidMount(props) {
      var delay;

      if (this.props.delay) {
        delay = this.props.delay;
      } else {
        delay = 0;
      }

      this.sparkleTween = new TimelineMax({
        repeat: this.props.repeat
      }).delay(delay).to(this.group1red, 0, {
        opacity: 1
      }, 0).to(this.group1red, 0.3, {
        attr: {
          x1: 430
        },
        ease: 'power2.easeInOut'
      }, 0).to(this.group1red, 0.3, {
        attr: {
          x2: 430
        },
        ease: 'power2.easeInOut'
      }, 0.2).to(this.group1red, 0, {
        opacity: 0
      }, 0.5).to(this.group1green, 0, {
        opacity: 1
      }, 0).to(this.group1green, 0.3, {
        attr: {
          y1: 430
        },
        ease: 'power2.easeInOut'
      }, 0).to(this.group1green, 0.3, {
        attr: {
          y2: 430
        },
        ease: 'power2.easeInOut'
      }, 0.2).to(this.group1green, 0, {
        opacity: 0
      }, 0.5).to(this.group1blue, 0, {
        opacity: 1
      }, 0).to(this.group1blue, 0.3, {
        attr: {
          x2: 8
        },
        ease: 'power2.easeInOut'
      }, 0).to(this.group1blue, 0.3, {
        attr: {
          x1: 8
        },
        ease: 'power2.easeInOut'
      }, 0.2).to(this.group1blue, 0, {
        opacity: 0
      }, 0.5).to(this.group1yellow, 0, {
        opacity: 1
      }, 0).to(this.group1yellow, 0.3, {
        attr: {
          y1: 8
        },
        ease: 'power2.easeInOut'
      }, 0).to(this.group1yellow, 0.3, {
        attr: {
          y2: 8
        },
        ease: 'power2.easeInOut'
      }, 0.2).to(this.group1yellow, 0, {
        opacity: 0
      }, 0.5).to(this.group2red, 0, {
        opacity: 1
      }, 0.3).to(this.group2red, 0.2, {
        attr: {
          x1: 66.6,
          y1: 73.7
        },
        ease: 'power2.easeInOut'
      }, 0.3).to(this.group2red, 0.2, {
        attr: {
          x2: 66.6,
          y2: 73.7
        },
        ease: 'power2.easeInOut'
      }, 0.4).to(this.group2red, 0, {
        opacity: 0
      }, 0.6).to(this.group2green, 0, {
        opacity: 1
      }, 0.3).to(this.group2green, 0.2, {
        attr: {
          x1: 364.7,
          y1: 73.3
        },
        ease: 'power2.easeInOut'
      }, 0.3).to(this.group2green, 0.2, {
        attr: {
          x2: 364.7,
          y2: 73.3
        },
        ease: 'power2.easeInOut'
      }, 0.4).to(this.group2green, 0, {
        opacity: 0
      }, 0.6).to(this.group2blue, 0, {
        opacity: 1
      }, 0.3).to(this.group2blue, 0.2, {
        attr: {
          x2: 364.8,
          y2: 372.5
        },
        ease: 'power2.easeInOut'
      }, 0.3).to(this.group2blue, 0.2, {
        attr: {
          x1: 364.8,
          y1: 372.5
        },
        ease: 'power2.easeInOut'
      }, 0.4).to(this.group2blue, 0, {
        opacity: 0
      }, 0.6).to(this.group2yellow, 0, {
        opacity: 1
      }, 0.3).to(this.group2yellow, 0.2, {
        attr: {
          y1: 370.5,
          x1: 65.8
        },
        ease: 'power2.easeInOut'
      }, 0.3).to(this.group2yellow, 0.2, {
        attr: {
          y2: 370.5,
          x2: 65.8
        },
        ease: 'power2.easeInOut'
      }, 0.4).to(this.group2yellow, 0, {
        opacity: 0
      }, 0.6);
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      var maxWidth = {
        maxWidth: this.props.maxWidth + 'px',
        width: '100%'
      };
      return React.createElement("svg", _defineProperty({
        version: "1.1",
        id: "Layer_1",
        xmlns: "http://www.w3.org/2000/svg",
        xlink: "http://www.w3.org/1999/xlink",
        x: "0px",
        y: "0px",
        viewBox: "0 0 438.2 437.5",
        style: "enable-background:new 0 0 438.2 437.5;"
      }, "style", maxWidth), React.createElement("g", {
        id: "Group2"
      }, React.createElement("line", {
        ref: function ref(x) {
          return _this2.group2green = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#3AC581",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "250.8",
        y1: "187.2",
        x2: "250.8",
        y2: "187.2"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group2yellow = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#FED903",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "179.7",
        y1: "256.7",
        x2: "179.7",
        y2: "256.7"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group2blue = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#02C2F4",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "251",
        y1: "258.7",
        x2: "251",
        y2: "258.7"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group2red = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#FD023C",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "180.5",
        y1: "187.5",
        x2: "180.5",
        y2: "187.5"
      })), React.createElement("g", {
        id: "Group1"
      }, React.createElement("line", {
        ref: function ref(x) {
          return _this2.group1yellow = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#FED903",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "218.5",
        y1: "169",
        x2: "218.5",
        y2: "169"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group1green = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#3AC581",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "217.3",
        y1: "268.5",
        x2: "217.3",
        y2: "268.5"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group1red = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#FD023C",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "269.2",
        y1: "219.5",
        x2: "269.2",
        y2: "219.5"
      }), React.createElement("line", {
        ref: function ref(x) {
          return _this2.group1blue = x;
        },
        opacity: "0",
        fill: "#FFFFFF",
        stroke: "#02C2F4",
        strokeWidth: "16",
        strokeLinecap: "round",
        strokeMiterlimit: "10",
        x1: "169",
        y1: "219",
        x2: "169",
        y2: "219"
      })));
    }
  }]);

  return Sparkle;
}(Component);

var BrainyBunch =
/*#__PURE__*/
function (_Component) {
  _inherits(BrainyBunch, _Component);

  function BrainyBunch() {
    _classCallCheck(this, BrainyBunch);

    return _possibleConstructorReturn(this, _getPrototypeOf(BrainyBunch).apply(this, arguments));
  }

  _createClass(BrainyBunch, [{
    key: "render",
    value: function render(props) {
      var maxWidth = {
        maxWidth: this.props.maxWidth + 'px',
        width: '100%'
      };
      return React.createElement("svg", _defineProperty({
        version: "1.1",
        id: "Layer_1",
        x: "0px",
        y: "0px",
        viewBox: "0 0 1150 900",
        style: "enable-background:new 0 0 1150 900;"
      }, "style", maxWidth), React.createElement("g", {
        id: "blue"
      }, React.createElement("path", {
        fill: "#030202",
        d: "M515.3,306.7c-46-6-90.1,8.8-85.8,40.2c0,0,5.6,39,7.8,54.8c-14.6-1.2-27.6,8.2-29.5,21.8 c-1.6,11.3,5,21.9,15.4,26.9c-22.2,19.3-2.7,40.2-2.7,40.2c18.7,17.9,42.6-11.1,42.6-11.1c15.1,48.8,53.7,2.1,53.7,2.1l18.5-105.5 C550.8,305,515.3,306.7,515.3,306.7z"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M523.6,407.2L523.6,407.2c-1.9,0-3.4-1.6-3.3-3.5l0,0c0-1.9,1.6-3.4,3.5-3.3h0c1.9,0,3.4,1.6,3.3,3.5l0,0 C527,405.7,525.4,407.2,523.6,407.2z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M519.2,434.7c-12.8-5.6-38.5,13.7-8.9,34.1l47,32.6c0,0,29.2,8.7,1.9-26.6 C559.2,474.9,533.4,440.2,519.2,434.7z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M525.8,420.2c12.4,39.7,27.5,86.3,40.9,80.2c0,0,27-11.6-34.7-85.5C528.9,411.3,524.3,415.6,525.8,420.2z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M518.4,430.4c1.7,1.3,4.1,1.4,6.2,0.8c2.1-0.6,3.9-1.8,5.6-3c2.7-1.9,5.4-4,6.8-7c1.7-3.6,1.2-7.9,0.7-11.9 c-0.3-2.3-0.6-4.6-1-6.9c-0.1-1-0.3-2.1-0.9-2.9c-0.5-0.8-1.3-1.4-2.1-2c-2.5-1.8-5.1-3.7-7.6-5.5c-0.9-0.7-1.9-1.4-3.1-1.6 c-3.2-0.6-5.6,2.5-7.9,4.8c-1.8,1.7-3.9,3.1-6.2,3.9c-0.5,0.2-1,0.4-1.3,0.8c-0.8,1.2,1,2.5,2.4,2.6c2.8,0.3,5.6-0.6,7.8-2.5 c0.7-0.1,0.3,1.2-0.3,1.5c-2,1-4.3,1.2-6.5,1.7c-2.2,0.5-4.4,1.5-5.5,3.4c-1.7,2.9,0.4,7.2,3.7,7.7c-1.1,2.5,0.6,5.9,3.4,6.4 c-0.6-0.1,0,2.4,0.1,2.6c0.5,1,1.6,1.3,2.3,2.1C516.5,427,516.6,429.2,518.4,430.4z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M429.3,469.3c-3.6,22.4-5.8,44.9-6.6,67.6c-0.1,3.5-0.2,7.2,1.4,10.4s5.5,5.4,8.7,4c2.1-0.9,3.4-3,4.4-5 c12.2-22.8,15.9-49.1,18.2-74.9c0.7-8.1,1-27-11.5-26.6C433.5,445,430.5,461.5,429.3,469.3z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M422.8,539.7c-1.5,2.6-2,5.6-2.5,8.5c-1.8,11.5-6.9,40.6-6.2,52.2c0.3,5.3,1,10.8,3.4,15.6 c4-0.2,6.4-4.4,7.9-8.1c4.5-11.1,13.6-42.3,14.9-54.3C441.1,544.8,430.9,525.4,422.8,539.7z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M390.7,617.5c-1.1,0.7-2.4,1.8-2.1,3c0.3,1.5,2.3,1.7,3.8,1.5c5.1-0.6,10.1-1.6,15-3 c-5.3,7.6-8.8,16.3-10.1,25.4c-0.3,1.8-0.2,4.2,1.6,4.8c4.2-7.2,8.3-14.4,12.5-21.5c-1.1,7.1-1.8,14.2-2.1,21.3 c-0.1,2,0.6,4.8,2.6,4.6c1.6-0.1,2.3-2,2.7-3.5c1.6-6.8,3.1-13.6,4.7-20.4c2.2,7.3,5.4,14.3,9.4,20.8c1.9,0.1,2.2-2.7,1.7-4.5 c-1.8-7.3-3.6-14.5-5.4-21.8c4.2,3.6,8.8,6.7,13.8,9.2c0.9,0.5,2.4,0.8,2.9-0.2c0.3-0.6,0-1.3-0.3-1.8c-4.5-8.3-13-20.4-23-22.9 C409.5,606.2,397.8,613.1,390.7,617.5z"
      }), React.createElement("g", null, React.createElement("polygon", {
        fill: "#4DC7EE",
        points: "503.1,435 459.7,434.3 436.6,451.2 468.3,530.3 501.1,528.2 535.5,464.8 \t\t"
      }), React.createElement("circle", {
        fill: "#4DC7EE",
        cx: "484.7",
        cy: "529.2",
        r: "16.4"
      })), React.createElement("polyline", {
        fill: "#EDC2D3",
        points: "475.5,431.3 492.1,429.5 489.4,451.4 486.6,451.4 463.5,438.8 \t"
      }), React.createElement("g", null, React.createElement("polygon", {
        fill: "#EDC2D3",
        points: "473.6,415.1 477.2,438 492.7,435.2 489.9,412.1 \t\t"
      }), React.createElement("circle", {
        fill: "#EDC2D3",
        cx: "484.9",
        cy: "436",
        r: "7.9"
      }), React.createElement("circle", {
        fill: "#EDC2D3",
        cx: "481.7",
        cy: "413.1",
        r: "8.3"
      })), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "489.4,451.4 492.1,429.5 515.8,433.9 \t"
      }), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "485.9,451.5 475.5,431.3 454.7,441.9 \t"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M456.3,640.1c0,0,11.6,62.5,32,95.6c7.8,12.7,27.3,7.4,27.8-7.5l4-122.6C521.3,563.3,444.2,555.5,456.3,640.1z "
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M524.5,850.2c-45.3-71-44.5-106.5-34.2-124.1c6.8-11.7,24.8-7.5,25.7,6.1L524.5,850.2"
      }), React.createElement("polygon", {
        fill: "#EDC2D3",
        points: "543.9,867.6 525.5,834.8 524.9,826.3 512,828.2 514.5,841 513.8,841.6 515,843.4 517.4,856 519.3,849.8 527.4,861.8 \t"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "534.8,873 533,858.7 512,828.2 527.7,825.9 527.4,823.8 510.7,826.2 510.4,826.3 510.7,828.4 510.7,828.4 517.8,875.5 517.8,875.5 517.8,875.5 518.6,872.3 522.1,857.3 \t"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "529.3,857.4 534.8,873 564.7,869 \t"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M446.7,626.5c0,0-10.6,62.6-2.9,100.7c2.9,14.6,23.1,16.3,28.7,2.5l46-113.8 C534.1,576.7,464.4,542.9,446.7,626.5z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M440.5,849.6c-20.1-81.8-8-115.1,7.4-128.5c10.2-8.9,25.9,0.9,22.4,14L440.5,849.6"
      }), React.createElement("polygon", {
        fill: "#EDC2D3",
        points: "456.6,872.1 447,835.8 448.4,827.4 435.5,826 434.7,839.1 433.9,839.5 434.6,841.5 433.8,854.3 437.2,848.9 442,862.5 \t"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "446.4,875.1 448.2,860.8 435.5,826 451.3,827.8 451.5,825.6 434.7,823.8 434.4,823.8 434.2,825.9 434.2,825.9 429.3,873.3 429.3,873.3 429.3,873.3 430.8,870.4 438,856.8 \t"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "443.9,858 446.4,875.1 476.4,878.7 \t"
      }), React.createElement("polyline", {
        fill: "#030202",
        points: "458.1,518.1 456.9,525.1 513.5,526.1 512.1,519 \t"
      }), React.createElement("path", {
        fill: "#030202",
        d: "M416.4,674.2c33.3,16.3,71.3,22.7,108.1,18.2c1.5-0.2,3.2-0.4,4.3-1.5c1.5-1.4,1.5-3.6,1.5-5.6 c-0.1-32.7-0.2-65.4-0.3-98.1c-0.1-21.3,1.4-44-17.7-57.9c-37-26.8-73.9,6.9-81.5,43.1C428.9,582.1,410.7,671.4,416.4,674.2z"
      }), React.createElement("path", {
        fill: "#4DC7EE",
        d: "M440.3,639.8c29,10.2,59.5,12,89.9,10.2c0-12.3-0.1-24.6-0.1-37c-22.4,5.1-46,6.1-68.7,2.9 c-12.5-1.8-25.5-5-37.1-10.7c-1.5,8.2-3.1,17.1-4.5,25.7C426.4,634.4,433.2,637.4,440.3,639.8z"
      }), React.createElement("path", {
        fill: "#EDC2D3",
        d: "M492.8,424.8c0,0,23.7-1,27.1-26.2c0,0,5.2-35.2-4.8-57c-12.2-26.7-67.2-26.9-69,10.4c0,0,0.6,44.3,14.8,61.9 C472.8,426.2,482.8,425.1,492.8,424.8z"
      }), React.createElement("path", {
        fill: "#030202",
        d: "M473.8,423.4c0,0,15.2,68.6-33.1,76.2c0,0-41.8-6.5-17.1-44.5c0,0-40.9-30.3,7.3-48.5l1.2,0 c6.3,3,12,5.9,16.9,10.8C454.2,422.8,463.1,428.7,473.8,423.4z"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "432.5",
        cy: "434.6",
        r: "25.6"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M445.7,417.2L445.7,417.2c-1.9,0-3.4-1.6-3.3-3.5l0,0c0-1.9,1.6-3.4,3.5-3.3l0,0c1.9,0,3.4,1.6,3.3,3.5l0,0 C449.1,415.7,447.5,417.2,445.7,417.2z"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#ED3553",
        "stroke-width": "2.7706",
        "stroke-miterlimit": "10",
        d: "M465.4,392.9l37,5.2C502.4,398.2,484.7,426.6,465.4,392.9z"
      }), React.createElement("polyline", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.7546",
        "stroke-miterlimit": "10",
        points: "487.5,355.2 492.9,390.3 483.3,385.5 483.6,395.5 \t"
      }), React.createElement("ellipse", {
        transform: "matrix(0.9974 -7.185023e-02 7.185023e-02 0.9974 -24.8331 37.4548)",
        fill: "#030202",
        cx: "508.2",
        cy: "363.9",
        rx: "2.1",
        ry: "6.7"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.6721",
        "stroke-miterlimit": "10",
        d: "M505.2,358.1c-0.1,1.2-0.2,2.6-0.1,4.1c0.3,5.2,1.8,9.3,3.5,9.2c1.6-0.1,2.8-4.3,2.5-9.5c-0.1-1-0.2-2.1-0.3-3 "
      }), React.createElement("path", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.7546",
        "stroke-miterlimit": "10",
        d: "M496.4,353.1c0,0,10.7-8.6,20-1.3"
      }), React.createElement("path", {
        fill: "#030202",
        d: "M436.1,380.4c0,0,97.1-8.1,75.2-90.1C511.3,290.3,403,291.5,436.1,380.4z"
      })), React.createElement("g", {
        id: "green"
      }, React.createElement("path", {
        fill: "#6CBD8D",
        d: "M62.5,510.4l5.2-32.7l95.6,21.2c0,0,0,0,0,0c9.3,2.1,15.1,11.3,13,20.6c-2.9,10.2-10.7,15.2-20.6,13 c-0.1,0-0.1,0-0.2,0l0,0.1L62.5,510.4z"
      }), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "324.2,608.4 312.4,736.1 269.3,736.2 262.4,608.7 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "293.3",
        cy: "606.7",
        r: "30.9"
      }), React.createElement("circle", {
        cx: "290.9",
        cy: "734.1",
        r: "21.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "312.6,735.1 303.1,852.9 270.9,852.6 269.4,731.6 \t\t"
      }), React.createElement("circle", {
        cx: "290.9",
        cy: "734.2",
        r: "21.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "275.3,851.4 275.9,869.4 343.3,871.6 299.8,858.9 294.1,846.5 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "285.3",
        cy: "851.2",
        r: "10"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "221,608.1 219.5,736.3 262.3,740.8 282.5,614.7 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "251.9",
        cy: "609.5",
        r: "30.9"
      }), React.createElement("circle", {
        cx: "241.1",
        cy: "736.5",
        r: "21.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "219.5,734.7 214.6,852.8 246.6,856.4 262.8,736.5 \t\t"
      }), React.createElement("circle", {
        cx: "241.1",
        cy: "736.4",
        r: "21.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "240.8,852.7 241.6,870.7 174.5,877.9 216.9,862 221.7,849.2 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "230.8",
        cy: "853.2",
        r: "10"
      })), React.createElement("path", {
        fill: "#030202",
        d: "M253.7,644.7l38.3-0.3c17.6-0.1,31.7-14.4,31.7-31.9v-0.4c1.2-65.3-102.2-70-102.2,0.7l0,0 C221.5,630.5,236,644.8,253.7,644.7z"
      }), React.createElement("g", null, React.createElement("polygon", {
        fill: "#F6E1C8",
        points: "299.3,393.8 298.8,422.7 279.1,421.9 278.6,393 \t\t"
      }), React.createElement("circle", {
        fill: "#F6E1C8",
        cx: "288.9",
        cy: "421.6",
        r: "9.9"
      }), React.createElement("circle", {
        fill: "#F6E1C8",
        cx: "289",
        cy: "392.8",
        r: "10.4"
      })), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M322.4,378.3c4.6,6.3,15.5,6.8,20.7,0.9c5.2-5.9,3.2-16.4-3.9-20c-1.9-0.9-4.5-0.4-5.6,1.1 C328.4,365.5,318.2,372.2,322.4,378.3z"
      }), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M267.6,406.5c-7.2-3-10.5-11.7-10.8-19.4c-0.9-21.9-1.3-43.8-1.3-65.6c0-8.2,0.1-16.6,3.4-24.2 c13.8-32.1,54-20.6,70.8,1c18.8,24.1,6.5,58,2.9,85.6c-1.2,8.8-2.7,18.2-8.7,24.9c-6,6.7-14.2,6-24.9,3.9 C298.9,412.7,271.3,408.1,267.6,406.5z"
      }), React.createElement("path", {
        d: "M344.8,323.2l-6.3,26.9l-3.9,12.4l-3-40.1c-1.2-25-27.7-42.3-27.7-42.3C330,287.1,347.2,309.9,344.8,323.2z"
      }), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M256.4,371.3c-6.1,0.6-11.5-4.8-12.6-10.7s1.1-11.9,4-17.2c2-3.6,6.7-7.5,9.7-4.7 C264.5,345.1,273.1,369.3,256.4,371.3z"
      }), React.createElement("path", {
        d: "M251.7,285.3l14.1,26.3l-7.3,57.8l-3.6-14C254.9,355.4,229.2,292.4,251.7,285.3z"
      }), React.createElement("path", {
        d: "M251.2,294.1c-0.2-6.7,4.2-22.5,30.3-20.7c0,0,49,4.6,66.3,49.4c0,0-7.7,2.7-19,2.1c0,0-55.4-5.4-74-20.5 C251.6,301.2,251.3,295.8,251.2,294.1z"
      }), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M321.3,566.6c5.1-2.5,11.6,1,14.3,6c2.6,5,2.4,10.9,2.1,16.6c5.4,0,10.9-1,16-2.7c-1,4.6-5.3,8.4-10.1,9 c4.2,2.3,9,7.1,6.1,10.9c-0.9,1.2-2.3,1.8-3.8,2.2c-9.3,2.6-19.4-2.7-24.6-10.7c-5.1-8-6.1-17.9-5.2-27.3"
      }), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M355.1,599.2c8.2-1.1,16.3-2.1,24.5-3.2c-5.3,5.8-13.6,8.8-21.5,7.7c2.2,2.8,6.5,2.7,10.1,2.9s8.1,1.7,8.4,5.3 c-8.2,1.9-17.1,1.3-24.9-1.7c3,6.1,7.3,11.7,12.4,16.3c0.1,2.5-4.1,2-6.2,0.5c-8.2-5.7-39.2-20.8-31.3-29.4 c2.9-3.1,15.4-2.6,19.4-3.6c9.1-2.3,17.4-7.1,26.7-8.8C369.4,589.7,361.2,598.4,355.1,599.2z"
      }), React.createElement("polyline", {
        fill: "#6CBD8D",
        points: "329.9,551.8 367.4,582.6 340.7,590.4 313.1,571 \t"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M406.4,545.1L339.1,588L325,567.6l39.3-38.8C374.6,518.4,400.4,520.5,406.4,545.1z"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M406.4,545.1c0,0-20.7-66.1-64.1-113c0,0-29.1-4.3-32.2,18c-1.4,10.4,1.6,23.9,15.2,39.8 c13.6,15.9,45,52.8,45,52.8C378.7,552.3,396.7,551.3,406.4,545.1z"
      }), React.createElement("polygon", {
        fill: "#6CBD8D",
        points: "342.2,432.1 233.4,418.6 206.2,464.9 221.5,612.8 323.7,612.1 \t"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M206.2,427.5c-7.5,12.8-0.1,35.6,1.3,50.4c1.6,16.1,28-9.7,35.5-22.5c7.5-12.8,5.1-34.8-9.6-36.7 C218.4,416.7,213.7,414.7,206.2,427.5z"
      }), React.createElement("polygon", {
        fill: "#6CBD8D",
        points: "306.2,419.1 307.2,440.3 271,433.4 270.8,414.8 \t"
      }), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M150.4,528.7c-7.9-5.3-10-15.9-4.8-23.8c0,0,0.1-0.1,0.1-0.1l0,0l52.8-82.9c4.1-6.5,12-9.7,19.5-7.9l0,0 c12.2,2.9,17.8,17.1,10.9,27.6l-54.6,82.4c0,0,0,0,0,0C168.9,531.8,158.3,533.9,150.4,528.7z"
      }), React.createElement("polyline", {
        fill: "#6CBD8D",
        points: "66,461.4 52.9,505.3 83.6,514.4 86.4,467.5 \t"
      }), React.createElement("path", {
        fill: "#F6E1C8",
        d: "M29.2,469.7c5.1-5.1,12.4-8.1,19.7-8.1c2.5,0,5.2,0.5,6.8,2.4c1.6,1.9,1,5.6-1.4,6c2.9-0.7,6.2-1.4,8.7,0.4 c2.4,1.7,1.8,6.7-1.2,6.5c5.8-0.1,12.8,0.5,15.3,5.7c3,6.4-3.9,13.2-10.5,15.7c-7.6,2.8-16,3.3-23.8,1.6c-3.4-0.8-7-2.2-8.8-5.2 c-1.7-3-0.2-7.9,3.3-8.2c-4.3,0.3-8.7-0.2-12.9-1.4c0.9-2.7,2.7-5.1,5.1-6.6c-3.5,2.4-8.8-1.6-8.2-5.8c0.6-4.2,5.8-6.7,9.8-5.3"
      }), React.createElement("polyline", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.6244",
        "stroke-miterlimit": "10",
        points: "298.7,346.2 306,386.2 296.6,380.4 296.4,390.2 \t"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.3825",
        "stroke-miterlimit": "10",
        d: "M312.9,384c0,0-20.8,19-39.1-8.2"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#000000",
        "stroke-width": "4.4767",
        "stroke-linecap": "round",
        "stroke-miterlimit": "10",
        d: "M303.9,354c0,0-3.6-12.4-10-0.6"
      }), React.createElement("ellipse", {
        transform: "matrix(0.9947 -0.1027 0.1027 0.9947 -34.726 30.3638)",
        fill: "#FFFFFF",
        stroke: "#000000",
        "stroke-width": "4.4767",
        "stroke-miterlimit": "10",
        cx: "277.4",
        cy: "352.3",
        rx: "16.5",
        ry: "16.1"
      }), React.createElement("ellipse", {
        transform: "matrix(0.9947 -0.1027 0.1027 0.9947 -34.7817 34.7821)",
        fill: "#FFFFFF",
        stroke: "#000000",
        "stroke-width": "4.4767",
        "stroke-miterlimit": "10",
        cx: "320.3",
        cy: "355.1",
        rx: "16.5",
        ry: "16.1"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "265.4,334.3 292.9,336 293.3,331.2 265.8,329.5 \t"
      }), React.createElement("polygon", {
        fill: "#070808",
        points: "307.2,334.6 334.7,336.4 335,331.6 307.5,329.8 \t"
      }), React.createElement("line", {
        id: "pocket_line_1_",
        fill: "none",
        stroke: "#000000",
        "stroke-width": "2.0117",
        "stroke-miterlimit": "10",
        x1: "257.8",
        y1: "476.9",
        x2: "219.1",
        y2: "480.9"
      }), React.createElement("g", null, React.createElement("path", {
        fill: "#2EC0F0",
        d: "M246.2,477l-2.2-20.9c-0.2-2.4-2.4-4.1-4.8-3.8l0,0c-2.4,0.2-4.2,2.4-3.9,4.7l2.2,20.9"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#ED3553",
        d: "M234.5,478.2l-2.2-20.9c-0.2-2.4-2.4-4.1-4.8-3.8h0c-2.4,0.2-4.2,2.4-3.9,4.7l2.2,20.9"
      })), React.createElement("polygon", {
        fill: "#050505",
        points: "268.3,458 292.5,459 293.7,435.3 269.5,434.2 \t"
      }), React.createElement("g", null, React.createElement("polyline", {
        fill: "#050505",
        points: "280.9,447.5 295.6,569 272.8,610.1 \t\t"
      }), React.createElement("polyline", {
        fill: "#050505",
        points: "280.9,447.5 254.2,567.2 272.8,610.1 \t\t"
      }))), React.createElement("g", {
        id: "yellow"
      }, React.createElement("g", null, React.createElement("path", {
        fill: "#030202",
        d: "M925,748.2l-28.5-143.6l71.3-11.3c0,0,9.7,69.8,7.8,149.3"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "949.8",
        cy: "741.4",
        r: "25.8"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "931.7",
        cy: "596.7",
        r: "36.1"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#030202",
        d: "M975.5,742.4c-0.9,37.5-4.3,74.3-12.7,112.5l-17.2,3.7l-21.1-112"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "949.8",
        cy: "741.4",
        r: "25.8"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "962.8,855 1001.9,865.7 950.9,871.6 950.3,856.3 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "956.4",
        cy: "855.4",
        r: "6.2"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#030202",
        d: "M914.3,743.8l5.7-146.3h-72.2c0,0,1.3,70.4,15.7,148.7"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "888.7",
        cy: "741",
        r: "25.8"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "883.9",
        cy: "595.2",
        r: "36.1"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#030202",
        d: "M863.5,746c6.8,36.9,15.9,72.7,30.2,109.2l17.5,1l3.3-113.9"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "888.7",
        cy: "741",
        r: "25.8"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#030202",
        points: "893.7,855.1 856.7,871.9 908,869.7 906.2,854.3 \t\t"
      }), React.createElement("circle", {
        fill: "#030202",
        cx: "900",
        cy: "854.6",
        r: "6.2"
      })), React.createElement("g", null, React.createElement("polygon", {
        fill: "#FAD26A",
        points: "892.8,446.3 870.6,517.6 896.6,559 954.5,558 979.7,504 950.7,442.8 \t\t"
      }), React.createElement("circle", {
        fill: "#FAD26A",
        cx: "925.1",
        cy: "549",
        r: "33.5"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#FAD26A",
        d: "M955.7,558.4l-60.8-19.6c0,0-49.3,5.5-62.3,71.7c0,0,68.8,56.7,143,47.1 C975.5,657.6,994.4,572.1,955.7,558.4z"
      }), React.createElement("circle", {
        fill: "#FAD26A",
        cx: "926.7",
        cy: "549",
        r: "33.5"
      })), React.createElement("g", null, React.createElement("circle", {
        fill: "#F0DCE3",
        cx: "809.2",
        cy: "461.2",
        r: "14.5"
      }), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M805.1,447.3c0,0,9-1.8,19.9-1.6c21,0.4,49.4,30.1-14.3,30L805.1,447.3z"
      }), React.createElement("polygon", {
        fill: "#FAD26A",
        points: "886.5,446.5 812.4,444.8 825,479.8 890.2,479 \t\t"
      }), React.createElement("circle", {
        fill: "#FAD26A",
        cx: "888.2",
        cy: "462.8",
        r: "16.3"
      })), React.createElement("g", null, React.createElement("polyline", {
        fill: "#FAD26A",
        points: "950.9,442.5 1023.9,448.4 1022,476.3 951.7,484.4 950.9,442.5 \t\t"
      }), React.createElement("circle", {
        fill: "#FAD26A",
        cx: "950.4",
        cy: "463.5",
        r: "21"
      })), React.createElement("path", {
        fill: "#FFFFFF",
        d: "M932.4,502.3l-0.1,0c0-0.1,0-0.2,0-0.4c-0.6-11.5-10.4-20.3-21.9-19.7s-20.4,10.8-19.8,22.3l0,0 c-3.5,31.5-0.2,63.7,9.4,93.9c16-4.6,31.9-9.3,47.9-13.9C939.2,557.9,934,530.2,932.4,502.3z"
      }), React.createElement("g", null, React.createElement("g", null, React.createElement("defs", null, React.createElement("path", {
        id: "SVGID_1_",
        d: "M932.4,502.3l-0.1,0c0-0.1,0-0.2,0-0.4c-0.6-11.5-10.4-20.3-21.9-19.7s-20.4,10.8-19.8,22.3l0,0 c-3.5,31.5-0.2,63.7,9.4,93.9c16-4.6,31.9-9.3,47.9-13.9C939.2,557.9,934,530.2,932.4,502.3z"
      })), React.createElement("clipPath", {
        id: "SVGID_2_"
      }, React.createElement("use", {
        href: "#SVGID_1_",
        overflow: "visible"
      })), React.createElement("g", {
        id: "_x38_Ju9wR_2_",
        "clip-path": "url(#SVGID_2_)"
      }, React.createElement("g", null, React.createElement("path", {
        fill: "#FAD26A",
        d: "M903.5,486.8c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5 C901.4,490.8,903.4,489.1,903.5,486.8z M902.6,503.5c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9 c-0.1,2.3,1.6,4.3,3.9,4.4C900.5,507.5,902.5,505.8,902.6,503.5z M901.7,520.3c0.2-2.3-1.6-4.3-3.9-4.5 c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.5,4.3,3.9,4.5C899.5,524.3,901.5,522.6,901.7,520.3z M920.8,479.3 c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C918.7,483.4,920.7,481.6,920.8,479.3z M930,542.7 c2.3,0.1,4.3-1.6,4.4-4c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4C925.9,540.7,927.6,542.6,930,542.7z M935.3,522 c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.6,4.3,4,4.4C933.2,526.1,935.2,524.4,935.3,522z M911.8,566.9 c2.3,0.1,4.2-1.6,4.3-4c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4C907.7,564.9,909.5,566.8,911.8,566.9z M915.1,508.4 c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5c2.4,0.2,4.3-1.5,4.5-3.9C919.1,510.5,917.4,508.5,915.1,508.4z M917.1,546.2c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.6,4.2,4,4.3C915.1,550.3,917,548.5,917.1,546.2z M919.9,496.1c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.5,3.9c-0.1,2.3,1.6,4.3,3.9,4.4 C917.8,500.1,919.7,498.4,919.9,496.1z M896.8,532.5c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.6,4.2,4,4.4c2.3,0.1,4.3-1.6,4.4-4 C900.9,534.6,899.1,532.6,896.8,532.5z M936.2,505.3c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9 c-0.1,2.3,1.6,4.3,3.9,4.4C934.1,509.4,936.1,507.7,936.2,505.3z M915.2,579.7c0.1-2.3-1.7-4.3-3.9-4.4c-2.3-0.1-4.3,1.7-4.4,4 c-0.1,2.3,1.6,4.3,4,4.4C913.1,583.8,915.1,582,915.2,579.7z M914,525.1c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.2,4,4.4 c2.3,0.1,4.3-1.6,4.4-4C918.1,527.2,916.3,525.2,914,525.1z M899.8,553.8c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9 c-0.2,2.3,1.6,4.3,3.9,4.5C897.7,557.8,899.6,556.1,899.8,553.8z M897.9,587.2c0.1-2.3-1.6-4.3-3.9-4.4 c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C895.9,591.2,897.8,589.5,897.9,587.2z M931.5,589.1 c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.4C929.4,593.1,931.4,591.4,931.5,589.1z M932.5,572.3c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.4 C930.4,576.3,932.3,574.6,932.5,572.3z M933.4,555.5c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.6,4.3,4,4.4 C931.4,559.6,933.3,557.8,933.4,555.5z M914.3,596.5c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.5,3.9 c-0.1,2.3,1.6,4.3,3.9,4.4C912.2,600.5,914.1,598.8,914.3,596.5z M898.9,570.4c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4 c-0.1,2.3,1.6,4.2,4,4.3C896.9,574.4,898.8,572.7,898.9,570.4z M948.8,581.5c0.1-2.3-1.7-4.3-3.9-4.4c-2.3-0.1-4.3,1.7-4.4,4 c-0.1,2.3,1.7,4.3,4,4.4C946.7,585.6,948.7,583.9,948.8,581.5z M949.7,564.8c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.7-4.4,4 c-0.1,2.3,1.7,4.3,4,4.4C947.7,568.9,949.6,567.2,949.7,564.8z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M903.5,486.8c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.5c0.2-2.3,2.2-4,4.5-3.9 C902,482.5,903.7,484.5,903.5,486.8z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M902.6,503.5c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C901,499.2,902.7,501.2,902.6,503.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M901.7,520.3c-0.2,2.3-2.2,4-4.5,3.9c-2.3-0.2-4-2.2-3.9-4.5c0.2-2.3,2.2-4,4.5-3.9 C900.1,516,901.8,518,901.7,520.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M920.8,479.3c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C919.2,475,920.9,477,920.8,479.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M930,542.7c-2.3-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4c2.3,0.1,4.1,2.1,4,4.4 C934.2,541.1,932.3,542.8,930,542.7z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M935.3,522c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C933.6,517.8,935.4,519.7,935.3,522z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M911.8,566.9c-2.3-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4c2.3,0.1,4.1,2,4,4.4 C916,565.3,914.1,567,911.8,566.9z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M915.1,508.4c2.3,0.2,4,2.2,3.9,4.5c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.5 C910.7,509.9,912.8,508.2,915.1,508.4z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M917.1,546.2c-0.1,2.3-2,4.1-4.4,4c-2.4-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4 C915.4,541.9,917.2,543.9,917.1,546.2z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M919.9,496.1c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.2-4.1,4.5-3.9 C918.3,491.8,920,493.8,919.9,496.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M896.8,532.5c2.3,0.1,4.1,2.1,4,4.4c-0.1,2.3-2,4.1-4.4,4c-2.3-0.1-4.1-2-4-4.4 C892.5,534.2,894.5,532.4,896.8,532.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M936.2,505.3c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C934.6,501.1,936.3,503,936.2,505.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M915.2,579.7c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C913.5,575.4,915.3,577.4,915.2,579.7z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M914,525.1c2.3,0.1,4.1,2.1,4,4.4c-0.1,2.3-2,4.1-4.4,4c-2.3-0.1-4.1-2-4-4.4 C909.7,526.8,911.7,525,914,525.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M899.8,553.8c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.5c0.2-2.3,2.2-4.1,4.5-3.9 C898.2,549.4,900,551.4,899.8,553.8z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M897.9,587.2c-0.1,2.3-2.1,4-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C896.3,582.9,898.1,584.9,897.9,587.2z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M931.5,589.1c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.4c0.2-2.3,2.2-4.1,4.5-3.9 C930,584.8,931.7,586.7,931.5,589.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M932.5,572.3c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.4c0.2-2.3,2.2-4.1,4.5-3.9 C930.9,568,932.6,570,932.5,572.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M933.4,555.5c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C931.7,551.2,933.5,553.2,933.4,555.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M914.3,596.5c-0.1,2.3-2.1,4-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.2-4.1,4.5-3.9 C912.7,592.2,914.4,594.2,914.3,596.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M898.9,570.4c-0.1,2.3-2,4.1-4.4,4c-2.4-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4 C897.2,566.1,899,568.1,898.9,570.4z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M948.8,581.5c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.2-4.1,4.4-4 C947.1,577.2,948.9,579.2,948.8,581.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M949.7,564.8c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.2-4.1,4.4-4 C948.1,560.5,949.9,562.5,949.7,564.8z"
      })))), React.createElement("path", {
        fill: "#6CBD8D",
        d: "M896.4,585.8c1.1,4.3,2.3,8.6,3.7,12.9c16-4.6,31.9-9.3,47.9-13.9c-1.1-3.3-2.1-6.7-3.1-10 C928.8,578.4,912.6,582,896.4,585.8z"
      })), React.createElement("path", {
        fill: "#FFFFFF",
        d: "M932.4,502.3c5.7,1.2,12-0.8,16.1-4.9c4.1-4.2,5.8-10.5,4.5-16.2c8.7-3,12.2-14.2,9.8-23 c-4.1-15-20.1-33.8-36.2-24.3c-4.6,2.7-10.2-0.7-15.5-1.6c-7.4-1.4-15.1,2.5-19.7,8.4c-4.6,6-6.4,13.6-6.6,21.1 c-8.2,4.4-13.1,14.1-11.9,23.3c1.2,9.2,8.6,17.2,17.7,19.3"
      }), React.createElement("g", null, React.createElement("defs", null, React.createElement("path", {
        id: "SVGID_3_",
        d: "M926.6,434.2c-4.6,2.7-10.2-0.7-15.5-1.6c-7.4-1.4-15.1,2.5-19.7,8.4s-6.4,13.6-6.6,21.1 c-8.2,4.4-13.1,14.1-11.9,23.3s8.6,17.2,17.7,19.3c3.6,3.1,29.8-4.9,41.9-2.2c5.7,1.2,12-0.8,16.1-4.9c4.1-4.2,5.8-10.5,4.5-16.2 c8.7-3,12.2-14.2,9.8-23C958.7,443.5,942.8,424.7,926.6,434.2z"
      })), React.createElement("clipPath", {
        id: "SVGID_4_"
      }, React.createElement("use", {
        href: "#SVGID_3_",
        overflow: "visible"
      })), React.createElement("g", {
        id: "_x38_Ju9wR_5_",
        "clip-path": "url(#SVGID_4_)"
      }, React.createElement("g", null, React.createElement("path", {
        fill: "#FAD26A",
        d: "M904.5,470c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.3,4,4.4 C902.4,474.1,904.4,472.3,904.5,470z M905.4,453.3c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4 C903.3,457.4,905.3,455.6,905.4,453.3z M903.5,486.8c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9 c-0.2,2.3,1.6,4.3,3.9,4.5C901.4,490.8,903.4,489.1,903.5,486.8z M906.3,436.6c0.2-2.3-1.6-4.3-3.9-4.4 c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5C904.2,440.6,906.2,438.9,906.3,436.6z M902.6,503.5 c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C900.5,507.5,902.5,505.8,902.6,503.5z M886.3,494.1c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.2,4,4.3C884.2,498.2,886.2,496.4,886.3,494.1z M920.8,479.3c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C918.7,483.4,920.7,481.6,920.8,479.3 z M887.2,477.5c0.1-2.3-1.6-4.3-4-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C885.1,481.5,887.1,479.8,887.2,477.5z M917.8,458.2c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.3,4,4.4c2.3,0.1,4.3-1.6,4.4-4C921.9,460.2,920.1,458.3,917.8,458.2z M884.2,456.3c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5c2.3,0.2,4.3-1.6,4.5-3.9C888.3,458.5,886.5,456.5,884.2,456.3 z M889.1,444c0.1-2.3-1.7-4.3-4-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.7,4.3,4,4.4C887,448.1,889,446.3,889.1,444z M922.7,445.8c0.1-2.3-1.6-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.3,4,4.4C920.6,449.9,922.6,448.1,922.7,445.8z M953.5,497.9c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.5,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C951.4,502,953.3,500.2,953.5,497.9z M935.6,442.3c2.3,0.1,4.2-1.7,4.3-4c0.1-2.3-1.7-4.2-4-4.3c-2.3-0.1-4.3,1.7-4.4,4C931.5,440.3,933.3,442.3,935.6,442.3z M933.1,484.2c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.2,4,4.3c2.3,0.1,4.2-1.7,4.3-4C937.2,486.2,935.4,484.3,933.1,484.2z M951.8,451.6c2.3,0.1,4.3-1.6,4.4-3.9c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.5,3.9C947.7,449.5,949.5,451.5,951.8,451.6z M954.4,481.1c0.1-2.3-1.6-4.3-4-4.4c-2.3-0.1-4.3,1.7-4.4,4c-0.1,2.3,1.7,4.3,4,4.4C952.4,485.2,954.3,483.5,954.4,481.1z M919.9,496.1c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.5,3.9c-0.1,2.3,1.6,4.3,3.9,4.4C917.8,500.1,919.7,498.4,919.9,496.1 z M936.2,505.3c0.1-2.3-1.6-4.3-3.9-4.4c-2.3-0.1-4.3,1.6-4.4,3.9c-0.1,2.3,1.6,4.3,3.9,4.4 C934.1,509.4,936.1,507.7,936.2,505.3z M934.7,459.1c2.3,0.1,4.2-1.7,4.3-4c0.1-2.3-1.7-4.2-4-4.3c-2.3-0.1-4.3,1.7-4.4,4 C930.5,457,932.3,459,934.7,459.1z M951.5,460c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5c2.3,0.2,4.3-1.6,4.5-3.9 C955.5,462.1,953.8,460.2,951.5,460z M938.1,471.9c0.2-2.3-1.6-4.3-3.9-4.5c-2.3-0.2-4.3,1.6-4.5,3.9c-0.2,2.3,1.6,4.3,3.9,4.5 C935.9,475.9,937.9,474.2,938.1,471.9z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M904.5,470c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C902.8,465.7,904.6,467.7,904.5,470z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M905.4,453.3c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C903.8,449,905.6,451,905.4,453.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M903.5,486.8c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.5c0.2-2.3,2.2-4,4.5-3.9 C902,482.5,903.7,484.5,903.5,486.8z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M906.3,436.6c-0.2,2.3-2.2,4.1-4.5,3.9c-2.3-0.2-4.1-2.2-3.9-4.5c0.2-2.3,2.1-4,4.5-3.9 C904.8,432.3,906.5,434.3,906.3,436.6z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M902.6,503.5c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C901,499.2,902.7,501.2,902.6,503.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M886.3,494.1c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4 C884.6,489.9,886.4,491.8,886.3,494.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M920.8,479.3c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C919.2,475,920.9,477,920.8,479.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M887.2,477.5c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C885.6,473.2,887.4,475.2,887.2,477.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M917.8,458.2c2.3,0.1,4.1,2.1,4,4.4c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4 C913.5,459.8,915.5,458,917.8,458.2z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M884.2,456.3c2.3,0.2,4.1,2.2,3.9,4.5c-0.2,2.3-2.2,4.1-4.5,3.9c-2.3-0.2-4.1-2.1-3.9-4.5 C879.9,457.9,881.9,456.2,884.2,456.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M889.1,444c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C887.4,439.7,889.2,441.7,889.1,444z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M922.7,445.8c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C921,441.5,922.8,443.5,922.7,445.8z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M953.5,497.9c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.2-3.9-4.4c0.1-2.3,2.2-4.1,4.5-3.9 C951.9,493.6,953.6,495.6,953.5,497.9z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M935.6,442.3c-2.3-0.1-4.1-2.1-4-4.3c0.1-2.3,2-4.1,4.4-4c2.3,0.1,4.1,2,4,4.3 C939.8,440.6,937.9,442.4,935.6,442.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M933.1,484.2c2.3,0.1,4.1,2,4,4.3c-0.1,2.3-2,4.1-4.3,4c-2.3-0.1-4.1-2-4-4.3 C928.9,485.9,930.8,484.1,933.1,484.2z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M951.8,451.6c-2.3-0.1-4.1-2.2-4-4.4c0.1-2.3,2.2-4,4.5-3.9c2.3,0.1,4.1,2.1,3.9,4.4 C956.1,450,954.2,451.8,951.8,451.6z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M954.4,481.1c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4c0.1-2.3,2.1-4.1,4.4-4 C952.8,476.8,954.5,478.8,954.4,481.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M919.9,496.1c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.2-4.1,4.5-3.9 C918.3,491.8,920,493.8,919.9,496.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M936.2,505.3c-0.1,2.3-2.1,4.1-4.4,3.9c-2.3-0.1-4.1-2.1-3.9-4.4c0.1-2.3,2.1-4.1,4.4-3.9 C934.6,501.1,936.3,503,936.2,505.3z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M934.7,459.1c-2.3-0.1-4.1-2-4-4.3c0.1-2.3,2.1-4.1,4.4-4c2.3,0.1,4.1,2,4,4.3 C938.9,457.4,937,459.2,934.7,459.1z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M951.5,460c2.3,0.2,4,2.1,3.9,4.5c-0.2,2.3-2.2,4-4.5,3.9c-2.3-0.2-4.1-2.2-3.9-4.5 C947.1,461.6,949.2,459.8,951.5,460z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M938.1,471.9c-0.2,2.3-2.1,4-4.5,3.9c-2.3-0.2-4.1-2.2-3.9-4.5c0.2-2.3,2.2-4,4.5-3.9 C936.5,467.6,938.2,469.6,938.1,471.9z"
      })))), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M791.2,461c-3,9.1,4.6,18.1,12.2,23.9c16,12.4,34.7,20.8,53.3,28.8c6.6,2.9,13.6,5.8,20.8,5.4 c1.9-0.1,4.5-1.4,3.8-3.2c-0.2-0.5-0.6-0.9-1.1-1.3c-18.6-16.1-32.6-33.4-49.6-50.3C821.4,455.2,797.2,442.5,791.2,461z"
      }), React.createElement("path", {
        id: "blue_band_3_",
        fill: "#2EC0F0",
        d: "M874.7,495.2l-24.5,23.2c-1.2,1.1-3,1-4-0.2l0,0c-1-1.2-0.9-3.2,0.3-4.3l24.5-23.2 c1.2-1.1,3-1,4,0.2l0,0C876,492.2,875.8,494.1,874.7,495.2z"
      }), React.createElement("path", {
        id: "blue_band_1_",
        fill: "#ED3553",
        d: "M871.7,503.2l-32.3,9.8c-1.6,0.5-3.1-0.4-3.4-2l0,0c-0.3-1.6,0.7-3.2,2.2-3.7l32.3-9.8 c1.6-0.5,3.1,0.4,3.4,2l0,0C874.3,501,873.3,502.7,871.7,503.2z"
      }), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M864.9,510.1c-6.4,9-2.2,23.6,8.1,27.9c1,0.4,2.1,0.7,3.1,0.6c2.7-0.4,4-3.3,6.2-4.9c2.4-1.7,5.7-1.6,7.9-3.6 c3.7-3.4,1.3-9.9,3.9-14.2c1.1-1.9,3.2-3.6,2.7-5.7c-0.3-1.2-1.3-2-1.8-3.1c-1.4-3,0.6-8.1-2.6-8.9c-0.7-0.2-1.4,0-2.1,0.1 c-9.2,2.2-18.2,5.5-26.6,9.9"
      }), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M1024.4,480.4c9.3,2.4,17.8-5.7,23.1-13.6c11.3-16.7,18.5-35.8,25.3-54.8c2.4-6.8,4.9-13.9,4-21 c-0.2-1.9-1.7-4.4-3.5-3.6c-0.5,0.2-0.9,0.7-1.2,1.1c-14.8,19.5-33.6,33.1-49.4,51.1C1014.3,449.4,1005.6,475.6,1024.4,480.4z"
      }), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M1099.2,407.7c1.5,0,3.3-0.2,3.8-1.6c0.6-1.6-1.2-3-2.7-3.7c-5.1-2.5-10.5-4.5-15.9-6.1 c9.5-4,18.1-10.1,24.8-17.8c1.4-1.6,2.7-3.8,1.4-5.5c-8.2,4.3-16.4,8.5-24.7,12.8c5.2-6,10.2-12.3,14.7-18.7 c1.3-1.8,2.3-4.8,0.3-5.8c-1.6-0.8-3.4,0.5-4.6,1.7c-5.6,5.4-11.1,10.9-16.7,16.3c2.3-8.2,3.5-16.7,3.6-25.2 c-1.7-1.2-3.7,1.2-4.3,3.2c-2.6,7.9-5.3,15.8-7.9,23.7c-1.8-5.9-4.3-11.6-7.5-16.9c-0.6-1-1.8-2.1-2.8-1.5 c-0.6,0.4-0.8,1.2-0.8,1.9c-0.8,10.5,0.1,27,8,35.2C1074.6,407.1,1089.8,407.6,1099.2,407.7z"
      }), React.createElement("g", null, React.createElement("polygon", {
        fill: "#F0DCE3",
        points: "913.2,415.5 911.3,440.6 928.4,441.5 931.1,416.5 \t\t"
      }), React.createElement("circle", {
        fill: "#F0DCE3",
        cx: "919.9",
        cy: "440.4",
        r: "8.6"
      }), React.createElement("circle", {
        fill: "#F0DCE3",
        cx: "922.2",
        cy: "415.5",
        r: "9"
      })), React.createElement("path", {
        fill: "#FFFFFF",
        d: "M910.1,434.5l10.8,4.5l8-2.4v11.8c0,0-3.6,6.3-20.6-1L910.1,434.5z"
      }), React.createElement("path", {
        fill: "#FAD26A",
        d: "M918.4,441.6c2.3,0.1,4.1,2.1,4,4.4c-0.1,2.3-2.1,4.1-4.4,4c-2.3-0.1-4.1-2.1-4-4.4 C914.1,443.2,916.1,441.4,918.4,441.6z"
      }), React.createElement("path", {
        fill: "#F0DCE3",
        d: "M953.8,397.6l4.3-37.2c2.5-21.9-12.3-42.3-34-45.9c-7-1.1-14.4-0.9-22,1.9c-18.7,6.9-29.4,26.7-25.8,46.3 l6.7,37c0,0,4.7,23.9,30.2,24C937.4,423.8,951.4,418.2,953.8,397.6z"
      }), React.createElement("path", {
        fill: "#D9B374",
        d: "M871.9,357.9c0,0,44.9-16.1,91.5,2.4c0,0,10.5-49.1-49.1-49C865.1,311.3,871.9,357.9,871.9,357.9z"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#ED3553",
        "stroke-width": "1.9332",
        "stroke-miterlimit": "10",
        d: "M908.6,406.7l31.1-8.2C939.7,398.5,940.9,427.3,908.6,406.7z"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#D9B374",
        "stroke-width": "1.6144",
        "stroke-miterlimit": "10",
        d: "M951.1,365.8c0,0-3.9-10.5-18.8-5.9"
      }), React.createElement("ellipse", {
        transform: "matrix(8.498745e-02 -0.9964 0.9964 8.498745e-02 490.9873 1277.7224)",
        fill: "#030202",
        cx: "941.2",
        cy: "371.5",
        rx: "7.3",
        ry: "2.3"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#D9B374",
        "stroke-width": "1.6144",
        "stroke-miterlimit": "10",
        d: "M883.6,365.7c0,0,4.2-10.4,19-5.4"
      }), React.createElement("ellipse", {
        transform: "matrix(0.9983 -5.768354e-02 5.768354e-02 0.9983 -19.9412 52.2485)",
        fill: "#030202",
        cx: "895.1",
        cy: "371.5",
        rx: "2.3",
        ry: "7.3"
      }), React.createElement("polyline", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.6144",
        "stroke-miterlimit": "10",
        points: "915.5,364.4 914.3,397.1 922.8,391.9 922.1,403.1 \t"
      }), React.createElement("g", null, React.createElement("path", {
        fill: "#D9B374",
        d: "M917.3,297.1l0.6,45.9c0,0,25.9-0.8,40.6,8.1l-14.5,70.7l37.4,13C981.5,434.9,1026.6,292.5,917.3,297.1z"
      }), React.createElement("circle", {
        fill: "#D9B374",
        cx: "918",
        cy: "320",
        r: "23"
      })), React.createElement("g", null, React.createElement("circle", {
        fill: "#D9B374",
        cx: "918",
        cy: "320",
        r: "23"
      }), React.createElement("path", {
        fill: "#D9B374",
        d: "M917.3,297.1l0.6,45.9c0,0-20.7,1.9-35.5,7.2l11.9,72.4l-39.2,11.6C855.1,434.2,813.2,297,917.3,297.1z"
      })), React.createElement("g", {
        id: "glass_1_"
      }, React.createElement("g", null, React.createElement("ellipse", {
        transform: "matrix(0.9985 -5.558283e-02 5.558283e-02 0.9985 -16.8687 50.1781)",
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        cx: "893.6",
        cy: "328.3",
        rx: "15.7",
        ry: "7.3"
      }), React.createElement("ellipse", {
        transform: "matrix(0.9985 -5.558283e-02 5.558283e-02 0.9985 -16.6538 52.7495)",
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        cx: "940",
        cy: "325.8",
        rx: "15.7",
        ry: "7.3"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        d: "M909.3,327.5c0,0,7.7-24.1,15-0.8"
      }), React.createElement("path", {
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        d: "M878,329.2"
      }), React.createElement("line", {
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        x1: "955.6",
        y1: "324.9",
        x2: "966.8",
        y2: "348.8"
      })), React.createElement("line", {
        fill: "none",
        stroke: "#6CBD8D",
        "stroke-width": "3.2288",
        "stroke-miterlimit": "10",
        x1: "878",
        y1: "329.2",
        x2: "875.1",
        y2: "348.7"
      }))), React.createElement("g", {
        id: "red"
      }, React.createElement("g", null, React.createElement("polyline", {
        points: "702.4,851 701.2,876.1 782,879.5 729.8,855 725,846.4 \t\t"
      }), React.createElement("circle", {
        cx: "714.3",
        cy: "851.4",
        r: "11.9"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#954A37",
        d: "M633.1,322c-5-1.1-10.1,2.1-13.2,6.2c-3,4.1-4.5,9.4-3.2,14.2c1.4,4.8,6.2,8.8,11.2,8.3 c4.4-0.5,8-4.2,9.6-8.3s1.7-8.7,1.7-13.2"
      }), React.createElement("path", {
        fill: "#954A37",
        d: "M714.6,331.4c4-1.5,8.7,1.1,10.5,5s1.2,8.5-0.5,12.4c-1.4,3.1-3.6,6-6.7,7.5c-3.1,1.5-7.2,1.1-9.5-1.3 c-2.7-2.8-2.4-7.2-2-11.1"
      }), React.createElement("path", {
        fill: "#954A37",
        d: "M633.3,287.4l-2.2,68.4c0,0-5.5,29.8,29.5,37.3c25.5,5.4,50-14.9,51.2-36l10-56.4 C726.2,255.5,636.7,249,633.3,287.4z"
      }), React.createElement("path", {
        fill: "#954A37",
        d: "M660.2,391.3l7.2,26.2c1.6,5.7,7.2,9.3,13.1,8.4l0,0c5.6-0.9,9.7-5.7,9.8-11.3l0.4-27.2 c0.1-9.7-8.6-17.2-18.2-15.5l0,0C663.4,373.5,657.7,382.5,660.2,391.3z"
      }), React.createElement("polygon", {
        fill: "#030202",
        points: "717.6,309 712.2,350.3 734.8,309.2 \t\t"
      }), React.createElement("path", {
        fill: "#030202",
        d: "M625.6,296.2l-0.5,35.4l7.2,6.8c0,0,4.6-49.1,4.7-50.3C636.9,286.8,625.6,296.2,625.6,296.2z"
      }), React.createElement("path", {
        fill: "#ED3553",
        d: "M606.2,442.2c0,0,41.2-13,31.7,28.9s-18.8,74.4-18.8,74.4c-5.9,20.9-36.5,15.4-34.4-6 C588.2,503.7,606.2,442.2,606.2,442.2z"
      }), React.createElement("path", {
        fill: "#ED3553",
        d: "M584.6,540.6c-4.6,44.3-3.6,87.2,10.1,108.8l44.1-12.7c0,0-16.9-58.3-18.6-94.6 C618.8,517,587,517,584.6,540.6z"
      }), React.createElement("path", {
        fill: "#954A37",
        d: "M605.7,653.5c0.6,7.9-7,13.5-11.9,19.7c-4.5,5.9-6.9,13.3-6.6,20.7c0.1,1.5,0.3,3.2,1.3,4.3 c1,1.2,3.1,1.5,4,0.3c0.2-6.3,0.7-13.3,5.6-17.3c-1.3,5.7-2,11.6-2,17.4c0,4.5,0.5,9.4,3.9,12.3c0.8,0.7,2.1,1.3,3,0.7 c1-0.6,1.1-1.9,1-3c-0.4-7.2-2-15.7,3.3-20.6c-0.6,3.8-0.9,7.7-1,11.6c0,4,0.6,8.6,4,10.9c1.2,0.8,3,1,3.8-0.1 c0.4-0.5,0.4-1.2,0.4-1.8c0-6.5-2.6-13.9,1.6-18.9c-0.4,4.2,0,8.5,1.3,12.5c0.7,2,2.6,4.4,4.5,3.4c0.9-0.5,1.2-1.6,1.4-2.7 c1.4-8.4-2.7-17.1-0.8-25.5c0.6-2.6,1.7-5,2.4-7.6c1.7-6.7,0.3-13.7-1.7-20.3c-0.6-2-1.3-4.1-2.8-5.5c-1.5-1.5-4.1-2.1-5.7-0.8"
      }), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "636.6,628.5 589.4,644.3 595.5,661.6 643,651.8 \t\t"
      }), React.createElement("g", null, React.createElement("polyline", {
        points: "741.9,743.1 730.8,855.1 698.9,859.5 690.7,744.3 \t\t\t"
      }), React.createElement("circle", {
        cx: "716.3",
        cy: "742.9",
        r: "25.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "744.2,620.8 741.9,742.4 691,746.9 674.8,628.8 \t\t\t"
      }), React.createElement("circle", {
        cx: "709.1",
        cy: "621.2",
        r: "35.1"
      }), React.createElement("circle", {
        cx: "716.3",
        cy: "742.9",
        r: "25.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "668.3,845.5 670,870.6 589.4,876 640.9,850.1 645.5,841.4 \t\t\t"
      }), React.createElement("circle", {
        cx: "656.4",
        cy: "846.2",
        r: "11.9"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "631.2,737.3 639,848.9 670.9,854.8 682.4,739.7 \t\t\t"
      }), React.createElement("circle", {
        cx: "656.8",
        cy: "737.7",
        r: "25.6"
      })), React.createElement("g", null, React.createElement("polyline", {
        points: "628,615.7 631.2,737.3 682.2,741.4 697.4,623.2 \t\t\t"
      }), React.createElement("circle", {
        cx: "663.1",
        cy: "615.9",
        r: "35.1"
      }), React.createElement("circle", {
        cx: "656.8",
        cy: "737.6",
        r: "25.6"
      })), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "630.1,612.3 627.2,634.6 747.3,632 740.9,605.1 \t\t"
      }), React.createElement("path", {
        fill: "#ED3553",
        d: "M732.2,428.2l-35-18.7c0,0-53.8,6.9-50.4,4.6c3.4-2.3-40.5,28.1-40.5,28.1l18.7,186.3l122.4-10L732.2,428.2z "
      }), React.createElement("polygon", {
        fill: "#FAD26A",
        points: "640.1,492.3 620.4,528.1 648.7,554.5 663.7,517.9 \t\t"
      }), React.createElement("polygon", {
        fill: "#6CBD8D",
        points: "663.7,517.9 688.1,484.8 721.1,520 692.7,549.2 \t\t"
      }), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "613.3",
        y: "498.7",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -173.0684 614.4207)",
        fill: "none",
        width: "21.6",
        height: "17.3"
      })), React.createElement("rect", {
        x: "627",
        y: "510",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -174.8596 618.6321)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "622.9",
        y: "506",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -173.3071 614.3354)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "618.7",
        y: "502.1",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -171.7596 610.0528)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "625.9",
        y: "510.6",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -177.7324 627.3252)",
        fill: "none",
        width: "21.6",
        height: "17.3"
      })), React.createElement("rect", {
        x: "639.6",
        y: "521.8",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -179.5233 631.5386)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "635.4",
        y: "517.9",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -177.9685 627.2586)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "631.3",
        y: "513.9",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -176.4232 622.9592)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "638.5",
        y: "522.4",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -182.3958 640.2337)",
        fill: "none",
        width: "21.6",
        height: "17.3"
      })), React.createElement("rect", {
        x: "652.2",
        y: "533.7",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -184.1848 644.4622)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "648",
        y: "529.7",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -182.6344 640.1483)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "643.9",
        y: "525.8",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -181.0847 635.8826)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "651.1",
        y: "534.3",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -187.0594 653.1403)",
        fill: "none",
        width: "21.6",
        height: "17.3"
      })), React.createElement("rect", {
        x: "664.8",
        y: "545.5",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -188.8507 657.3514)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "660.6",
        y: "541.6",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -187.2981 653.0547)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      }), React.createElement("rect", {
        x: "656.5",
        y: "537.6",
        transform: "matrix(0.6851 -0.7284 0.7284 0.6851 -185.7506 648.772)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.2"
      })))))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "620.6",
        y: "534",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -169.9058 775.813)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "633.9",
        y: "537.7",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -162.913 776.6962)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "629.9",
        y: "543.9",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -169.9211 776.1179)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "625.8",
        y: "550.1",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -176.9062 775.5414)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "632.7",
        y: "515.5",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -148.8553 777.5499)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "646",
        y: "519.2",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -141.8653 778.4243)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "642",
        y: "525.4",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -148.8703 777.8552)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "638",
        y: "531.5",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -155.8554 777.2787)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "644.8",
        y: "496.9",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -127.8044 779.2878)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "658.2",
        y: "500.6",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -120.8147 780.1617)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "654.1",
        y: "506.8",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -127.8227 779.5833)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "650.1",
        y: "512.9",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -134.8046 779.0161)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "644.8",
        y: "496.9",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -127.8044 779.2878)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "649.5",
        y: "512.6",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -134.7948 778.4124)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "653.6",
        y: "506.4",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -127.7909 778.9787)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "657.6",
        y: "500.3",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -120.8015 779.5673)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "632.7",
        y: "515.5",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -148.8553 777.5499)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "637.4",
        y: "531.2",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -155.8522 776.6534)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "641.4",
        y: "525",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -148.8443 777.2319)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "645.5",
        y: "518.9",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -141.8524 777.8299)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "620.6",
        y: "534",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -169.9058 775.813)",
        fill: "none",
        width: "22.2",
        height: "21.6"
      })), React.createElement("rect", {
        x: "625.3",
        y: "549.8",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -176.8998 774.9254)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "629.3",
        y: "543.6",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -169.891 775.5067)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      }), React.createElement("rect", {
        x: "633.3",
        y: "537.4",
        transform: "matrix(0.5468 -0.8373 0.8373 0.5468 -162.9032 776.0926)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "4.1",
        height: "2.2"
      })))))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "664.6",
        y: "493.1",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -159.1647 611.6973)",
        fill: "none",
        width: "21.6",
        height: "18.3"
      })), React.createElement("rect", {
        x: "678.4",
        y: "505.2",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -161.2376 615.8024)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "674.1",
        y: "500.8",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -159.3829 611.6167)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "669.9",
        y: "496.5",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -157.5386 607.4116)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "677.4",
        y: "506.3",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -164.7326 624.2955)",
        fill: "none",
        width: "21.6",
        height: "18.3"
      })), React.createElement("rect", {
        x: "691.2",
        y: "518.4",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -166.8054 628.4006)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "686.9",
        y: "514",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -164.9507 624.2151)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "682.7",
        y: "509.6",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -163.1043 620.0261)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "690.2",
        y: "519.5",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -170.3004 636.8937)",
        fill: "none",
        width: "21.6",
        height: "18.3"
      })), React.createElement("rect", {
        x: "703.9",
        y: "531.6",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -172.3733 640.9988)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "699.7",
        y: "527.2",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -170.5197 636.8047)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "695.4",
        y: "522.8",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -168.671 632.6331)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "702.9",
        y: "532.6",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -175.868 649.494)",
        fill: "none",
        width: "21.6",
        height: "18.3"
      })), React.createElement("rect", {
        x: "716.7",
        y: "544.7",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -177.94 653.6061)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "712.4",
        y: "540.3",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -176.0896 649.3854)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      }), React.createElement("rect", {
        x: "708.2",
        y: "536",
        transform: "matrix(0.7181 -0.696 0.696 0.7181 -174.2389 645.2315)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "2.2",
        height: "3.4"
      })))))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "671",
        y: "527.4",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -145.0679 804.4699)",
        fill: "none",
        width: "20.8",
        height: "21.6"
      })), React.createElement("rect", {
        x: "683.6",
        y: "531.5",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -138.6144 805.413)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "679.8",
        y: "537.3",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -145.0883 804.7723)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "675.9",
        y: "543",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -151.5494 804.1077)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "682.6",
        y: "510.1",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -125.609 806.4327)",
        fill: "none",
        width: "20.8",
        height: "21.6"
      })), React.createElement("rect", {
        x: "695.2",
        y: "514.3",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -119.1555 807.3765)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "691.3",
        y: "520",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -125.6291 806.7357)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "687.5",
        y: "525.8",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -132.0905 806.0713)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }))), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("rect", {
        x: "694.2",
        y: "492.9",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -106.1499 808.3961)",
        fill: "none",
        width: "20.8",
        height: "21.6"
      })), React.createElement("rect", {
        x: "706.8",
        y: "497",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -99.6965 809.34)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "702.9",
        y: "502.8",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -106.1699 808.6991)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      }), React.createElement("rect", {
        x: "699.1",
        y: "508.5",
        transform: "matrix(0.5569 -0.8306 0.8306 0.5569 -112.6269 808.0476)",
        "fill-rule": "evenodd",
        "clip-rule": "evenodd",
        fill: "#231F20",
        width: "3.9",
        height: "2.2"
      })))))), React.createElement("g", null, React.createElement("polygon", {
        fill: "#ED3553",
        points: "736,431.2 791.3,488 768.8,505 708.6,466.3 \t\t\t"
      }), React.createElement("circle", {
        fill: "#ED3553",
        cx: "720.5",
        cy: "447.4",
        r: "22.5"
      }), React.createElement("circle", {
        fill: "#ED3553",
        cx: "780.1",
        cy: "496.5",
        r: "14"
      })), React.createElement("g", null, React.createElement("path", {
        fill: "#ED3553",
        d: "M771.7,485.3c0,0-19.9,17.9-57,35.4c0,0,3.4,22.6,21.3,37c0,0,42-25.6,56.9-55.2L771.7,485.3z"
      }), React.createElement("circle", {
        fill: "#ED3553",
        cx: "780.1",
        cy: "496.5",
        r: "14"
      })), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "746.5,558.8 722.1,515.5 706.2,524.7 724.8,569.6 \t\t"
      }), React.createElement("path", {
        fill: "#954A37",
        d: "M686.3,550.9c0.5,2,2.4,3.6,2.4,5.7c0,1.1-0.5,2.2-0.3,3.3c0.4,2,3.1,2.6,4,4.4c0.9,1.8,0,4,0.6,5.9 c0.9,2.7,4.4,3.4,7.2,2.9c2.8-0.5,5.6-1.6,8.3-1c0.8,0.2,1.6,0.5,2.4,0.6c2.6,0.4,5-1.7,6.5-3.9c7.6-11.4,0.8-32.7-11.4-38.8 c-6.1-3.1-9.1-1.8-11.9,4.3c-1.5,3.2-0.3,4.9-2.7,8.5C689.8,545.6,685.3,546.6,686.3,550.9z"
      }), React.createElement("polygon", {
        fill: "#FFFFFF",
        points: "676.2,405.2 682,393.4 703.9,393.7 703.4,427.7 676.1,413.2 656.2,430.9 651.1,400.8 670.6,393.2 "
      }), React.createElement("ellipse", {
        transform: "matrix(1.866697e-02 -0.9998 0.9998 1.866697e-02 278.9319 1031.957)",
        fill: "none",
        stroke: "#030202",
        "stroke-width": "1.798",
        "stroke-miterlimit": "10",
        cx: "665.2",
        cy: "373.9",
        rx: "8.5",
        ry: "3.9"
      }), React.createElement("polyline", {
        fill: "none",
        stroke: "#030202",
        "stroke-width": "2.0594",
        "stroke-miterlimit": "10",
        points: "666.1,308.2 657.4,352.6 671.1,348 664,367.1 \t\t"
      }), React.createElement("ellipse", {
        transform: "matrix(0.234 -0.9722 0.9722 0.234 216.7418 919.7568)",
        fill: "#030202",
        cx: "692.1",
        cy: "322.3",
        rx: "7.9",
        ry: "2.5"
      }), React.createElement("rect", {
        x: "687.3",
        y: "303.4",
        transform: "matrix(0.8381 0.5454 -0.5454 0.8381 280.4143 -332.1469)",
        fill: "#030202",
        width: "25",
        height: "6.1"
      }), React.createElement("ellipse", {
        transform: "matrix(0.234 -0.9722 0.9722 0.234 189.1493 873.8196)",
        fill: "#030202",
        cx: "649.1",
        cy: "316.9",
        rx: "7.9",
        ry: "2.5"
      }), React.createElement("rect", {
        x: "636.9",
        y: "294.4",
        transform: "matrix(-0.998 6.339084e-02 -6.339084e-02 -0.998 1316.3944 553.0157)",
        fill: "#030202",
        width: "25",
        height: "6.1"
      }), React.createElement("path", {
        fill: "#030202",
        d: "M616.7,275.8c-2.4,5.5-3.1,12-0.6,17.5c2.5,5.5,8.7,9.4,14.6,8c8.3-1.9,11.4-12,12.7-20.4 c13.5,6.3,31.2,1.1,39.1-11.5c-0.5,8.3,5.3,16,12.6,20.1s15.8,5.3,24,6.4c-7.4,3.7-9.9,14.3-5.4,21.3c4.5,6.9,14.6,9.2,22,5.4 s11.4-12.7,10.1-20.9c-0.9-5.9-5.7-11.9-11.6-11.2c7.4-11.4,4.8-28-5.6-36.7s-27.3-8.1-37.1,1.2c-7.2-9.3-19.8-14-31.3-12 c-11.2,2-16.1,8.9-23,16.8c-4.8,5.5-2.7,2.6-9.2,5.4C622.9,267.3,619,270.7,616.7,275.8z"
      }))), React.createElement("g", {
        id: "models"
      }, React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("path", {
        fill: "#EE3850",
        d: "M479.6,107.9h89c0,23.6-9.4,46.2-26.1,63s-39.3,26.1-62.9,26.1L479.6,107.9z"
      }), React.createElement("path", {
        fill: "#63BF83",
        d: "M479.6,107.9h-89c0,48.9,40.2,89,89,89c0.1,0,0.1,0,0.1,0L479.6,107.9z"
      }), React.createElement("path", {
        fill: "#30C2EE",
        d: "M479.6,107.9h-89c0-48.9,40.2-89,89-89c0.1,0,0.1,0,0.1,0L479.6,107.9z"
      }), React.createElement("path", {
        fill: "#FAD363",
        d: "M479.6,107.9h89c0-48.9-40.2-89-89-89c-0.1,0-0.1,0-0.1,0L479.6,107.9z"
      }), React.createElement("g", null, React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "479.4",
        cy: "107.7",
        r: "22.1"
      }), React.createElement("ellipse", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "479.2",
        cy: "107.3",
        rx: "67.2",
        ry: "67.2"
      }), React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "479.1",
        cy: "107.9",
        r: "44.4"
      })))), React.createElement("polygon", {
        fill: "none",
        stroke: "#231F20",
        "stroke-width": "4",
        "stroke-miterlimit": "10",
        points: "428.3,63.4 453,143.7 509.2,143.7 509.2,75.2 \t\t"
      })), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("path", {
        fill: "#EE3850",
        d: "M248.3,108.3h88.6c0,23.5-9.4,46-26,62.7s-39.1,26-62.6,26L248.3,108.3z"
      }), React.createElement("path", {
        fill: "#63BF83",
        d: "M248.4,108.3h-88.6c0,48.6,40,88.6,88.6,88.6c0.1,0,0.1,0,0.1,0L248.4,108.3z"
      }), React.createElement("path", {
        fill: "#30C2EE",
        d: "M248.3,108.3h-88.6c0-48.6,40-88.6,88.6-88.6c0.1,0,0.1,0,0.1,0L248.3,108.3z"
      }), React.createElement("path", {
        fill: "#FAD363",
        d: "M248.4,108.3H337c0-48.6-40-88.6-88.6-88.6c-0.1,0-0.1,0-0.1,0L248.4,108.3z"
      }), React.createElement("g", null, React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "248.1",
        cy: "108.1",
        r: "22"
      }), React.createElement("ellipse", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "247.9",
        cy: "107.7",
        rx: "66.9",
        ry: "66.9"
      }), React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "247.8",
        cy: "108.3",
        r: "44.2"
      })))), React.createElement("polygon", {
        fill: "none",
        stroke: "#231F20",
        "stroke-width": "4",
        "stroke-miterlimit": "10",
        points: "201.8,159.4 281.7,134.9 281.7,79 213.6,79 \t\t"
      })), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("path", {
        fill: "#EE3850",
        d: "M704.6,108.2h88.7c0,23.5-9.4,46.1-26,62.7c-16.6,16.7-39.2,26-62.7,26L704.6,108.2z"
      }), React.createElement("path", {
        fill: "#63BF83",
        d: "M704.7,108.2H616c0,48.7,40,88.7,88.7,88.7c0.1,0,0.1,0,0.1,0L704.7,108.2z"
      }), React.createElement("path", {
        fill: "#30C2EE",
        d: "M704.6,108.3h-88.7c0-48.7,40-88.7,88.7-88.7c0.1,0,0.1,0,0.1,0L704.6,108.3z"
      }), React.createElement("path", {
        fill: "#FAD363",
        d: "M704.7,108.3h88.7c0-48.7-40-88.7-88.7-88.7c-0.1,0-0.1,0-0.1,0L704.7,108.3z"
      }), React.createElement("g", null, React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "704.4",
        cy: "108",
        r: "22"
      }), React.createElement("ellipse", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "704.2",
        cy: "107.6",
        rx: "66.9",
        ry: "66.9"
      }), React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "704.1",
        cy: "108.2",
        r: "44.2"
      })))), React.createElement("polygon", {
        fill: "none",
        stroke: "#231F20",
        "stroke-width": "4",
        "stroke-miterlimit": "10",
        points: "754.8,152.5 730.3,72.6 674.3,72.6 674.3,140.8 \t\t"
      })), React.createElement("g", null, React.createElement("g", null, React.createElement("g", null, React.createElement("path", {
        fill: "#EE3850",
        d: "M931.1,108.5h89.4c0,23.7-9.4,46.4-26.2,63.2s-39.5,26.2-63.2,26.2L931.1,108.5z"
      }), React.createElement("path", {
        fill: "#63BF83",
        d: "M931.2,108.5h-89.4c0,49.1,40.4,89.4,89.4,89.4c0.1,0,0.1,0,0.1,0L931.2,108.5z"
      }), React.createElement("path", {
        fill: "#30C2EE",
        d: "M931.1,108.5h-89.4c0-49.1,40.4-89.4,89.4-89.4c0.1,0,0.1,0,0.1,0L931.1,108.5z"
      }), React.createElement("path", {
        fill: "#FAD363",
        d: "M931.2,108.5h89.4c0-49.1-40.4-89.4-89.4-89.4c-0.1,0-0.1,0-0.1,0L931.2,108.5z"
      }), React.createElement("g", null, React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "930.9",
        cy: "108.3",
        r: "22.2"
      }), React.createElement("ellipse", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "930.7",
        cy: "107.9",
        rx: "67.5",
        ry: "67.5"
      }), React.createElement("circle", {
        fill: "none",
        stroke: "#FFFFFF",
        "stroke-width": "0.1018",
        "stroke-miterlimit": "10",
        cx: "930.6",
        cy: "108.5",
        r: "44.6"
      })))), React.createElement("polygon", {
        fill: "none",
        stroke: "#231F20",
        "stroke-width": "4",
        "stroke-miterlimit": "10",
        points: "878.2,63.9 899.8,138.9 963,138.9 981.8,63.9 \t\t"
      }))));
    }
  }]);

  return BrainyBunch;
}(Component);

var css$v = ".styles_tabsWrapper__2fvS2 {\n  min-width: 200px;\n}\n\n.styles_tabsWrapper__2fvS2 .styles_content__2bO8V {\n  border: 1px solid var(--light-grey);\n  border-top: 1px solid var(--light-grey) !important;\n  border-radius: 0 0 6px 6px;\n  padding: 0 10px;\n}\n\n.styles_tabLabels__2yZig {\n  display: flex;\n  overflow-x: auto;\n  margin-top: -1px;\n  border-radius: 6px 6px 0 0;\n  flex: auto;\n  align-items: flex-end;\n}\n\n.styles_tabLabels__2yZig p {\n  font-size: 0.9rem;\n  text-align: center;\n  padding: 5px 20px;\n  margin: 0;\n  cursor: pointer;\n  min-width: 80px;\n  -webkit-hyphens: auto;\n      -ms-hyphens: auto;\n          hyphens: auto;\n  border-bottom: 2px solid transparent;\n}\n\n.styles_tabLabels__2yZig p:hover {\n  border-bottom: 2px solid var(--light-grey);\n}\n\n.styles_tabLabels__2yZig p:first-child {\n  margin-left: 0;\n  border-radius: 6px 0 0 0;\n}\n\n@media only screen and (max-width: 400px) {\n\n  .styles_tabLabels__2yZig {\n    flex-wrap: wrap;\n  }\n\n  .styles_tabLabels__2yZig p {\n    width: 100%;\n    border-bottom: 1px solid var(--light-grey);\n  }\n}\n";
var styles$r = {"tabsWrapper":"styles_tabsWrapper__2fvS2","content":"styles_content__2bO8V","tabLabels":"styles_tabLabels__2yZig"};
styleInject(css$v);

var Tabs =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Tabs, _React$Component);

  function Tabs(props) {
    var _this;

    _classCallCheck(this, Tabs);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tabs).call(this, props));
    _this._changeTab = _this._changeTab.bind(_assertThisInitialized(_this));
    var active = props.active || Object.keys(_this.props.tabs[0] || {})[0];
    _this.state = {
      active: active
    };
    return _this;
  }

  _createClass(Tabs, [{
    key: "_changeTab",
    value: function _changeTab(active) {
      this.setState({
        active: active
      });

      if (this.props.onChange) {
        this.props.onChange(active);
      }
    }
  }, {
    key: "_getTabsList",
    value: function _getTabsList() {
      return this.props.tabs[0];
    }
  }, {
    key: "_renderLabels",
    value: function _renderLabels() {
      var _this2 = this;

      var label = Object.keys(this._getTabsList()).map(function (value, index) {
        if (value === _this2.state.active) {
          var active = {
            borderBottom: '2px solid' + Colors[_this2.props.highlightColor]
          };
        }

        return React.createElement("p", {
          style: active,
          onClick: function onClick(e) {
            return _this2._changeTab(value);
          },
          key: value
        }, _this2._getTabsList()[value].label);
      });
      return label;
    }
  }, {
    key: "render",
    value: function render(props) {
      var divStyle = {
        maxWidth: this.props.maxWidth
      };
      var borderStyle;

      if (this.props.contentBorder == false) {
        borderStyle = {
          borderColor: "white"
        };
      }

      return React.createElement("div", {
        style: divStyle,
        className: styles$r.tabsWrapper
      }, React.createElement("div", {
        className: styles$r.tabLabels
      }, this._renderLabels()), React.createElement("div", {
        style: borderStyle,
        className: styles$r.content
      }, React.createElement("div", {
        "data-qa-id": "content"
      }, this._getTabsList()[this.state.active].content)));
    }
  }]);

  return Tabs;
}(React.Component);
Tabs.propTypes = {
  maxWidth: PropTypes.number,
  onChange: PropTypes.func,
  highlightColor: PropTypes.oneOf(['red', 'green', 'blue', 'yellow', 'navy'])
};

var css$w = ".styles_energyWrapper__2aGG3 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.styles_icon__2SU59 {\n  margin: 0 5px;\n}\n\n.styles_bar__zVlm1 {\n  border: 1px solid #eff2f5;\n  height: 20px;\n  display: flex;\n  justify-content: space-evenly;\n  border-radius: 6px;\n  box-shadow: 0px 1px 6px 0px rgba(153,153,153,0.2);\n  width: 100%;\n  background: #C6D9EC;\n  background: linear-gradient(90deg, #214263 0%, #C6D9EC 100%);\n}\n\n.styles_segment__3zjcN {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.styles_segmentSections__2gUM8 {\n  border-right: 1px solid white;\n}\n\n.styles_segmentSections__2gUM8:last-child {\n  border-right: 0px solid white;\n}\n\n.styles_initialCircle__2Af0b {\n  box-shadow: 0px 1px 6px 0px rgba(0,0,0,1);\n  border-radius: 100%;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: -5px 0 0 0;\n  background-color: white;\n}\n\n.styles_dot__1kOsL {\n  background-color: white;\n  border-radius: 100%;\n  box-shadow: 0px 1px 6px 0px rgba(0,0,0,1);\n  width: 12px;\n  height: 12px;\n}\n";
var styles$s = {"energyWrapper":"styles_energyWrapper__2aGG3","icon":"styles_icon__2SU59","bar":"styles_bar__zVlm1","segment":"styles_segment__3zjcN","segmentSections":"styles_segmentSections__2gUM8","initialCircle":"styles_initialCircle__2Af0b","dot":"styles_dot__1kOsL"};
styleInject(css$w);

function Scale(props) {
  function renderCircle(initials) {
    if (initials) {
      return React.createElement("p", {
        className: styles$s.initialCircle
      }, " ", initials, " ");
    } else {
      return React.createElement("div", {
        className: styles$s.dot
      });
    }
  }

  var segments = Array.from(Array(props.segments).keys());
  var maxWidth = {
    maxWidth: props.maxWidth + 'px'
  };
  return React.createElement("div", {
    className: styles$s.energyWrapper
  }, props.type == "day" && React.createElement(FontAwesomeIcon, {
    icon: ["fas", "moon"],
    className: styles$s.icon
  }), props.type == "intro" && React.createElement(FontAwesomeIcon, {
    icon: ["fas", "sign-in-alt"],
    className: styles$s.icon
  }), React.createElement("div", {
    style: maxWidth,
    className: styles$s.bar
  }, segments.map(function (x) {
    return React.createElement("div", {
      className: cx(styles$s.segment, props.showSegments == true && styles$s.segmentSections)
    }, props.thinkerA != undefined && props.thinkerA.score == x && React.createElement(React.Fragment, null, renderCircle(props.thinkerA.initials), " "), props.thinkerB != undefined && props.thinkerB.score == x && React.createElement(React.Fragment, null, renderCircle(props.thinkerB.initials), " "));
  })), props.type == "day" && React.createElement(FontAwesomeIcon, {
    icon: ["fas", "sun"],
    className: styles$s.icon
  }), props.type == "intro" && React.createElement(FontAwesomeIcon, {
    icon: ["fas", "sign-out-alt"],
    className: styles$s.icon
  }));
}
Scale.propTypes = {
  percentage: PropTypes.number,
  maxWidth: PropTypes.number,
  maxHeight: PropTypes.number,
  visibility: PropTypes.string,
  title: PropTypes.string
};

var css$x = ".styles_cardInner__Xvhrh {\n  position: relative;\n  text-align: center;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n}\n\n.styles_cardInner__Xvhrh div div {\n\theight: 100%;\n}\n\n.styles_flipped__3UZjh {\n  transform: rotateY(180deg);\n}\n\n.styles_cardFront__2hGF8, .styles_cardBack__3qGE3 {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n\ttext-align: left;\n}\n\n.styles_cardBack__3qGE3 {\n  transform: rotateY(180deg);\n}\n\n.styles_cardBack__3qGE3 > div {\n\tbackground-color: rgba(248,248,248,0.5);\n}\n\n.styles_cardContent__2nUq4 {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\twidth: 100%;\n}\n\n.styles_cardContent__2nUq4 svg {\n\twidth: auto !important;\n\talign-self: flex-end;\n}\n";
var styles$t = {"cardInner":"styles_cardInner__Xvhrh","flipped":"styles_flipped__3UZjh","cardFront":"styles_cardFront__2hGF8","cardBack":"styles_cardBack__3qGE3","cardContent":"styles_cardContent__2nUq4"};
styleInject(css$x);

var FlipCard =
/*#__PURE__*/
function (_React$Component) {
  _inherits(FlipCard, _React$Component);

  function FlipCard(props) {
    var _this;

    _classCallCheck(this, FlipCard);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlipCard).call(this));
    _this.state = {
      isFlipped: props.flipped
    };
    return _this;
  }

  _createClass(FlipCard, [{
    key: "flip",
    value: function flip(e) {
      this.setState({
        isFlipped: !this.state.isFlipped
      });
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      var cardWrapper = {
        backgroundColor: 'transparent',
        width: this.props.width + 'px',
        height: '400px',
        perspective: '1000px'
      };
      var height = {
        height: this.props.height + 'px'
      };
      return React.createElement("div", {
        style: cardWrapper
      }, React.createElement("div", {
        className: cx(styles$t.cardInner, this.state.isFlipped && styles$t.flipped)
      }, React.createElement("div", {
        style: height,
        className: styles$t.cardFront,
        onClick: function onClick(e) {
          return _this2.flip();
        }
      }, React.createElement(Tile, {
        quad: this.props.quad
      }, React.createElement("div", {
        className: styles$t.cardContent
      }, this.props.cardFront, React.createElement(FontAwesomeIcon, {
        icon: ["fas", "undo"]
      })))), React.createElement("div", {
        style: height,
        className: styles$t.cardBack,
        onClick: function onClick(e) {
          return _this2.flip();
        }
      }, React.createElement(Tile, {
        quad: this.props.quad
      }, React.createElement("div", {
        className: styles$t.cardContent
      }, this.props.cardBack, React.createElement(FontAwesomeIcon, {
        icon: ["fas", "undo"]
      }))))));
    }
  }]);

  return FlipCard;
}(React.Component);
FlipCard.propTypes = {
  pos1Label: PropTypes.string,
  pos2Label: PropTypes.string
};

var css$y = ".styles_callout__1ePpz {\n  background-color: rgba(198,217,236,0.3);\n  border-radius: 6px;\n  padding: 10px;\n  width: 100%;\n  box-sizing: border-box;\n}\n";
var styles$u = {"callout":"styles_callout__1ePpz"};
styleInject(css$y);

function Callout(props) {
  var maxWidth = {
    maxWidth: props.maxWidth + "px"
  };
  return React.createElement("div", {
    className: styles$u.callout,
    style: maxWidth
  }, props.children);
}
Callout.propTypes = {
  maxWidth: PropTypes.number
};

var css$z = ".styles_drawer__WITv1 {\n  width: 90%;\n  border: 1px solid #eff2f5;\n  color: var(--dark-grey);\n  border-radius: 6px;\n  box-shadow: 0px 1px 6px 0px rgba(153,153,153,0.2);\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n  text-align: left;\n  transition: max-width 1s, height 1s, max-height 1s;\n  height: 95vh;\n  max-height: 100%;\n  position: relative;\n  padding: 15px 5px;\n  box-sizing: border-box;\n}\n\n.styles_closed__3nEdW {\n  height: 100%;\n  max-height: 95vh;\n}\n\n.styles_open__1EENW {\n  min-height: 200px;\n  height: 100%;\n}\n\n.styles_drawer__WITv1 .styles_arrow__3o4D9 {\n  height: 50px;\n  width: 50px;\n  position: absolute;\n  left: 100%;\n  margin: -13px 0 0 -15px;\n  z-index: 100;\n}\n\n.styles_drawer__WITv1 .styles_arrow__3o4D9 svg {\n  padding: 0;\n}\n\n.styles_icon__3wMom {\n  font-size: 1rem;\n  color: var(--dark-grey);\n  transition: transform 1s;\n}\n\n.styles_iconClosed__ff7Hr {\n  transform: rotate(180deg);\n\n}\n\n.styles_iconOpen__eFllZ {\n  transform: rotate(180deg);\n}\n\n.styles_fadeIn__XSNs1 {\n  -webkit-animation: styles_fadeIn__XSNs1 1s;\n          animation: styles_fadeIn__XSNs1 1s;\n  max-height: 95vh;\n  overflow-y: scroll;\n}\n\n.styles_fadeOut__mjd3i {\n  -webkit-animation: styles_fadeOut__mjd3i 1s;\n          animation: styles_fadeOut__mjd3i 1s;\n}\n\n@-webkit-keyframes styles_fadeIn__XSNs1 {\n  0%   { opacity: 0; }\n  60%  { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes styles_fadeIn__XSNs1 {\n  0%   { opacity: 0; }\n  60%  { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@-webkit-keyframes styles_fadeOut__mjd3i {\n  0%   { opacity: 1; }\n  60%  { opacity: 1; }\n  100% { opacity: 0; }\n}\n\n@keyframes styles_fadeOut__mjd3i {\n  0%   { opacity: 1; }\n  60%  { opacity: 1; }\n  100% { opacity: 0; }\n}\n";
var styles$v = {"drawer":"styles_drawer__WITv1","closed":"styles_closed__3nEdW","open":"styles_open__1EENW","arrow":"styles_arrow__3o4D9","icon":"styles_icon__3wMom","iconClosed":"styles_iconClosed__ff7Hr","iconOpen":"styles_iconOpen__eFllZ","fadeIn":"styles_fadeIn__XSNs1","fadeOut":"styles_fadeOut__mjd3i"};
styleInject(css$z);

var CreateDrawer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CreateDrawer, _React$Component);

  function CreateDrawer(props) {
    var _this;

    _classCallCheck(this, CreateDrawer);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateDrawer).call(this));
    _this.state = {
      contentVisible: props.startOpen
    };
    return _this;
  }

  _createClass(CreateDrawer, [{
    key: "_toggleContent",
    value: function _toggleContent(viewContent) {
      this.setState({
        contentVisible: !viewContent
      });
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      var width;

      if (this.state.contentVisible) {
        width = {
          maxWidth: this.props.maxWidthOpen
        };
      } else {
        width = {
          maxWidth: this.props.maxWidthClosed
        };
      }

      return React.createElement("div", {
        className: cx(styles$v.drawer, !this.state.contentVisible && styles$v.closed, this.state.contentVisible && styles$v.open),
        style: width
      }, React.createElement("a", {
        className: styles$v.arrow,
        onClick: function onClick() {
          return _this2._toggleContent(_this2.state.contentVisible);
        }
      }, React.createElement(FontAwesomeIcon, {
        className: cx(styles$v.icon, !this.state.contentVisible && styles$v.iconClosed),
        icon: ["fas", "chevron-circle-left"]
      })), React.createElement("span", {
        className: cx(!this.state.contentVisible && styles$v.fadeIn, this.state.contentVisible && styles$v.fadeOut)
      }, !this.state.contentVisible && this.props.closed), React.createElement("span", {
        className: cx(!this.state.contentVisible && styles$v.fadeOut, this.state.contentVisible && styles$v.fadeIn)
      }, this.state.contentVisible && this.props.open));
    }
  }]);

  return CreateDrawer;
}(React.Component);

function Drawer(props) {
  return React.createElement(CreateDrawer, {
    maxWidthOpen: props.maxWidthOpen,
    maxWidthClosed: props.maxWidthClosed,
    open: props.open,
    closed: props.closed,
    startOpen: props.startOpen
  });
}
Drawer.propTypes = {
  maxWidthOpen: PropTypes.number,
  maxWidthClosed: PropTypes.number,
  startOpen: PropTypes["boolean"]
};

var css$A = ".styles_navBar__2kfzg {\n  height: 60px;\n  min-height: 0px;\n  background: rgba(243,248,251,0.8);\n  overflow: hidden;\n  top: 0;\n  position: -webkit-sticky;\n  position: sticky;\n  width: 50px;\n  min-width: 50px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  z-index: 99;\n  display: flex;\n  flex-direction: column;\n  transition: min-width 0.3s ease-in-out, width 0.3s ease-in-out, height 0.3s ease-in-out, min-height 0.3s ease-in-out;\n  border-radius: 0 0 6px 0;\n}\n\n.styles_navOpen__2H6bG {\n  height: 100vh !important;\n  min-height: 300px;\n  overflow: visible;\n  min-width: 50px;\n}\n\n.styles_navBar__2kfzg::-webkit-scrollbar {\n  display: none;\n}\n\n.styles_navHeader__zD3Z5 {\n  background: var(--navy);\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  min-height: 59px;\n}\n\n.styles_navHeader__zD3Z5 h2 {\n  margin: 0;\n}\n\n.styles_navHeader__zD3Z5 > div {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  max-width: 200px;\n}\n\n.styles_navHeader__zD3Z5 div > p {\n  color: white;\n  line-height: 1rem;\n  font-size: 0.9rem;\n  margin: 0 0 5px 0;\n  text-align: center;\n  padding: 0 10px;\n}\n\n.styles_alignBottom__2xsl6 {\n  position: absolute;\n  bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  opacity: 0;\n  height: 0;\n  overflow: hidden;\n  justify-content: center;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  transition: height 0.1s, opacity 0.1s;\n}\n\n.styles_alignBottom__2xsl6 a {\n  margin-bottom: 10px;\n}\n\n.styles_alignBottom__2xsl6 svg {\n  width: 100%;\n  padding-bottom: 10px;\n}\n\n.styles_expanded__3lB7v {\n  height: 42px;\n  opacity: 1;\n  overflow: visible;\n}\n\n.styles_alignBottom__2xsl6 .styles_icon__3gASt {\n  width: 100%;\n}\n\n.styles_navBar__2kfzg ul {\n  padding: 0;\n}\n\n.styles_navBar__2kfzg a li span {\n  visibility: hidden;\n  opacity: 0;\n  background-color: var(--navy);\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 3px 6px;\n  position: absolute;\n  z-index: 100;\n  left: 55px;\n  transition: opacity 0.2s;\n  font-size: 0.9rem;\n}\n\n.styles_navBar__2kfzg a li:hover span {\n  visibility: visible;\n  opacity: 1;\n}\n\n.styles_navBar__2kfzg a {\n  cursor: pointer;\n  height: 42px;\n  text-decoration: none;\n  width: 100%;\n}\n\n.styles_navBar__2kfzg a li {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 42px;\n  border-left: 0px solid var(--navy);\n  padding: 0 3px;\n  background: transparent;\n  transition: padding-left 0.2s, border-left 0.2s, background 0.6s;\n}\n\n.styles_navBar__2kfzg a li:hover {\n  padding-left: 0px;\n  border-left: 3px solid var(--navy);\n  background: rgba(198,217,236,0.3);\n}\n\n.styles_navBar__2kfzg a p {\n  font-size: 0.9rem;\n}\n\n.styles_navHeader__zD3Z5 a {\n  margin: 0;\n  padding: 0;\n  height: 10px;\n}\n\n.styles_navBar__2kfzg .styles_icon__3gASt {\n  font-size: 1rem;\n  color: black;\n  width: 30px;\n  text-align: center;\n  padding: 0;\n  margin: 0 3px;\n}\n\n.styles_navHeader__zD3Z5 .styles_icon__3gASt {\n  color: white;\n  margin: 2px 0 0 0;\n  font-size: 0.7rem;\n  transition: transform 0.3s;\n}\n\n.styles_rotated__TvhrP {\n  transform: rotate(180deg);\n}\n\n@media only screen and (max-width: 900px) {\n  .styles_navBar__2kfzg .styles_icon__3gASt {\n    margin: 0 auto;\n  }\n\n  .styles_navBar__2kfzg {\n    height: 46px;\n    width: 40px;\n    min-width: 40px;\n  }\n\n  .styles_navHeader__zD3Z5 {\n    min-height: 50px;\n  }\n}\n";
var styles$w = {"navBar":"styles_navBar__2kfzg","navOpen":"styles_navOpen__2H6bG","navHeader":"styles_navHeader__zD3Z5","alignBottom":"styles_alignBottom__2xsl6","expanded":"styles_expanded__3lB7v","icon":"styles_icon__3gASt","rotated":"styles_rotated__TvhrP"};
styleInject(css$A);

var Nav =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Nav, _React$Component);

  function Nav(props) {
    var _this;

    _classCallCheck(this, Nav);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Nav).call(this));
    _this.state = {
      contentVisible: props.startOpen,
      width: 0
    };
    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(Nav, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateWindowDimensions();
      window.addEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: "updateWindowDimensions",
    value: function updateWindowDimensions() {
      this.setState({
        width: window.innerWidth
      });

      if (window.innerWidth > 900) {
        this.setState({
          contentVisible: true
        });
      }
    }
  }, {
    key: "_toggleContent",
    value: function _toggleContent(viewContent) {
      this.setState({
        contentVisible: !viewContent
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var allowCloseFunction;

      if (this.state.width < 900 && this.props.allowClosed) {
        allowCloseFunction = true;
      } else {
        allowCloseFunction = false;
      }

      function renderNavElement(icon, text) {
        return React.createElement("li", null, React.createElement(FontAwesomeIcon, {
          icon: ["fas", icon],
          className: styles$w.icon
        }), React.createElement("span", {
          role: "tooltip",
          id: "settings-label"
        }, text));
      }

      return React.createElement("div", {
        className: cx(this.state.contentVisible == true && styles$w.navOpen, styles$w.navBar)
      }, allowCloseFunction && React.createElement("a", {
        onClick: function onClick() {
          return _this2._toggleContent(_this2.state.contentVisible);
        }
      }, React.createElement("div", {
        className: styles$w.navHeader
      }, React.createElement(ProfilePercentagePhoto, {
        initials: this.props.userInitials,
        maxWidth: 27,
        name: "custom",
        profileScores: this.props.profileScores
      }), React.createElement(FontAwesomeIcon, {
        icon: ["fas", "chevron-down"],
        className: cx(styles$w.icon, this.state.contentVisible == true && styles$w.rotated)
      }))), allowCloseFunction == false && React.createElement("div", {
        className: styles$w.navHeader
      }, React.createElement(ProfilePercentagePhoto, {
        initials: this.props.userInitials,
        maxWidth: 27,
        name: "custom",
        profileScores: this.props.profileScores
      })), React.createElement("ul", {
        className: cx(styles$w.navContent)
      }, React.createElement("a", {
        href: "/",
        title: this.props.homeLabel,
        "aria-labelledby": "home-label"
      }, renderNavElement("home", this.props.homeLabel)), this.props.showResultsIcon && React.createElement("a", {
        href: "/thinker/hbdi-digital/four-quadrants",
        title: this.props.resultsLabel,
        "aria-labelledby": "results-label"
      }, renderNavElement("address-card", this.props.resultsLabel)), this.props.showProfileIcon && React.createElement("a", {
        href: "/thinker/profile",
        title: this.props.profileLabel,
        "aria-labelledby": "profile-label"
      }, renderNavElement("user", this.props.profileLabel)), React.createElement("a", {
        href: "/account/settings",
        title: this.props.settingsLabel,
        "aria-labelledby": "settings-label"
      }, renderNavElement("cog", this.props.settingsLabel)), React.createElement("ul", {
        className: cx(styles$w.alignBottom, this.state.contentVisible == true && styles$w.expanded)
      }, React.createElement("a", {
        href: "/logout",
        title: this.props.logoutLabel
      }, renderNavElement("sign-out-alt", this.props.logoutLabel)), React.createElement(Logo, {
        type: "icon",
        maxWidth: 20
      }))));
    }
  }]);

  return Nav;
}(React.Component);

var FortuneTeller =
/*#__PURE__*/
function (_Component) {
  _inherits(FortuneTeller, _Component);

  function FortuneTeller(props) {
    var _this;

    _classCallCheck(this, FortuneTeller);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(FortuneTeller).call(this, props));
    _this.red = null;
    _this.blue = null;
    _this.green = null;
    _this.yellow = null;
    _this.inside1 = null;
    _this.inside2 = null;
    _this.inside3 = null;
    _this.inside4 = null;
    _this.outside1 = null;
    _this.outside2 = null;
    _this.outside3 = null;
    _this.outside4 = null;
    _this.fortune = null;
    _this.state = {};
    return _this;
  }

  _createClass(FortuneTeller, [{
    key: "componentDidMount",
    value: function componentDidMount(props) {
      function createVertical(red, green, blue, yellow, inside1, inside2, inside3, inside4) {
        var vertical = new TimelineMax();
        vertical.to(red, 0.5, {
          attr: {
            points: "2320 1756 2139.49 974.7 1170 1860 1172 1941.48 2320 1756"
          }
        });
        vertical.to(green, 0.5, {
          attr: {
            points: "40 1746 204.51 970.2 1170.11 1860 1172 1936.98 40 1746"
          }
        }, "-=0.5");
        vertical.to(blue, 0.5, {
          attr: {
            points: "0 180 204.51 969.3 1172 70 1172 2.52 0 180"
          }
        }, "-=0.5");
        vertical.to(yellow, 0.5, {
          attr: {
            points: "2320 158 2139.49 973.8 1172 70 1172 7.02 2320 158"
          }
        }, "-=0.5");
        vertical.to(inside1, 0.5, {
          attr: {
            points: "1173.77 965.36 1173.52 0 2139.13 965.62 1173.77 965.36"
          }
        }, "-=0.5");
        vertical.to(inside2, 0.5, {
          attr: {
            points: "2138.37 966.38 1172.75 1932 1173 966.12"
          }
        }, "-=0.5");
        vertical.to(inside3, 0.5, {
          attr: {
            points: "1172.5 962.07 1172.75 1927.43 207.13 961.81 1172.5 962.07"
          }
        }, "-=0.5");
        vertical.to(inside4, 0.5, {
          attr: {
            points: "207.89 965.62 1173.51 0 1173.26 965.88"
          }
        }, "-=0.5");
        return vertical;
      }

      function createClose(red, green, blue, yellow, inside1, inside2, inside3, inside4) {
        var close = new TimelineMax();
        close.to(red, .5, {
          attr: {
            points: "2248 2184 2091.49 1094.7 1125.89 1094.35 1124 2061.48 2248 2184"
          }
        });
        close.to(green, .5, {
          attr: {
            points: "0 2179.5 156.51 1090.2 1122.11 1089.86 1124 2056.98 0 2179.5"
          }
        }, "-=0.5");
        close.to(blue, .5, {
          attr: {
            points: "0 0 156.51 1089.3 1122.11 1089.65 1124 122.52 0 0"
          }
        }, "-=0.5");
        close.to(yellow, .5, {
          attr: {
            points: "2248 4.5 2091.49 1093.8 1125.89 1094.14 1124 127.02 2248 4.5"
          }
        }, "-=0.5");
        close.to(inside1, 0.5, {
          attr: {
            points: "1125.77 1085.36 1125.52 120 2091.13 1085.62 1125.77 1085.36"
          }
        }, "-=0.5");
        close.to(inside2, 0.5, {
          attr: {
            points: "2090.37 1086.38 1124.75 2052 1125 1086.12"
          }
        }, "-=0.5");
        close.to(inside3, 0.5, {
          attr: {
            points: "1124.5 1082.07 1124.75 2047.43 159.13 1081.81 1124.5 1082.07"
          }
        }, "-=0.5");
        close.to(inside4, 0.5, {
          attr: {
            points: "159.89 1085.62 1125.51 120 1125.26 1085.88"
          }
        }, "-=0.5");
        return close;
      }

      function createSideways(red, green, blue, yellow, inside1, inside2, inside3, inside4) {
        var sideways = new TimelineMax();
        sideways.to(red, .5, {
          attr: {
            points: "1780.49 2401 1934.98 1211.7 1836.49 1211 967.49 2178.48 1780.49 2401"
          }
        });
        sideways.to(green, .5, {
          attr: {
            points: "180.49 2401 0 1207.2 103.49 1207 967.49 2173.98 180.49 2401"
          }
        }, "-=0.5");
        sideways.to(blue, .5, {
          attr: {
            points: "150.49 0 0 1206.3 103.49 1207 967.49 239.52 150.49 0"
          }
        }, "-=0.5");
        sideways.to(yellow, .5, {
          attr: {
            points: "1807.49 0 1934.98 1210.8 1836.49 1211 967.49 244.02 1807.49 0"
          }
        }, "-=0.5");
        sideways.to(inside1, 0.5, {
          attr: {
            points: "969.26 1202.36 969 237 1934.62 1202.62 969.26 1202.36"
          }
        }, "-=0.5");
        sideways.to(inside2, 0.5, {
          attr: {
            points: "1933.86 1203.38 968.24 2169 968.49 1203.12"
          }
        }, "-=0.5");
        sideways.to(inside3, 0.5, {
          attr: {
            points: "967.99 1199.07 968.24 2164.43 2.62 1198.81 967.99 1199.07"
          }
        }, "-=0.5");
        sideways.to(inside4, 0.5, {
          attr: {
            points: "3.38 1202.62 969 237 968.75 1202.88"
          }
        }, "-=0.5");
      }

      function removeColors(red, green, blue, yellow, inside1, inside2, inside3, inside4, outside1, outside2, outside3, outside4) {
        var remove = new TimelineMax();
        remove.to(red, .5, {
          opacity: 0,
          display: "none"
        });
        remove.to(green, .5, {
          opacity: 0,
          display: "none"
        }, "-=0.5");
        remove.to(blue, .5, {
          opacity: 0,
          display: "none"
        }, "-=0.5");
        remove.to(yellow, .5, {
          opacity: 0,
          display: "none"
        }, "-=0.5");
        remove.to(outside1, 0, {
          x: 50,
          y: -120
        });
        remove.to(outside2, 0, {
          x: 50,
          y: -120
        }, "-=0.5");
        remove.to(outside3, 0, {
          x: 50,
          y: -120
        }, "-=0.5");
        remove.to(outside4, 0, {
          x: 50,
          y: -120
        }, "-=0.5");
        remove.to(outside1, 0, {
          opacity: 1
        });
        remove.to(outside2, 0, {
          opacity: 1
        }, "-=0.5");
        remove.to(outside3, 0, {
          opacity: 1
        }, "-=0.5");
        remove.to(outside4, 0, {
          opacity: 1
        }, "-=0.5");
      }

      var stuff = [this.red, this.green, this.blue, this.yellow, this.inside1, this.inside2, this.inside3, this.inside4, this.outside1, this.outside2, this.outside3, this.outside4, this.fortune];
      this.yellowTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.yellowTimeline.eventCallback("onComplete", this.props.started);
      this.yellowTimeline.call(createClose, stuff);
      this.yellowTimeline.call(createSideways, stuff, this, "+=0.5");
      this.yellowTimeline.call(createClose, stuff, this, "+=0.5");
      this.yellowTimeline.call(createVertical, stuff, this, "+=0.5");
      this.yellowTimeline.call(createClose, stuff, this, "+=0.5");
      this.yellowTimeline.call(createSideways, stuff, this, "+=0.5");
      this.yellowTimeline.call(createClose, stuff, this, "+=0.5");
      this.yellowTimeline.call(createVertical, stuff, this, "+=0.5");
      this.yellowTimeline.call(createClose, stuff, this, "+=0.5");
      this.yellowTimeline.call(createSideways, stuff, this, "+=0.5");
      this.yellowTimeline.call(createClose, stuff, this, "+=0.5");
      this.yellowTimeline.call(createVertical, stuff, this, "+=0.5");
      this.redTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.redTimeline.eventCallback("onComplete", this.props.started);
      this.redTimeline.call(createClose, stuff);
      this.redTimeline.call(createVertical, stuff, this, "+=0.5");
      this.redTimeline.call(createClose, stuff, this, "+=0.5");
      this.redTimeline.call(createSideways, stuff, this, "+=0.5");
      this.redTimeline.call(createClose, stuff, this, "+=0.5");
      this.redTimeline.call(createVertical, stuff, this, "+=0.5");
      this.blueTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.blueTimeline.eventCallback("onComplete", this.props.started);
      this.blueTimeline.call(createClose, stuff);
      this.blueTimeline.call(createSideways, stuff, this, "+=0.5");
      this.blueTimeline.call(createClose, stuff, this, "+=0.5");
      this.blueTimeline.call(createVertical, stuff, this, "+=0.5");
      this.blueTimeline.call(createClose, stuff, this, "+=0.5");
      this.blueTimeline.call(createSideways, stuff, this, "+=0.5");
      this.blueTimeline.call(createClose, stuff, this, "+=0.5");
      this.blueTimeline.call(createVertical, stuff, this, "+=0.5");
      this.greenTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.greenTimeline.eventCallback("onComplete", this.props.started);
      this.greenTimeline.call(createClose, stuff);
      this.greenTimeline.call(createVertical, stuff, this, "+=0.5");
      this.greenTimeline.call(createClose, stuff, this, "+=0.5");
      this.greenTimeline.call(createSideways, stuff, this, "+=0.5");
      this.greenTimeline.call(createClose, stuff, this, "+=0.5");
      this.greenTimeline.call(createVertical, stuff, this, "+=0.5");
      this.greenTimeline.call(createClose, stuff, this, "+=0.5");
      this.greenTimeline.call(createSideways, stuff, this, "+=0.5");
      this.greenTimeline.call(createClose, stuff, this, "+=0.5");
      this.greenTimeline.call(createVertical, stuff, this, "+=0.5");
      this.oneTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.oneTimeline.call(removeColors, stuff);
      this.oneTimeline.to(this.inside1, 0.1, {
        scaleY: -1,
        scaleX: -1,
        fill: "#FDD742",
        transformOrigin: "center center"
      }, 0.5);
      this.oneTimeline.to(this.fortune, 0.5, {
        opacity: 1,
        display: "block"
      });
      this.twoTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.twoTimeline.call(removeColors, stuff);
      this.twoTimeline.to(this.inside2, 0.1, {
        scaleY: -1,
        scaleX: -1,
        fill: "#EF354E",
        transformOrigin: "center center"
      }, 0.5);
      this.twoTimeline.to(this.fortune, 0.5, {
        opacity: 1,
        display: "block"
      });
      this.threeTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.threeTimeline.call(removeColors, stuff);
      this.threeTimeline.to(this.inside3, 0.1, {
        scaleY: -1,
        scaleX: -1,
        fill: "#63C084",
        transformOrigin: "center center"
      }, 0.5);
      this.threeTimeline.to(this.fortune, 0.5, {
        opacity: 1,
        display: "block"
      });
      this.fourTimeline = new TimelineMax({
        repeat: 0,
        yoyo: true,
        paused: true
      });
      this.fourTimeline.call(removeColors, stuff);
      this.fourTimeline.to(this.inside4, 0.1, {
        scaleY: -1,
        scaleX: -1,
        fill: "#2CC3F0",
        transformOrigin: "center center"
      }, 0.5);
      this.fourTimeline.to(this.fortune, 0.5, {
        opacity: 1,
        display: "block"
      });
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      function randomFortune(fortunes, quadrant) {
        var items = fortunes[quadrant];
        return items[Math.floor(Math.random() * items.length)];
      }

      var maxWidth = {
        maxWidth: this.props.maxWidth + 'px',
        width: '100%'
      };

      return React.createElement(React.Fragment, null, React.createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "-100 0 2500 2500",
        style: maxWidth
      }, React.createElement("g", {
        id: "Layer_2",
        "data-name": "Layer 2"
      }, React.createElement("g", {
        id: "Layer_1-2",
        "data-name": "Layer 1"
      }, "/* inside flaps*/", React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.outside1 = x;
        },
        fill: "#FDD742",
        points: "1125.77 1085.36 1125.52 120 2091.13 1085.62 1125.77 1085.36",
        opacity: "0"
      }), React.createElement("polyline", {
        ref: function ref(x) {
          return _this2.outside2 = x;
        },
        fill: "#EF354E",
        points: "2090.37 1086.38 1124.75 2052 1125 1086.12",
        opacity: "0"
      }), React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.outside3 = x;
        },
        fill: "#63C084",
        points: "1124.5 1082.07 1124.75 2047.43 159.13 1081.81 1124.5 1082.07",
        opacity: "0"
      }), React.createElement("polyline", {
        ref: function ref(x) {
          return _this2.outside4 = x;
        },
        fill: "#2CC3F0",
        points: "159.89 1085.62 1125.51 120 1125.26 1085.88",
        opacity: "0"
      }), "/* outside flaps */", React.createElement("a", {
        onClick: function onClick() {
          _this2.oneTimeline.play();

          _this2.setState({
            quadrant: "D"
          });

          _this2.props.done && _this2.props.done();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.inside1 = x;
        },
        fill: "#C7A52E",
        points: "1125.77 1085.36 1125.52 120 2091.13 1085.62 1125.77 1085.36"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.twoTimeline.play();

          _this2.setState({
            quadrant: "C"
          });

          _this2.props.done && _this2.props.done();
        }
      }, React.createElement("polyline", {
        ref: function ref(x) {
          return _this2.inside2 = x;
        },
        fill: "#BA2031",
        points: "2090.37 1086.38 1124.75 2052 1125 1086.12"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.threeTimeline.play();

          _this2.setState({
            quadrant: "B"
          });

          _this2.props.done && _this2.props.done();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.inside3 = x;
        },
        fill: "#28A462",
        points: "1124.5 1082.07 1124.75 2047.43 159.13 1081.81 1124.5 1082.07"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.fourTimeline.play();

          _this2.setState({
            quadrant: "A"
          });

          _this2.props.done && _this2.props.done();
        }
      }, React.createElement("polyline", {
        ref: function ref(x) {
          return _this2.inside4 = x;
        },
        fill: "#0F8FB0",
        points: "159.89 1085.62 1125.51 120 1125.26 1085.88"
      })), "/* colors */", React.createElement("a", {
        onClick: function onClick() {
          _this2.redTimeline.play();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.red = x;
        },
        fill: "#EF354E",
        points: "2248 2184 2091.49 1094.7 1125.89 1094.35 1124 2061.48 2248 2184"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.yellowTimeline.play();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.yellow = x;
        },
        fill: "#FDD742",
        points: "2248 4.5 2091.49 1093.8 1125.89 1094.14 1124 127.02 2248 4.5"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.greenTimeline.play();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.green = x;
        },
        fill: "#63C084",
        points: "0 2179.5 156.51 1090.2 1122.11 1089.86 1124 2056.98 0 2179.5"
      })), React.createElement("a", {
        onClick: function onClick() {
          _this2.blueTimeline.play();
        }
      }, React.createElement("polygon", {
        ref: function ref(x) {
          return _this2.blue = x;
        },
        fill: "#2CC3F0",
        points: "0 0 156.51 1089.3 1122.11 1089.65 1124 122.52 0 0"
      }))))), React.createElement("div", {
        ref: function ref(x) {
          return _this2.fortune = x;
        },
        style: {
          display: "none",
          opacity: "0",
          maxWidth: this.props.maxWidth + "px",
          width: "100%",
          textAlign: "center",
          fontFamily: "sans-serif",
          fontSize: "16px"
        }
      }, React.createElement(Tile, null, this.state.quadrant && this.props.fortunes && randomFortune(this.props.fortunes, this.state.quadrant))));
    }
  }]);

  return FortuneTeller;
}(Component);

var css$B = ".styles_optionWrapper__181C6 input {\n\tmargin-right: 5px;\n}\n";
var styles$x = {"optionWrapper":"styles_optionWrapper__181C6"};
styleInject(css$B);

var RadioButtonQuiz =
/*#__PURE__*/
function (_React$Component) {
  _inherits(RadioButtonQuiz, _React$Component);

  function RadioButtonQuiz(props) {
    var _this;

    _classCallCheck(this, RadioButtonQuiz);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioButtonQuiz).call(this));
    _this.state = {
      isChecked: null
    };
    return _this;
  }

  _createClass(RadioButtonQuiz, [{
    key: "check",
    value: function check(option) {
      this.setState({
        isChecked: option
      });
    }
  }, {
    key: "render",
    value: function render(props) {
      var _this2 = this;

      return React.createElement("form", null, this.props.options.map(function (option) {
        var optionId = option.split(" ").join("");
        return React.createElement("div", {
          key: optionId,
          onClick: function onClick() {
            return _this2.check(option);
          },
          className: styles$x.optionWrapper
        }, React.createElement("input", {
          type: "radio",
          id: optionId,
          name: _this2.props.formName,
          value: option
        }), React.createElement("label", {
          "for": optionId
        }, option));
      }));
    }
  }]);

  return RadioButtonQuiz;
}(React.Component);
RadioButtonQuiz.propTypes = {
  options: PropTypes.node,
  formName: PropTypes.string
};

var styles$y = {
  mixins: mixins,
  quadrants: quadrants,
  variables: variables
};
var brains$1 = {
  list: list,
  map: map,
  traitClasses: traitClasses
};

export { styles$y as styles, brains$1 as brains, Tile, index as Header, Subheader, Button, ColorButton, GhostButton, index$1 as ReturnToHome, ProfileMap, Profile, ProfilePolygon, RadarChart, ProfilePercentagePhoto, index$2 as SocialBar, index$3 as Text, Modal, Loading, TextArea, Search, Form, index$4 as Table, ProgressBar, Logo, Clusters, AlertDisplay, Accordion, ScoreTable, Colors, ColorsByQuadrant, index$5 as Copyright, QuadrantLabel, Walkaround, Switch, DecoderRings, Sparkle, BrainyBunch, Tabs, Scale, FlipCard, Callout, Drawer, Nav, FortuneTeller, RadioButtonQuiz };
//# sourceMappingURL=component-library.module.js.map
