{"version":3,"sources":["components/markdown-content/markdown-content.module.css","components/adventure-page/adventure-page.module.css","components/home/home.module.css","App.module.css","components/home/index.js","content/readme.mdx","components/markdown-content/index.js","content/adventure/start.mdx","content/adventure/not-found.mdx","components/adventure-page/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","content","wrapper","tile","sparkle","resourcesList","pageWrapper","contentWrapper","tileWrapper","Home","react_default","a","createElement","className","styles","lib_default","options","horizontalOrder","component_library","title","react_router_dom","to","variant","buttonText","delay","href","index_es","icon","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","objectWithoutProperties","esm","assign","mdxType","id","maxWidth","parentName","isMDXComponent","pages","readme","Readme","MarkdownContent","useParams","Content","choices","north","mailbox","house","start_MDXLayout","start","not_found_MDXLayout","component","Start","startChoices","notFound","NotFound","notfoundChoices","AdventurePage","page","entries","map","_ref2","slicedToArray","key","value","concat","basename","App","tileOverlap","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3a4da9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"markdown-content_content__AOJD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"adventure-page_content__2VDfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"home_wrapper__hdWpl\",\"tile\":\"home_tile__1RODQ\",\"sparkle\":\"home_sparkle__3EAVB\",\"resourcesList\":\"home_resourcesList__2M5oH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"App_pageWrapper__3Xtym\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"tileWrapper\":\"App_tileWrapper__3Iv0P\"};","import React from \"react\";\nimport styles from \"./home.module.css\";\nimport Masonry from \"react-masonry-component\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {\n  Header,\n  Subheader,\n  Tile,\n  DecoderRings,\n  ColorButton\n} from \"axon-component-library\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Home() {\n  return (\n    <div className={styles.wrapper}>\n      <Masonry options={{ horizontalOrder: false }}>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Welcome\" />\n          <p>\n            To get started on the Herrmann Coding Exercise\n            use the link below to view the README. If you've\n            already read the README, you can play with the\n            choose your own adventure game with the tile\n            to the right.\n          </p>\n          <div>\n            <Link to=\"/content/readme\"><ColorButton variant=\"green\" buttonText=\"Readme\" /></Link>\n          </div>\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Start Your Adventure\" />\n          <p>\n            Click Below to start your \"Choose your own Adventure\" experience!\n          </p>\n          <div>\n            <Link to=\"/adventure/start\"><ColorButton variant=\"green\" buttonText=\"Begin\" /></Link>\n          </div>\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Track your Adventure\" />\n          <DecoderRings delay={1} />\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Resources\" />\n          <ul className={styles.resourcesList}>\n            <li>\n              <a href=\"\">\n                <FontAwesomeIcon icon={[\"fas\", \"question\"]} />\n                FAQs\n              </a>\n            </li>\n            <li>\n              <Link to=\"/content/frameworks\">\n                <FontAwesomeIcon icon={[\"fas\", \"book\"]} />\n                Frameworks in this App\n              </Link>\n            </li>\n            <li>\n              <a href=\"\">\n                <FontAwesomeIcon icon={[\"fas\", \"puzzle-piece\"]} />\n                Herrmann Component Library\n              </a>\n            </li>\n            <li>\n              <a href=\"\">\n                <FontAwesomeIcon icon={[\"fab\", \"github-alt\"]} />\n                GitHub Repository\n              </a>\n            </li>\n          </ul>\n        </Tile>\n      </Masonry>\n    </div>\n  );\n}\n\nexport default Home;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.25,\"time\":75000,\"words\":250}\n/* @jsx mdx */\nimport {BrainyBunch} from 'axon-component-library';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"welcome-to-the-herrmann-frontend-coding-exercise\"\n    }}>{`Welcome to the Herrmann Frontend Coding Exercise`}</h1>\n    <BrainyBunch maxWidth={400} mdxType=\"BrainyBunch\" />\n    <h2 {...{\n      \"id\": \"preparing-for-the-techincal-interview\"\n    }}>{`Preparing for the Techincal Interview`}</h2>\n    <h2 {...{\n      \"id\": \"during-the-technical-interview\"\n    }}>{`During the Technical Interview`}</h2>\n    <p>{`The technical interview itself will be a pair programming session where we\nexplore some of the following objectives in a free form manner. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`How can we create a UI/UX that lets users see the path they’ve taken through\ntheir adventure?`}</li>\n      <li parentName=\"ul\">{`How do we implement page tracking so we can chart that adventure?`}</li>\n      <li parentName=\"ul\">{`Where should we consider refactoring to better support those objectives?`}</li>\n      <li parentName=\"ul\">{`How can improve the general look and feel of the adventure content pages?`}</li>\n      <li parentName=\"ul\">{`What can we do to make sure the experience is accessible?`}</li>\n    </ul>\n    <p>{`We’ll give you alot of freedom to decide where you want to focus, but we will\nsteer the conversation to make sure we spend at least some time on primarily\ntechnical topics like data flow and management, and some time on primarily\ndesign related topics like UI/UX and accessibility.`}</p>\n    <p>{`The interview is less of a test and more of a conversation. You’re allowed to\nask for help, look things up on google, etc. You’re even allowed to ask the\ninterviewer to take over and help code things that might be related to a tool or\nframework you’re not very familar with. We’re not interested in trying to\nevaluate your detailed technical knowledge and experience with every tool here,\nbut instead want a sense of your general skillset, capabilities, and approach to\nproblem solving.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"preparing-for-the-techincal-interview\",\n    level: 2,\n    title: \"Preparing for the Techincal Interview\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"during-the-technical-interview\",\n    level: 2,\n    title: \"During the Technical Interview\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from \"react\";\nimport { Tile } from \"axon-component-library\";\nimport {useParams} from 'react-router-dom'\n\nimport styles from './markdown-content.module.css';\nimport Readme from '../../content/readme.mdx'\n\nconst pages = {\n  readme: Readme\n};\n\nfunction MarkdownContent() {\n  let {id} = useParams();\n  const Content = pages[id];\n\n  return (\n    <Tile className={styles.content}>\n      <Content />\n    </Tile>\n  );\n}\n\nexport default MarkdownContent;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.23,\"time\":13800,\"words\":46}\n/* @jsx mdx */\n\nexport const choices = {\n  north: \"Go north\",\n  mailbox: \"Open mailbox\",\n  house: \"Try to sneak into the house\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"west-of-house\"\n    }}>{`West of House`}</h1>\n    <p>{`You are standing in an open field west of a white house, with a boarded front\ndoor.`}</p>\n    <p>{`There is a small mailbox here.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.2,\"time\":12000,\"words\":40}\n/* @jsx mdx */\n\nexport const choices = {\n  start: \"Go back to the start\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"whoops\"\n    }}>{`Whoops`}</h1>\n    <p>{`Looks like you found you found yourself a part of the story we haven’t written\nyet. Use the back button to go back or you can`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import React from \"react\";\nimport { Tile } from \"axon-component-library\";\nimport {Link, useParams} from 'react-router-dom';\n\nimport styles from './adventure-page.module.css';\nimport Start, { choices as startChoices } from '../../content/adventure/start.mdx'\nimport NotFound, { choices as notfoundChoices } from '../../content/adventure/not-found.mdx'\n\n\nconst pages = {\n  start: {\n    component: Start,\n    choices: startChoices\n  },\n  notFound: {\n    component: NotFound,\n    choices: notfoundChoices\n  }\n};\n\nfunction AdventurePage(props) {\n  let { id } = useParams();\n  const page = pages[id] || pages.notFound\n  const Content = page.component;\n  const choices = page.choices\n\n  return (\n    <Tile className={styles.content}>\n      <Content />\n      {\n        Object.entries(choices).map(([key, value])=>{\n          return <div><Link to={`/adventure/${key}`}> {value} </Link></div>\n        })\n      }\n    </Tile>\n  );\n}\n\nexport default AdventurePage;\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Masonry from \"react-masonry-component\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Header } from \"axon-component-library\";\nimport 'axon-component-library/dist/global-styles.css';\n\nimport Home from \"./components/home\";\nimport MarkdownContent from \"./components/markdown-content\";\nimport AdventurePage from \"./components/adventure-page\";\n\nconst basename = process.env.NODE_ENV == \"production\" ? \"/front-end-adventure\" : \"/\"\nfunction App() {\n  return (\n    <Router basename={basename}>\n      <div className={styles.pageWrapper}>\n        <div className={styles.contentWrapper}>\n          <div className={styles.tileWrapper}>\n            <Header tileOverlap={true} />\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/content/:id\" component={MarkdownContent} />\n            <Route path=\"/adventure/:id\" component={AdventurePage} />\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}