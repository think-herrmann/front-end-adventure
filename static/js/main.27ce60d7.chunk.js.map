{"version":3,"sources":["components/markdown-content/markdown-content.module.css","components/adventure-page/adventure-page.module.css","reducers.js","components/home/home.module.css","content sync nonrecursive //.mdx$","content/app-overview.mdx","content/faqs.mdx","content/frameworks.mdx","content/key-problems.mdx","content/overview.mdx","content/adventure sync nonrecursive //.mdx$","content/adventure/computer_notes.mdx","content/adventure/east.mdx","content/adventure/empty_mailbox.mdx","content/adventure/enter_the_glitch.mdx","content/adventure/escape.mdx","content/adventure/first_hallway.mdx","content/adventure/guard_house.mdx","content/adventure/hall_with_window.mdx","content/adventure/headband.mdx","content/adventure/house.mdx","content/adventure/long_hallway.mdx","content/adventure/mailbox.mdx","content/adventure/north.mdx","content/adventure/not-found.mdx","content/adventure/outline.mdx","content/adventure/outside_experimental_room.mdx","content/adventure/outside_security_center.mdx","content/adventure/outside_server_room.mdx","content/adventure/release_all_subjects.mdx","content/adventure/rock.mdx","content/adventure/security_center.mdx","content/adventure/server_room.mdx","content/adventure/shimmering_clearing.mdx","content/adventure/start.mdx","content/adventure/terminal.mdx","content/adventure/the_glitch.mdx","content/adventure/windowless_hallway.mdx","store.js","components/home/index.js","components/markdown-content/index.js","components/adventure-page/index.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["module","exports","content","__webpack_require__","d","__webpack_exports__","pickupHeadband","pickupMap","freePrisoners","_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__","storyEvents","createSlice","name","initialState","hasHeadband","hasMap","hasFreedPrisoners","reducers","state","action","userPath","actions","reducer","rootReducer","wrapper","tile","sparkle","resourcesList","map","./app-overview.mdx","./faqs.mdx","./frameworks.mdx","./key-problems.mdx","./overview.mdx","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","_Users_andrewswerlick_Projects_work_herrmann_front_end_challenge_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to","parentName","isMDXComponent","tableOfContents","arguments","length","undefined","frontMatter","level","title","children","href","axon_component_library__WEBPACK_IMPORTED_MODULE_3__","maxWidth","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","./computer_notes.mdx","./east.mdx","./empty_mailbox.mdx","./enter_the_glitch.mdx","./escape.mdx","./first_hallway.mdx","./guard_house.mdx","./hall_with_window.mdx","./headband.mdx","./house.mdx","./long_hallway.mdx","./mailbox.mdx","./north.mdx","./not-found.mdx","./outline.mdx","./outside_experimental_room.mdx","./outside_security_center.mdx","./outside_server_room.mdx","./release_all_subjects.mdx","./rock.mdx","./security_center.mdx","./server_room.mdx","./shimmering_clearing.mdx","./start.mdx","./terminal.mdx","./the_glitch.mdx","./windowless_hallway.mdx","choices","baseChoices","house","headband","_ref2","shimmering_clearing","start","north","east","first_hallway","outside_security_center","outside_server_room","escape","outside_experimental_room","computer_notes","guard_house","long_hallway","_Users_andrewswerlick_Projects_work_herrmann_front_end_challenge_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hall_with_window","windowless_hallway","security_center","server_room","enter_the_glitch","terminal","the_glitch","_baseChoices","_Users_andrewswerlick_Projects_work_herrmann_front_end_challenge_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","release_all_subjects","rock","store","configureStore","Home","r","react_default","a","createElement","className","styles","lib_default","options","horizontalOrder","component_library","react_router_dom","variant","buttonText","delay","index_es","icon","pages","require","forEach","key","replace","default","MarkdownContent","useParams","Content","page","component","event","importAll","AdventurePage","dispatch","useDispatch","useSelector","useEffect","entries","slicedToArray","value","concat","basename","App","es","pageWrapper","contentWrapper","tileWrapper","tileOverlap","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27ce60d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"markdown-content_content__AOJD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"adventure-page_content__2VDfI\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nconst storyEvents = createSlice({\n  name: \"storyEvents\",\n  initialState: { hasHeadband: false, hasMap: false, hasFreedPrisoners: false },\n  reducers: {\n    pickupHeadband(state, action) {\n      state.hasHeadband = true;\n    },\n    pickupMap(state, action) {\n      state.hasMap = true;\n    },\n    freePrisoners(state, action) {\n      state.freePrisoners = true;\n    },\n  },\n});\n\n// TODO: Implement this reducer to store the path the\n// user takes through the story\nconst userPath = createSlice({\n  name: \"userPath\",\n  initialState: null,\n  reducers: {},\n});\n\nconst { actions, reducer } = storyEvents;\n\nexport const { pickupHeadband, pickupMap, freePrisoners } = actions;\n\nconst rootReducer = {\n  storyEvents: reducer,\n  userPath: userPath.reducer,\n};\n\nexport default rootReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"home_wrapper__hdWpl\",\"tile\":\"home_tile__1RODQ\",\"sparkle\":\"home_sparkle__3EAVB\",\"resourcesList\":\"home_resourcesList__2M5oH\"};","var map = {\n\t\"./app-overview.mdx\": 415,\n\t\"./faqs.mdx\": 416,\n\t\"./frameworks.mdx\": 417,\n\t\"./key-problems.mdx\": 418,\n\t\"./overview.mdx\": 419\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 414;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.49,\"time\":149400,\"words\":498}\n/* @jsx mdx */\nimport {Link} from 'react-router-dom';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"app-overview\"\n    }}>{`App Overview`}</h1>\n    <p>{`The application we use for our frontend challenge is a simple interactive\nfiction game. It lets the user progress through a story by following links from\npage to page. Some pages perform actions that unlock new parts of the story that\nwere not previously available. Some paths are dead ends which force the user to\nstart over from the beginning, or a key checkpoint. `}</p>\n    <p>{`This page provides technical detail as to how this app actually works. Depending\non your familarity with React, React Router, and Redux, there may be pieces that\ndon’t make complete sense. You can review the `}<Link to=\"/content/frameworks\" mdxType=\"Link\">{`Frameworks`}</Link>{` section for a brief overview on these,\nor simply save questions for the interview. Note a full understanding of all\nthese things isn’t necessary to start working on the application, as some key\nareas have been stubbed out with TODO’s to help interviewees. `}</p>\n    <p>{`The core of the app is the React component found in `}<inlineCode parentName=\"p\">{`components/adventure-page`}</inlineCode>{`.\nThis component loads content out of the `}<inlineCode parentName=\"p\">{`content/adventure`}</inlineCode>{` folder. It will load\nwhich ever file who’s base name matches the last part of the url (ie\n`}<inlineCode parentName=\"p\">{`/adventure/escape`}</inlineCode>{` loads `}<inlineCode parentName=\"p\">{`content/adventure/escape.mdx`}</inlineCode>{`)`}</p>\n    <p>{`The files in the adventure folder are MDX files. MDX is a format which allows\nyou to mix JSX and markdown, making it possible to mix markdown and custom\ncomponents, and easily integrate markdown into a React application.`}</p>\n    <p>{`In `}<inlineCode parentName=\"p\">{`components/adventure-page`}</inlineCode>{` we make use of webpacks dynamic imports feature\nto import every mdx file from `}<inlineCode parentName=\"p\">{`content/adventure`}</inlineCode>{`. This gives us an object with\nkeys corresponding to the base name of the mdx file, and values which are an\nobject of the following form`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  comoponent: // The React component generated by MDX, which renders the page\n              // markdown content\n  choices:    // An object of keys and strings which are used to build the links \n              // at the bottom of the page. \n  event:      // An optional function that will trigger story events which\n              // unlock new content and options\n}\n`}</code></pre>\n    <p>{`During runtime, the `}<inlineCode parentName=\"p\">{`AdventurePage`}</inlineCode>{` component does the following`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Extracts the current page name from the url using React Router’s\n`}<inlineCode parentName=\"li\">{`useParams`}</inlineCode>{` hook`}</li>\n      <li parentName=\"ul\">{`Uses that name to lookup the correct page in the `}<inlineCode parentName=\"li\">{`pages`}</inlineCode>{` object`}</li>\n      <li parentName=\"ul\">{`Fires the event (if present) as a side effect using React’s `}<inlineCode parentName=\"li\">{`useEffect`}</inlineCode>{` hook`}</li>\n      <li parentName=\"ul\">{`Renders the markdown content`}</li>\n      <li parentName=\"ul\">{`Renders the choices as React Router `}<inlineCode parentName=\"li\">{`Link`}</inlineCode>{` tags.`}</li>\n    </ul>\n    <p>{`The event functions Redux actions creators, which are processed by the reducers\ndefinted in `}<inlineCode parentName=\"p\">{`src/reducers.js`}</inlineCode>{`. These reducers store key information about the\nstate of the story, and which key events the user has or has not triggered.`}</p>\n    <p>{`The choices object can be either a static object, or a function. If it’s a\nfunction, the `}<inlineCode parentName=\"p\">{`Adventure`}</inlineCode>{` page component will pass in the `}<inlineCode parentName=\"p\">{`storyEvents`}</inlineCode>{` piece of\nthe redux store `}</p>\n    <p>{`Outside of the `}<inlineCode parentName=\"p\">{`AdventurePage`}</inlineCode>{` component, the `}<inlineCode parentName=\"p\">{`reducers.js`}</inlineCode>{` file, and the\n`}<inlineCode parentName=\"p\">{`adventure/content`}</inlineCode>{` files, most of the rest the application is just boilerplate\nand simple content pages built using react and markdown that aren’t really\nreleavnt to the interview.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.595,\"time\":95700,\"words\":319}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"faqs\"\n    }}>{`FAQS`}</h1>\n    <h2 {...{\n      \"id\": \"im-just-starting-to-learn-javascriptreactreduxetc-can-i-still-succeed-in-the-interview\"\n    }}>{`I’m just starting to learn Javascript/React/Redux/etc. Can I still succeed in the interview?`}</h2>\n    <p>{`Definitely. We recognize that the front end role can mean alot of different\nthings to different people, and that people come to the table with different\nmixes of technical and design related skills. We’ve tried to develop a process\nthat lets them show off both so we get a full picture of each candidate. If\nyou’re a more design oriented developer, then you can focus on that part of the\nchallenge. We’ll still want to spend sometime on the technical, just to\nunderstand where you are at, but that’s not the only thing we’re interested in.`}</p>\n    <h2 {...{\n      \"id\": \"what-skills-do-i-need-to-be-successful-in-this-interview\"\n    }}>{`What skills do I need to be successful in this interview?`}</h2>\n    <p>{`You should be familar enough with git/github to get this project running locally\non your machine prior to the interview. You should also know at least some\njavascript, enough to read and follow existing code at a high level. You also\nneed to be capable of indepdent design, and familar with writing static CSS and\nHTML. `}</p>\n    <h2 {...{\n      \"id\": \"how-long-am-i-expected-to-spend-preparing-for-this-interview\"\n    }}>{`How long am I expected to spend preparing for this interview?`}</h2>\n    <p>{`We suggest you try not to take more than 2 hours. You’re not expected to have\nanything done by the time the interview starts, just expected to be able to\nimmediately launch into a productive conversation. Get familar with the app, the\nkey problems, spend a little time thinking about high level solutions, and then\nyou should be good.`}</p>\n    <h2 {...{\n      \"id\": \"does-an-app-like-this-really-need-all-these-frameworks\"\n    }}>{`Does an app like this really need all these frameworks?`}</h2>\n    <p>{`Probably not, but we wanted something that looks similar to the kinds of\napplications you’ll work with on the job. The tools and frameworks used here are\nmostly ones we use frequently on our production apps. They may be overkill for a\nsmall app like this one, but we wanted a representative case study for the interview`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"im-just-starting-to-learn-javascriptreactreduxetc-can-i-still-succeed-in-the-interview\",\n    level: 2,\n    title: \"I’m just starting to learn Javascript/React/Redux/etc. Can I still succeed in the interview?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"what-skills-do-i-need-to-be-successful-in-this-interview\",\n    level: 2,\n    title: \"What skills do I need to be successful in this interview?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"how-long-am-i-expected-to-spend-preparing-for-this-interview\",\n    level: 2,\n    title: \"How long am I expected to spend preparing for this interview?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"does-an-app-like-this-really-need-all-these-frameworks\",\n    level: 2,\n    title: \"Does an app like this really need all these frameworks?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.425,\"time\":85500,\"words\":285}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"frameworks-used-in-this-app\"\n    }}>{`Frameworks Used in This App`}</h1>\n    <p>{`To build this app, we use a number of different tools and frameworks. Most of\nthem are tools we also use in or production applications. `}<strong parentName=\"p\">{`You do NOT have\nto learn all of these tools to be successfull in the technical interview.`}</strong>{` The\ninterviewer will help you with any tool specific coding, or we’ll focus the\nconversation on more general design and architecture questions. However if\nyou’re interested we have outlined the tools and links to their documentation\nsite here, along with some explanation of why we use these`}</p>\n    <h2 {...{\n      \"id\": \"react-router\"\n    }}>{`React Router`}</h2>\n    <p>{`React router is a client side library that handles letting users navigate around\nyour application to different urls without a full page refresh. This way, if\nyour application loads alot of data from the server, you can load it once, and\nnot have to reload while the user navigates. It also creates a faster feeling\nexperience since the user never sees a full page refresh.\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://reactrouter.com/web/guides/quick-start\"\n      }}>{`Docs`}</a>{` `}</p>\n    <h2 {...{\n      \"id\": \"redux--redux-toolkit\"\n    }}>{`Redux / Redux Toolkit`}</h2>\n    <p>{`Redux is a tool to manage the “state” of your application. State is any data\nthat comes from the server, or is generated by user behaviors and actions. Redux\ncreates a single “global” store for state that any component can easily access.\nThis way you don’t have to pass props down through the entire React component\ntree. Redux includes Redux Toolkit, which is a set of utilities that make using\nredux easier`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://redux.js.org/\"\n        }}>{`Main Docs`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://redux-toolkit.js.org/\"\n        }}>{`Toolkit Docs`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-redux.js.org/\"\n        }}>{`React Redux Integration Utilities`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"mdx\"\n    }}>{`MDX`}</h2>\n    <p>{`MDX is a file format and associated parsers that allows you to mix JSX and\nmarkdown. It makes it easier to create rich content experiences that easily\nintegrate with react. `}<a parentName=\"p\" {...{\n        \"href\": \"https://mdxjs.com/\"\n      }}>{`Docs`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"react-router\",\n    level: 2,\n    title: \"React Router\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"redux--redux-toolkit\",\n    level: 2,\n    title: \"Redux / Redux Toolkit\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"mdx\",\n    level: 2,\n    title: \"MDX\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.255,\"time\":75300,\"words\":251}\n/* @jsx mdx */\nimport {Link} from 'react-router-dom';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"key-problems\"\n    }}>{`Key Problems`}</h1>\n    <p>{`Below are outlined some of the key problems we’d like you to consider and\ndiscuss during the technical interview. As a reminder you don’t have to address\nthem all, but come prepared to talk about a mix of technical and design related\nissues, depending on your skillset`}</p>\n    <h2 {...{\n      \"id\": \"tracking-and-visualizing-a-users-path\"\n    }}>{`Tracking and Visualizing a users path`}</h2>\n    <p>{`The interactive fiction game at the heart of this app has many different paths\nthe user can take through the story, though only one of those paths leads to a\nwinning scenario. We want a visualization that will help users see the path\nthey’ve taken so far. During the interview we’ll ask you to talk about what that\nvisualization might look like, and how to use react and redux to generate data\nneeded for that visualization.`}</p>\n    <p>{`If it’s helpful for you to understand the story in creating a visualization, you\ncan review the outline of the story at `}<Link to=\"/content/story-outline\" mdxType=\"Link\">{`Story\nOutline`}</Link>{` `}</p>\n    <p>{`If you want a sense of our existing brand and styling tools and guidelines, you\ncan check out our `}<a parentName=\"p\" {...{\n        \"href\": \"https://myelin.herrmannsolutions.net/\"\n      }}>{`Component Library`}</a></p>\n    <h2 {...{\n      \"id\": \"improve-the-story-ui\"\n    }}>{`Improve the Story UI`}</h2>\n    <p>{`The story UI is fairly sparse and simplistic. We’ll ask you how you might\npropose improving that UI, and then make some key changes to implement your\nfixes is real time`}</p>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}>{`Accessibility`}</h2>\n    <p>{`What changes need to be made to the app as is to improve accessibilty. As we add\nother features like the story tracking, how do we ensure it remains accessible?`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"tracking-and-visualizing-a-users-path\",\n    level: 2,\n    title: \"Tracking and Visualizing a users path\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"improve-the-story-ui\",\n    level: 2,\n    title: \"Improve the Story UI\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"accessibility\",\n    level: 2,\n    title: \"Accessibility\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.785,\"time\":167100.00000000003,\"words\":557}\n/* @jsx mdx */\nimport {BrainyBunch} from 'axon-component-library';\nimport {Link} from 'react-router-dom';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"welcome-to-the-herrmann-frontend-coding-exercise\"\n    }}>{`Welcome to the Herrmann Frontend Coding Exercise`}</h1>\n    <BrainyBunch maxWidth={400} mdxType=\"BrainyBunch\" />\n    <p>{`This page explains what to expect and how to prepare for your technical\ninterview with Herrmann. Here at Herrmann we do our technical interviews as pair\nprogramming sessions, where you work together with an interview to solve some\ninteresting problems in a made up application. You are not expected to prepare\nextensively for the interview, and the process is meant to be fairly collaborative `}</p>\n    <h2 {...{\n      \"id\": \"preparing-for-the-techincal-interview\"\n    }}>{`Preparing for the Techincal Interview`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Go to `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/think-herrmann/front-end-adventure\"\n        }}>{`https://github.com/think-herrmann/front-end-adventure`}</a></li>\n      <li parentName=\"ul\">{`Clone the repp and follow the installation instructions to get the application\nand running `}</li>\n      <li parentName=\"ul\">{`Spend 15 - 30 minutes getting familar with the basic flow and setup of the\napp. You can read `}<Link to=\"/content/app-overview\" mdxType=\"Link\">{`App Overview`}</Link>{` for a high level explanation`}</li>\n      <li parentName=\"ul\">{`Read through the FAQs at `}<Link to=\"/content/faqs\" mdxType=\"Link\">{`FAQs`}</Link></li>\n      <li parentName=\"ul\">{`Read through the `}<Link to=\"/content/key-problems\" mdxType=\"Link\">{`Key Problems`}</Link>{` page to\nunderstand the key problems and areas we’ll discuss during the interview`}</li>\n      <li parentName=\"ul\">{`Spend 30–45 minutes thinking through some high level solutions to those\nproblems. You don’t need to do any implementation work outside the interview,\nbut we want you to be prepared to hit the ground running and make some initial\nsuggestions as to the direction you want to interview to go in. You don’t need\na plan for every problem, just pick the ones you feel best demonstrate your\nskillset and capabilities. `}</li>\n      <li parentName=\"ul\">{`Make sure you have the app running on a computer you can join a zoom video call\nfrom, and do a screen share.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"during-the-technical-interview\"\n    }}>{`During the Technical Interview`}</h2>\n    <p>{`The technical interview itself will be a pair programming session where we\nexplore some of the following objectives in a free form manner. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`How can we create a UI/UX that lets users see the path they’ve taken through\ntheir adventure?`}</li>\n      <li parentName=\"ul\">{`How do we implement page tracking so we can chart that adventure?`}</li>\n      <li parentName=\"ul\">{`Where should we consider refactoring to better support those objectives?`}</li>\n      <li parentName=\"ul\">{`How can improve the general look and feel of the adventure content pages?`}</li>\n      <li parentName=\"ul\">{`What can we do to make sure the experience is accessible?`}</li>\n    </ul>\n    <p>{`You can get more detail about these problems by reading `}<Link to=\"/content/key-problems\" mdxType=\"Link\">{`Key Problems`}</Link></p>\n    <p>{`We’ll give you alot of freedom to decide where you want to focus, but we will\nsteer the conversation to make sure we spend at least some time on primarily\ntechnical topics like data flow and management, and some time on primarily\ndesign related topics like UI/UX and accessibility.`}</p>\n    <p>{`The interview is less of a test and more of a conversation. You’re allowed to\nask for help, look things up on google, etc. You’re even allowed to ask the\ninterviewer to take over and help code things that might be related to a tool or\nframework you’re not very familar with. We’re not interested in trying to\nevaluate your detailed technical knowledge and experience with every tool here,\nbut instead want a sense of your general skillset, capabilities, and approach to\nproblem solving and communication.`}</p>\n    <p>{`Unless otherwise arranged or discussed beforehand, we will expect you to have\nthe app running on your computer and you will be the one writing most of the\ncode. As needed the interviewer can help with snippets sent over zoom chat, but\nyou’ll still need to be the one copying and editing.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"preparing-for-the-techincal-interview\",\n    level: 2,\n    title: \"Preparing for the Techincal Interview\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"during-the-technical-interview\",\n    level: 2,\n    title: \"During the Technical Interview\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","var map = {\n\t\"./computer_notes.mdx\": 421,\n\t\"./east.mdx\": 422,\n\t\"./empty_mailbox.mdx\": 423,\n\t\"./enter_the_glitch.mdx\": 424,\n\t\"./escape.mdx\": 425,\n\t\"./first_hallway.mdx\": 426,\n\t\"./guard_house.mdx\": 427,\n\t\"./hall_with_window.mdx\": 428,\n\t\"./headband.mdx\": 429,\n\t\"./house.mdx\": 430,\n\t\"./long_hallway.mdx\": 431,\n\t\"./mailbox.mdx\": 432,\n\t\"./north.mdx\": 433,\n\t\"./not-found.mdx\": 434,\n\t\"./outline.mdx\": 435,\n\t\"./outside_experimental_room.mdx\": 436,\n\t\"./outside_security_center.mdx\": 437,\n\t\"./outside_server_room.mdx\": 438,\n\t\"./release_all_subjects.mdx\": 439,\n\t\"./rock.mdx\": 440,\n\t\"./security_center.mdx\": 441,\n\t\"./server_room.mdx\": 442,\n\t\"./shimmering_clearing.mdx\": 443,\n\t\"./start.mdx\": 444,\n\t\"./terminal.mdx\": 445,\n\t\"./the_glitch.mdx\": 446,\n\t\"./windowless_hallway.mdx\": 447\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 420;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.085,\"time\":65099.99999999999,\"words\":217}\n/* @jsx mdx */\n\nexport const choices = ({\n  hasHeadband\n}) => {\n  const baseChoices = {\n    house: \"Leave the computer\"\n  };\n\n  if (!hasHeadband) {\n    baseChoices.headband = \"Hit the button\";\n  }\n\n  return baseChoices;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"at-the-computer\"\n    }}>{`At the Computer`}</h1>\n    <p>{`You sit down at the computer. The screen is open with a diagram and some sort of\nschematics. It looks like a headband, with all sorts of wires running through\nit. At the bottom, the page is labeled 3/3. You hit the back arrow key to see\nthe previous page. On it you see the following text`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`using components harvested from the split stream ensures the device has the\nsame underlying properties from the glitch. When activitated it safely\ndissociates the wearer from their simulated body, ensuring the body can safely\npass through the glitch without disrupting consciousness. While the system can\nhandle duplicate copies of non-essential simulation data, duplicating the\nsubject causes key functions to crash, eventually causing a full panic which\nends the simulation. `}</p>\n    </blockquote>\n    <p>{`You try to go back again to read the first page, but when you do, it just says `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`FILE CORRUPTED, DATA NOT FOUND`}</p>\n    </blockquote>\n    <p>{`You return the computer back to the page with the schematic. This time you\nnotice a small button at the bottom of the page that says `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Unlock device safe`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.625,\"time\":37500,\"words\":125}\n/* @jsx mdx */\n\nexport const choices = {\n  shimmering_clearing: \"Continue to the clearing\",\n  start: \"Go back to the house\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"head-east\"\n    }}>{`Head East`}</h1>\n    <p>{`You head east following the map. You pass a few small trees and and a stream and\nsome bushes, all of which are marked on the map. According to the map you’re\nheaded to some sort of landmark, but you can’t tell what. The map shows a\npicture of a strange blue star, with strange symbols you can’t read around it.`}</p>\n    <p>{`As you grow close you can see you’re headed for a clearing. The air ahead looks\nstrange, almost like it’s shimmering. You can see the stream splits in two up\nahead. The path continues with a small bridge leading over one of the branches.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.145,\"time\":8700,\"words\":29}\n/* @jsx mdx */\n\nexport const choices = {\n  north: \"Go north\",\n  east: \"Go east\",\n  house: \"Climb into the house through the window\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"open-the-mailbox\"\n    }}>{`Open the mailbox`}</h1>\n    <p>{`The mailbox is empty now.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.65,\"time\":39000,\"words\":130}\n/* @jsx mdx */\n\nexport const choices = {\n  start: \"Back to the start\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"entering-the-glitch\"\n    }}>{`Entering the Glitch`}</h1>\n    <p>{`You cautiously walk towards the shimmering. As you get closer you start to feel\na strange tingle. Your thoughts start to feel fuzzy and blurred. You start to\nwonder if this might be a mistake, but suddenly current of the stream seems far\nstronger than you imagined. You find yourself moving forward, even against your\nwill. The tingle turns into a buzz, and now your head is throbbing in pain.\nThen, somehow, your entire conciouness splits, and you can see yourself,\nstanding next to yourself. Your mind goes blank with the shock of it, and then\nyou black out.`}</p>\n    <p>{`Maybe that wasn’t such a good idea. Let’s go back to the start and try again`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.195,\"time\":71700,\"words\":239}\n/* @jsx mdx */\n\nexport const choices = {\n  first_hallway: \"Go out the door\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"escape\"\n    }}>{`Escape`}</h1>\n    <p>{`You cautiously walk towards the shimmering. As you get closer you start to feel\na strange tingle. Then the headband you’re wearing starts to hum and pulse. You start\nto feel a strange sort of dissassociation, as if you’re leaving your own body.\nThe tingle fades and you realize you’re somehow looking at yourself from the\noutside as your body continues towards the split. You see your body double, and\nthen there are two of you, standing next to eachother in the two different\nstreams. `}</p>\n    <p>{`The air fills with a strange sound, and then the landscape seems to melt before\nyour eyes. It goes dark. For a moment, you feel lost and disoriented, but then\nyou feel yourself breathing, and you realize you’re back in your body. You open\nyour eyes and see a plain white tile ceiling above you, and a bright flourescent\nlight. `}</p>\n    <p>{`You flex your fingers and toes, and then try to slowly sit up. The room you’re\nin is empty excepting a few monitors and your bed. You’re hooked up to the\nmonitors with some sort of strange wires. You reach up to touch your head, and\nrealize there’s a headband on it, not unlike the one you were wearing earlier.`}</p>\n    <p>{`You remove it and stand up. Looking around you can see the room has one exit,\nstraight in front of you.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.59,\"time\":35400,\"words\":118}\n/* @jsx mdx */\n\nexport const choices = {\n  outside_security_center: \"Go around the corner towards the security center\",\n  outside_server_room: \"Go around the corner towards the server room\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"hallway-outside-the-room\"\n    }}>{`Hallway outside the room`}</h1>\n    <p>{`You are standing in the middle of a hallway in front of the door outside the\nroom you woke up in. There’s a quiet industrial sounding whir of industrial air\nconditioning and ventalization. The walls are a institutional white, with eeire,\ntoo dark flourscents above. The hallway goes off to your left and to your right.\nYou see a sign in front of you`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`← Server Room\nSecurity Center →`}</p>\n    </blockquote>\n    <p>{`In both directions the hall turns a corner before heading up and away from where\nyou stand.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.51,\"time\":30600,\"words\":102}\n/* @jsx mdx */\n\nexport const choices = {\n  escape: \"Oops, lets go back to where you woke up\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"guard-house\"\n    }}>{`Guard House`}</h1>\n    <p>{`You crawl along the ground towards the guard house, hoping that if you stay low\nto the ground, neither guard will see you. You’re just past the house when one\nof them looks up. You freeze. He looks at you and says \"Hey, where are you\ngoing?\". You stand up to run, but before you get two steps you feel a sharp pain\nin your back and then electricy runs through your body. You collapse on the\nground and it fades to black`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.385,\"time\":23100,\"words\":77}\n/* @jsx mdx */\n\nexport const choices = {\n  outside_server_room: \"Head to the server room\",\n  outside_experimental_room: \"Head to the experimental room\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"hall-with-window\"\n    }}>{`Hall with window`}</h1>\n    <p>{`This hall has a long window that spans almost the whole hallway. It’s dingy, and\ndirty, and the glass is frosted so you can’t really see out of it, but it’s nice\ntoo have at least some natural light. `}</p>\n    <p>{`On the opposite wall there is a sign`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`← Experimental Room\nServer Room →`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.515,\"time\":30900.000000000004,\"words\":103}\n/* @jsx mdx */\n\nexport const choices = {\n  house: \"Get up from the computer\"\n};\nexport { pickupHeadband as event } from '../../reducers';\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"the-headband\"\n    }}>{`The Headband`}</h1>\n    <p>{`When you press the button a drawer you didn’t see before slides out from the\ntable. In the drawer, you see a headband, just like the one on the screen. It\nseems to shimmer strangely. `}</p>\n    <p>{`You pick it up and feel a strange buzzing in your hands. There’s a hinge in the\nmiddle of the band that allows it to fold up small enough to fit into your\npocket. `}</p>\n    <p>{`You fold it over itself and and slip it into your front pocket.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.36,\"time\":21599.999999999996,\"words\":72}\n/* @jsx mdx */\n\nexport const choices = {\n  start: \"Climb back out through the window\",\n  computer_notes: \"Check out the computer\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"inside-the-house\"\n    }}>{`Inside the House`}</h1>\n    <p>{`You stand inside the house now. It’s a small single room house, with a table, an\nempty bookshelf, and a rotted wooden bed. On the table is a strange glowing\ncomputer terminal. However the terminal isn’t connected to any sort of power\nsource, so you’re not sure how its working.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.445,\"time\":26700,\"words\":89}\n/* @jsx mdx */\n\nexport const choices = {\n  guard_house: \"Try to sneak past the guard house\",\n  long_hallway: \"Go back to the hallway intersection\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"long-hallway\"\n    }}>{`Long Hallway`}</h1>\n    <p>{`You walk down the long hallway, approaching the guard house. You try to be quiet\nand stick to the shadows, but eventually you get close enough that you feel like\nyou can’t go any farther without attracting attention.`}</p>\n    <p>{`From here you can see two guards in the guard house, playing a game of cards.\nPast them is a door that clearly leads outside the building. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.535,\"time\":32100,\"words\":107}\n/* @jsx mdx */\n\nexport const choices = {\n  north: \"Go north\",\n  east: \"Go east\",\n  house: \"Climb into the house through the window\"\n};\nexport { pickupMap as event } from '../../reducers';\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"open-the-mailbox\"\n    }}>{`Open the mailbox`}</h1>\n    <p>{`You open the mailbox and reach inside. You find a small, yellowed piece of paper\nwith a map drawn on it. It looks like it’s meant to be a map of the surrounding\narea, but strangely it has 2 paths drawn on it, one leading north and one\nleading east. You look up again, and now, suddenly you do see a second path\nleading off to the east. You’re certain that wasn’t there when you looked\nbefore.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.55,\"time\":33000,\"words\":110}\n/* @jsx mdx */\n\nexport const choices = {\n  start: \"Continue to the house\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"going-north\"\n    }}>{`Going North`}</h1>\n    <p>{`You start walking north along the path. It’s leads straight ahead through the\nwide open field. Off to either side you see nothing bug grass for miles. There’s\na nice breeze and the temperature is pleasant, but the landscape is eeirly\nempty. `}</p>\n    <p>{`After about half and hour you start to see something ahead of you in the\ndistance, another small house, not much unlike the one you started from. As you\nget closer you start to get the strange feeling it is the one you started from.\nWait, have you some how gone in a circle?`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.2,\"time\":12000,\"words\":40}\n/* @jsx mdx */\n\nexport const choices = {\n  start: \"Go back to the start\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"whoops\"\n    }}>{`Whoops`}</h1>\n    <p>{`Looks like you found you found yourself a part of the story we haven’t written\nyet. Use the back button to go back or you can`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.34,\"time\":80400,\"words\":268}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"spoiler-alert\"\n    }}>{`Spoiler Alert!!!`}</h1>\n    <p>{`This is the outline for the actual story, if you want to explore the different\npaths or if understanding the actual story helps you create a vizualization.\nThere are basically two initial paths, the house path, where you discover what’s\ngoing on by going inside the house and discovering a mysterious computer, and\nthe electronic diary within it, or the east path, where you discover what’s\ngoing on by exploring outside until you come across a mysterious glitch that\ngives you a clue as to what’s happening.`}</p>\n    <p>{`Both of these paths merge when you figure out how to escape from the simulation\nyou’re trapped in. Then we start the escape sequence where you attempt to escape\nfrom the facility. Here there are a number of dead end paths that lead to your\ncapture again, and only one path where you narrowly escape.`}</p>\n    <h2 {...{\n      \"id\": \"simulation-outline\"\n    }}>{`Simulation Outline`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`- start \n-- north \n-- start \n-- house \n   -- computer_notes \n        -- headband \n        -- house \n      -- house \n  -- start \n-- mailbox \n   -- north \n   -- house \n   -- east \n      -- shimmering_clearing  \n         -- house \n         -- the_glitch \n            -- rock \n               -- enter the_glitch \n                  -- start \n               -- escape\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"escape-outline\"\n    }}>{`Escape Outline`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`-- escape (x)\n   -- first_hallway (x)\n      -- outside_security_center (x)\n          -- security_center (x)\n             -- start (x)\n          -- windowless hallway (x)\n             -- outside_security_center (x)\n             -- outside_experimental_room (x)\n                -- long_hallway (x)\n                -- hall_with_window (x)\n             -- long_hallway (x)\n                -- guard_house (x)\n                -- start (x)\n                -- outside\n          -- first_hallway (x)\n   -- outside_server_room (x)\n         -- server_room (x)\n            -- terminal (x)\n               -- release_all_subjects (x)\n            -- outside_server_room (x)\n         -- hall_with_window (x)\n            -- outside_experimental_room (x)\n            -- outside_server_room (x)\n         -- first_hallway (x)\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"simulation-outline\",\n    level: 2,\n    title: \"Simulation Outline\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"escape-outline\",\n    level: 2,\n    title: \"Escape Outline\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.825,\"time\":49500,\"words\":165}\n/* @jsx mdx */\n\nexport const choices = {\n  long_hallway: \"Head towards the intersection\",\n  hall_with_window: \"Head towards the hall with a window\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"outside-experimental-room\"\n    }}>{`Outside Experimental Room`}</h1>\n    <p>{`You come up to the door to the room, and peer in through the window at the top.\nYou see dozens of beds with people lying in them, hooked up to a strange\nassortment of tubes, and wearing headbands like you were earlier. Otherwise the\nroom looks empty. `}</p>\n    <p>{`The door is locked, but through the window you can see the headbands all have\nsmall wires coming out of them and leading up the the ceiling. The wires join\ntogether and join into a bigger bundle, heading to an opening in the ceiling at\nthe corner of the room. You can’t be sure, but it appears as if the bundle heads\nout towards the hall with a window that heads to the right, back towards the\nroom where you woke up.`}</p>\n    <p>{`In the other direction, you see the hallway with the T intersection.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.57,\"time\":34199.99999999999,\"words\":114}\n/* @jsx mdx */\n\nexport const choices = {\n  windowless_hallway: \"Head straight down the windowless hallway\",\n  security_center: \"Go into the security center\",\n  first_hallway: \"Head back to the room where you woke up\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"outside-the-security-center\"\n    }}>{`Outside the security center`}</h1>\n    <p>{`As you approach the security center you hear voices come from inside. You press\nclose against the wall and carefully peer in through the window in the door. You\nsee a handful of uniformed guards sitting at terminals. They’re chatting amongst\nthemselves, and it doesn’t appear that anyone is actually watching the screens\nthough. `}</p>\n    <p>{`Behind you, the hall goes around a corner back to the room you wake up in. In\nfront you the hall continues to a “T” fork. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.255,\"time\":15300,\"words\":51}\n/* @jsx mdx */\n\nexport const choices = {\n  server_room: \"Enter server room\",\n  hall_with_window: \"Walk back throgh the hall\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"outside-server-room\"\n    }}>{`Outside server room`}</h1>\n    <p>{`You stand outside the server room. You hear the hum of air cooling and\nmachinary. Peering through the window in the door, it looks deserted other than\nthe rows of machines.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.85,\"time\":111000,\"words\":370}\n/* @jsx mdx */\n\nexport const choices = {};\nexport { freePrisoners as event } from '../../reducers';\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"release\"\n    }}>{`Release`}</h1>\n    <p>{`You hit the button labeled “Release Subjects”. At first it not obvious that\nanything is happening. But then you start to see the status column on the screen\nchange for each of the subjects, going from “In Simulation” to \"Simulation\nDisabled\". Then suddenly the lights dim, an an alarm starts to sound. Looks like\nwhatever you did attracted some attention.`}</p>\n    <p>{`You think about leaving, but just then you hear a rush of noise past the door.\nYou can’t tell exactly what it is but it sounds like a mix of confused prisoners\nand guards. You stand up and move close to the door and then stand up against\nthe wall out of sight.`}</p>\n    <p>{`Through the door you can hear someone shout \"Call backup from the guard house,\nwe need help getting these folks back. Then the sound of the scuffle seems to\nmove farther way down another hall. You think you can leave safely now.`}</p>\n    <p>{`You decide to chance it. You come out to an empty hall. The alarm siren and\nlights are still flashing. You make your way up the hall slowly towards the exit\nand the guard house. You round the corner of the hall, and you can see it’s a\nstraight shot. You hear commotion from the room on your right where it sounds\nlike the guards are distracted, fighting with the prisoners. `}</p>\n    <p>{`You start walking quickly towards the exit, and then once you’re past the room,\nbreaking into a run. No one is at the guard house now, and you have a clear path\nto the exit.`}</p>\n    <p>{`You sprint through the doors, out into the sunlight. You slow for a second as it\nblinds you, but your eyes quickly adjust. You’re in a parking lot in front of a\nnon-descript gray building. `}</p>\n    <p>{`The lot is mostly empty, but right near the entrance there’s actually a delivery\nvan of some sort, and it appears to be idling without a driver. You don’t\nhesistate, you just jump in and drive. You don’t know where you are, or where\nyou’re going, but at least you got out of there, whatever it was.`}</p>\n    <p><strong parentName=\"p\">{`The End. Congratulations you escaped!`}</strong></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.52,\"time\":31200.000000000004,\"words\":104}\n/* @jsx mdx */\n\nexport const choices = ({\n  hasHeadband\n}) => {\n  const baseChoices = {\n    shimmering_clearing: \"Go back to the clearing\",\n    enter_the_glitch: \"Walk into the stream and through the split\"\n  };\n\n  if (hasHeadband) {\n    baseChoices.escape = \"Put the headband on, and then walk through the split\";\n  }\n\n  return baseChoices;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"throwing-a-rock-in-the-stream\"\n    }}>{`Throwing a Rock in the Stream`}</h1>\n    <p>{`You pickup a rock from the bank and throw it towards where the stream splits.\nWhen it hits the split, you suddently see two rocks, each headed down a\ndifferent side of the split, but otherwise following the same trajectory. They\nboth land in the stream at the same time with a solid splash.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.565,\"time\":33900,\"words\":113}\n/* @jsx mdx */\n\nexport const choices = {\n  escape: \"Oops, lets go back to where you woke up\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"security-center\"\n    }}>{`Security Center`}</h1>\n    <p>{`You open the door to the security center. The guards turn to stare and for a\nmoment everyone is quiet and confused. Then suddenly one of the guards stands up\nand says “Hey, this one’s loose”. The rest of them quickly spring into action,\ndrawing guns, or moving to tackle you. You briefly try to fight them off, but\nthere are too many. You feel a blow to the back of you head before blacking out.\nAs your conciousness fades, you wonder how you thought this wouldn’t go badly\nwhen you opened that door.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.23,\"time\":13800,\"words\":46}\n/* @jsx mdx */\n\nexport const choices = {\n  terminal: \"Sit down at the terminal\",\n  outside_server_room: \"Leave the room\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"server-room\"\n    }}>{`Server Room`}</h1>\n    <p>{`You enter the server room. You see row after row of machines, whirring and\nblinking. Off to the right there is a small desk with a terminal. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.635,\"time\":38100,\"words\":127}\n/* @jsx mdx */\n\nexport const choices = {\n  the_glitch: \"Examine the shimmering from the other side\",\n  start: \"Head back to the house\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"shimmering-clearing\"\n    }}>{`Shimmering Clearing`}</h1>\n    <p>{`You come up to the clearing, where the stream splits. You cross over the bridge\nand pause to examine the fork in the stream behind you. You look closer, and you\nrealize there’s something strange about the water. Both sides of the fork are\ncompletely identical. The same rocks, the same blades of grass on the banks. You\nlook closely and realize you even see the same fish, swimming in synchronizeed\nmotion on both sides of the split.`}</p>\n    <p>{`You look closely at the exact spot where the stream splits. The strange shimmer\nyou saw from a distance earlier is even more strongly pronounced here. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.455,\"time\":27300,\"words\":91}\n/* @jsx mdx */\nimport {useSelector} from 'react-redux';\n\nexport const choices = ({\n  hasMap\n}) => {\n  const baseChoices = {\n    north: \"Go north\",\n    [hasMap ? 'empty_mailbox' : 'mailbox']: \"Open mailbox\",\n    house: \"Climb into the house through the window\"\n  };\n\n  if (hasMap) {\n    baseChoices.east = \"Go east\";\n  }\n\n  return baseChoices;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"west-of-house\"\n    }}>{`West of House`}</h1>\n    <p>{`You are standing in an open field west of a white house, with a boarded front\ndoor, and a broken window.`}</p>\n    <p>{`There is a small mailbox here and a path leading north. There’s nothing else as\nfar as you can see in any direction.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.415,\"time\":24900,\"words\":83}\n/* @jsx mdx */\n\nexport const choices = {\n  release_all_subjects: \"Hit the button\",\n  server_room: \"Stand up\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"terminal\"\n    }}>{`Terminal`}</h1>\n    <p>{`The terminal appears to be unlocked and has a curses style command line\ninterface open. The title at the top says \"Experimental Simulation Subject\nMonitoring\". Below that there’s a table with a list of names in one column, and\nthe status “In Simulation” repeated next to them in another column. At the\nbottom of the screen there are a few buttons, including one that catches your\neye labeled “Release Subjects”`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.87,\"time\":52200,\"words\":174}\n/* @jsx mdx */\n\nexport const choices = ({\n  hasHeadband\n}) => {\n  const baseChoices = {\n    shimmering_clearing: \"Go back to the clearing\",\n    rock: \"Pickup a rock and toss it into the glitch\",\n    enter_the_glitch: \"Walk into the stream and through the split\"\n  };\n\n  if (hasHeadband) {\n    baseChoices.escape = \"Put the headband on, and then walk through the split\";\n  }\n\n  return baseChoices;\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"the-shimmering\"\n    }}>{`The Shimmering`}</h1>\n    <p>{`You cross the bridge back to the other side and stand on a gravely bank just a few\nfeet back from the split. The water runs over small stones and pebbles right in\nfront of your feet.`}</p>\n    <p>{`From the other side the shimmering is even stronger. From this angle you can see\nthe fork is nothing like anything you’ve seen before. The stream splits like a\nbeam of light through glass. Right by the shimmering,  The two sides are\ncompletely identical in every way. But as you look closer you can see things\nstart to diverge a few feet away, until obvious differences like the bridge on\none side, and not on the other are clearly visible.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.54,\"time\":32400.000000000007,\"words\":108}\n/* @jsx mdx */\n\nexport const choices = {\n  long_hallway: \"Head towards the guard house\",\n  outside_security_center: \"Go towards the security center\",\n  outside_experimental_room: \"Go towards the experimental room\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  choices\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"windowless-hallway\"\n    }}>{`Windowless Hallway`}</h1>\n    <p>{`At the end of the windowless hallway the hall splits like a T, heading off in\neither direction. There’s another sign here`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`← Guard House (Exit)\nExperimental Room →`}</p>\n    </blockquote>\n    <p>{`To the left you hear sounds of conversation. You can make out the light of a\ndoor, and a small wire guard station just before it.`}</p>\n    <p>{`To the right, you see another door just a few feet down the hall. You shouldn’t\nlinger here for long, you feel very exposed.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","import React from \"react\";\nimport styles from \"./home.module.css\";\nimport Masonry from \"react-masonry-component\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport {\n  Header,\n  Subheader,\n  Tile,\n  DecoderRings,\n  ColorButton\n} from \"axon-component-library\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Home() {\n  return (\n    <div className={styles.wrapper}>\n      <Masonry options={{ horizontalOrder: false }}>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Welcome\" />\n          <p>\n            To get started on the Herrmann Coding Exercise\n            use the link below to view the exercise overview.\n            If you've already read the overview, you can play with the\n            choose your own adventure game with the tile\n            to the right.\n          </p>\n          <div>\n            <Link to=\"/content/overview\"><ColorButton variant=\"green\" buttonText=\"Overview\" /></Link>\n          </div>\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Start Your Adventure\" />\n          <p>\n            Click Below to start your \"Choose your own Adventure\" experience!\n          </p>\n          <div>\n            <Link to=\"/adventure/start\"><ColorButton variant=\"green\" buttonText=\"Begin\" /></Link>\n          </div>\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Track your Adventure\" />\n          <DecoderRings delay={1} />\n        </Tile>\n        <Tile className={styles.tile}>\n          <Subheader title=\"Resources\" />\n          <ul className={styles.resourcesList}>\n            <li>\n              <Link to=\"/content/faqs\">\n                <FontAwesomeIcon icon={[\"fas\", \"question\"]} />\n                FAQs\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/content/app-overview\">\n                <FontAwesomeIcon icon={[\"fas\", \"map\"]} />\n                App Overview\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/content/frameworks\">\n                <FontAwesomeIcon icon={[\"fas\", \"book\"]} />\n                Frameworks in this App\n              </Link>\n            </li>\n            <li>\n              <a href=\"https://myelin.herrmannsolutions.net/\">\n                <FontAwesomeIcon icon={[\"fas\", \"puzzle-piece\"]} />\n                Herrmann Component Library\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/think-herrmann/front-end-adventure\">\n                <FontAwesomeIcon icon={[\"fab\", \"github-alt\"]} />\n                GitHub Repository\n              </a>\n            </li>\n          </ul>\n        </Tile>\n      </Masonry>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Tile } from \"axon-component-library\";\nimport {useParams} from 'react-router-dom'\n\nimport styles from './markdown-content.module.css';\n\nconst pages = {};\n\nfunction importAll (r) {\n  r.keys().forEach(key => pages[key.replace(\".mdx\",\"\").replace(\"./\",\"\")] = r(key).default);\n}\n\nimportAll(require.context('../../content/', false, /\\.mdx$/));\n\nfunction MarkdownContent() {\n  let {id} = useParams();\n  const Content = pages[id];\n\n  return (\n    <Tile className={styles.content}>\n      <span></span>\n      <Content />\n    </Tile>\n  );\n}\n\nexport default MarkdownContent;\n","import React, { useEffect } from \"react\";\nimport { Tile } from \"axon-component-library\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport styles from \"./adventure-page.module.css\";\n\nconst pages = {};\n\n// Some webpack magic to import all the mdx files which have adventure content.\n// The end result is a pages object where the basename of the file is the key\n// and the value is an object of the form\n// {\n//   component: //The React component generated by MDX which has the page content,\n//   choices: // The object defining the links that continue the story from this page,\n//   event: // An optional function to fire when this page is visited. Used to advance the story with events \n// }\nfunction importAll(r) {\n  r.keys().forEach((key) => {\n    const page = {\n      component: r(key).default,\n      choices: r(key).choices,\n      event: r(key).event,\n    };\n    pages[key.replace(\".mdx\", \"\").replace(\"./\", \"\")] = page;\n  });\n}\n\nimportAll(require.context(\"../../content/adventure\", false, /\\.mdx$/));\n\nfunction AdventurePage(props) {\n  let { id } = useParams();\n  const dispatch = useDispatch();\n  const storyEvents = useSelector((state) => state.storyEvents);\n\n  const page = pages[id] || pages[\"not-found\"];\n  const Content = page.component;\n  const choices =\n    typeof page.choices == \"function\"\n      ? page.choices(storyEvents)\n      : page.choices;\n\n  useEffect(() => {\n    page.event && dispatch(page.event());\n  });\n\n  return (\n    <Tile className={styles.content}>\n      <Content />\n      {Object.entries(choices).map(([key, value]) => {\n        return (\n          <div key={key}>\n            <Link to={`/adventure/${key}`}> {value} </Link>\n          </div>\n        );\n      })}\n    </Tile>\n  );\n}\n\nexport default AdventurePage;\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport Masonry from \"react-masonry-component\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Header } from \"axon-component-library\";\nimport { Provider } from \"react-redux\";\nimport \"axon-component-library/dist/global-styles.css\";\n\nimport store from './store';\nimport Home from \"./components/home\";\nimport MarkdownContent from \"./components/markdown-content\";\nimport AdventurePage from \"./components/adventure-page\";\n\nconst basename =\n  process.env.NODE_ENV == \"production\" ? \"/front-end-adventure\" : \"/\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={basename}>\n        <div className={styles.pageWrapper}>\n          <div className={styles.contentWrapper}>\n            <div className={styles.tileWrapper}>\n              <Header tileOverlap={true} />\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/content/:id\" component={MarkdownContent} />\n              <Route path=\"/adventure/:id\" component={AdventurePage} />\n            </div>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"App_pageWrapper__3Xtym\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"tileWrapper\":\"App_tileWrapper__3Iv0P\"};"],"sourceRoot":""}